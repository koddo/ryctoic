;; Analyzed by ClojureScript 1.7.48
{:name ryctoic.async-error-handling-helpers, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires nil, :imports nil, :defs {error? {:protocol-inline nil, :meta {:file "/home/theuser/ryctoic/client-web/src/ryctoic/async-error-handling.cljs", :line 3, :column 7, :end-line 3, :end-column 13, :arglists (quote ([x]))}, :name ryctoic.async-error-handling-helpers/error?, :variadic false, :file "src/ryctoic/async-error-handling.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 3, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, throw-err {:protocol-inline nil, :meta {:file "/home/theuser/ryctoic/client-web/src/ryctoic/async-error-handling.cljs", :line 6, :column 7, :end-line 6, :end-column 16, :arglists (quote ([e]))}, :name ryctoic.async-error-handling-helpers/throw-err, :variadic false, :file "src/ryctoic/async-error-handling.cljs", :end-column 16, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}}}