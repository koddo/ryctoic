;; Analyzed by ClojureScript 0.0-3165
{:defs {on-changes {:file "../priv/static/js/compiled/out/re_frame/core.cljs", :meta {:file nil, :end-column 16, :end-line 34, :column 6, :line 34}, :line 34, :column 1, :end-line 34, :end-column 16, :test true, :name re-frame.core/on-changes}, pure {:file "../priv/static/js/compiled/out/re_frame/core.cljs", :meta {:file nil, :end-column 10, :end-line 23, :column 6, :line 23}, :line 23, :column 1, :end-line 23, :end-column 10, :test true, :name re-frame.core/pure}, enrich {:file "../priv/static/js/compiled/out/re_frame/core.cljs", :meta {:file nil, :end-column 12, :end-line 27, :column 6, :line 27}, :line 27, :column 1, :end-line 27, :end-column 12, :test true, :name re-frame.core/enrich}, subscribe {:file "../priv/static/js/compiled/out/re_frame/core.cljs", :meta {:file nil, :end-column 15, :end-line 17, :column 6, :line 17}, :line 17, :column 1, :end-line 17, :end-column 15, :test true, :name re-frame.core/subscribe}, register-sub {:file "../priv/static/js/compiled/out/re_frame/core.cljs", :meta {:file nil, :end-column 18, :end-line 15, :column 6, :line 15}, :line 15, :column 1, :end-line 15, :end-column 18, :test true, :name re-frame.core/register-sub}, path {:file "../priv/static/js/compiled/out/re_frame/core.cljs", :meta {:file nil, :end-column 10, :end-line 26, :column 6, :line 26}, :line 26, :column 1, :end-line 26, :end-column 10, :test true, :name re-frame.core/path}, log-ex {:file "../priv/static/js/compiled/out/re_frame/core.cljs", :meta {:file nil, :end-column 12, :end-line 30, :column 6, :line 30}, :line 30, :column 1, :end-line 30, :end-column 12, :test true, :name re-frame.core/log-ex}, dispatch-sync {:file "../priv/static/js/compiled/out/re_frame/core.cljs", :meta {:file nil, :end-column 19, :end-line 13, :column 6, :line 13}, :line 13, :column 1, :end-line 13, :end-column 19, :test true, :name re-frame.core/dispatch-sync}, set-loggers! {:file "../priv/static/js/compiled/out/re_frame/core.cljs", :meta {:file nil, :end-column 18, :end-line 42, :column 6, :line 42}, :line 42, :column 1, :end-line 42, :end-column 18, :test true, :name re-frame.core/set-loggers!}, undoable {:file "../priv/static/js/compiled/out/re_frame/core.cljs", :meta {:file nil, :end-column 14, :end-line 25, :column 6, :line 25}, :line 25, :column 1, :end-line 25, :end-column 14, :test true, :name re-frame.core/undoable}, debug {:file "../priv/static/js/compiled/out/re_frame/core.cljs", :meta {:file nil, :end-column 11, :end-line 24, :column 6, :line 24}, :line 24, :column 1, :end-line 24, :end-column 11, :test true, :name re-frame.core/debug}, clear-sub-handlers! {:file "../priv/static/js/compiled/out/re_frame/core.cljs", :meta {:file nil, :end-column 25, :end-line 16, :column 6, :line 16}, :line 16, :column 1, :end-line 16, :end-column 25, :test true, :name re-frame.core/clear-sub-handlers!}, trim-v {:file "../priv/static/js/compiled/out/re_frame/core.cljs", :meta {:file nil, :end-column 12, :end-line 28, :column 6, :line 28}, :line 28, :column 1, :end-line 28, :end-column 12, :test true, :name re-frame.core/trim-v}, dispatch {:file "../priv/static/js/compiled/out/re_frame/core.cljs", :meta {:file nil, :end-column 14, :end-line 12, :column 6, :line 12}, :line 12, :column 1, :end-line 12, :end-column 14, :test true, :name re-frame.core/dispatch}, after {:file "../priv/static/js/compiled/out/re_frame/core.cljs", :meta {:file nil, :end-column 11, :end-line 29, :column 6, :line 29}, :line 29, :column 1, :end-line 29, :end-column 11, :test true, :name re-frame.core/after}, clear-event-handlers! {:file "../priv/static/js/compiled/out/re_frame/core.cljs", :meta {:file nil, :end-column 27, :end-line 20, :column 6, :line 20}, :line 20, :column 1, :end-line 20, :end-column 27, :test true, :name re-frame.core/clear-event-handlers!}, register-handler {:protocol-inline nil, :meta {:file nil, :arglists (quote ([id handler] [id middleware handler])), :end-column 23, :end-line 49, :column 7, :line 49}, :name re-frame.core/register-handler, :variadic false, :file "../priv/static/js/compiled/out/re_frame/core.cljs", :end-column 23, :method-params ([id handler] [id middleware handler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 2} {:tag #{nil any}, :variadic false, :max-fixed-arity 3}), :line 49, :end-line 49, :max-fixed-arity 3, :fn-var true, :arglists (quote ([id handler] [id middleware handler])), :test true}}, :imports nil, :requires {subs re-frame.subs, router re-frame.router, re-frame.router re-frame.router, re-frame.utils re-frame.utils, re-frame.handlers re-frame.handlers, handlers re-frame.handlers, re-frame.subs re-frame.subs, re-frame.middleware re-frame.middleware, middleware re-frame.middleware, utils re-frame.utils}, :uses nil, :require-macros nil, :use-macros nil, :excludes #{}, :doc nil, :name re-frame.core}