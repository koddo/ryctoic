;; Analyzed by ClojureScript 0.0-3165
{:defs {->SkipListNode {:protocol-inline nil, :meta {:file nil, :arglists (quote ([key val forward])), :factory :positional, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IPrintWithWriter}, :protocols #{cljs.core/ISeqable cljs.core/IPrintWithWriter}, :end-column 22, :end-line 25, :column 10, :line 25}, :protocols #{cljs.core/ISeqable cljs.core/IPrintWithWriter}, :name cljs.core.async.impl.timers/->SkipListNode, :variadic false, :file "../www/static/js/compiled/out/cljs/core/async/impl/timers.cljs", :end-column 22, :method-params ([key val forward]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :methods ({:tag cljs.core.async.impl.timers/SkipListNode, :variadic false, :max-fixed-arity 3}), :line 25, :end-line 25, :max-fixed-arity 3, :fn-var true, :arglists (quote ([key val forward])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IPrintWithWriter}, :test true}, timeout {:protocol-inline nil, :meta {:file nil, :arglists (quote ([msecs])), :doc "returns a channel that will close after msecs", :end-column 14, :end-line 152, :column 7, :line 152}, :name cljs.core.async.impl.timers/timeout, :variadic false, :file "../www/static/js/compiled/out/cljs/core/async/impl/timers.cljs", :end-column 14, :method-params ([msecs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic false, :max-fixed-arity 1}), :line 152, :end-line 152, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msecs])), :doc "returns a channel that will close after msecs", :test true}, random-level {:protocol-inline nil, :meta {:file nil, :arglists (quote ([] [level])), :end-column 19, :end-line 17, :column 7, :line 17}, :name cljs.core.async.impl.timers/random-level, :variadic false, :file "../www/static/js/compiled/out/cljs/core/async/impl/timers.cljs", :end-column 19, :method-params ([] [level]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0} {:variadic false, :max-fixed-arity 1}), :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([] [level])), :test true}, SkipList {:num-fields 2, :protocols #{cljs.core.async.impl.timers/Object cljs.core/ISeqable cljs.core/IPrintWithWriter}, :name cljs.core.async.impl.timers/SkipList, :file "../www/static/js/compiled/out/cljs/core/async/impl/timers.cljs", :end-column 18, :type true, :column 10, :line 59, :record false, :end-line 59, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IPrintWithWriter}}, skip-list {:protocol-inline nil, :meta {:file nil, :arglists (quote ([])), :end-column 16, :end-line 145, :column 7, :line 145}, :name cljs.core.async.impl.timers/skip-list, :variadic false, :file "../www/static/js/compiled/out/cljs/core/async/impl/timers.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core.async.impl.timers/SkipList, :variadic false, :max-fixed-arity 0}), :line 145, :end-line 145, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, ->SkipList {:protocol-inline nil, :meta {:file nil, :arglists (quote ([header level])), :factory :positional, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IPrintWithWriter}, :protocols #{cljs.core.async.impl.timers/Object cljs.core/ISeqable cljs.core/IPrintWithWriter}, :end-column 18, :end-line 59, :column 10, :line 59}, :protocols #{cljs.core.async.impl.timers/Object cljs.core/ISeqable cljs.core/IPrintWithWriter}, :name cljs.core.async.impl.timers/->SkipList, :variadic false, :file "../www/static/js/compiled/out/cljs/core/async/impl/timers.cljs", :end-column 18, :method-params ([header level]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :methods ({:tag cljs.core.async.impl.timers/SkipList, :variadic false, :max-fixed-arity 2}), :line 59, :end-line 59, :max-fixed-arity 2, :fn-var true, :arglists (quote ([header level])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IPrintWithWriter}, :test true}, MAX_LEVEL {:file "../www/static/js/compiled/out/cljs/core/async/impl/timers.cljs", :meta {:file nil, :end-column 15, :end-line 14, :column 6, :line 14}, :line 14, :column 1, :end-line 14, :end-column 15, :test true, :name cljs.core.async.impl.timers/MAX_LEVEL}, P {:file "../www/static/js/compiled/out/cljs/core/async/impl/timers.cljs", :meta {:file nil, :end-column 7, :end-line 15, :column 6, :line 15}, :line 15, :column 1, :end-line 15, :end-column 7, :test true, :name cljs.core.async.impl.timers/P}, timeouts-map {:file "../www/static/js/compiled/out/cljs/core/async/impl/timers.cljs", :meta {:file nil, :end-column 18, :end-line 148, :column 6, :line 148}, :line 148, :column 1, :end-line 148, :end-column 18, :test true, :name cljs.core.async.impl.timers/timeouts-map}, SkipListNode {:num-fields 3, :protocols #{cljs.core/ISeqable cljs.core/IPrintWithWriter}, :name cljs.core.async.impl.timers/SkipListNode, :file "../www/static/js/compiled/out/cljs/core/async/impl/timers.cljs", :end-column 22, :type true, :column 10, :line 25, :record false, :end-line 25, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IPrintWithWriter}}, skip-list-node {:protocol-inline nil, :meta {:file nil, :arglists (quote ([level] [k v level])), :end-column 21, :end-line 34, :column 7, :line 34}, :name cljs.core.async.impl.timers/skip-list-node, :variadic false, :file "../www/static/js/compiled/out/cljs/core/async/impl/timers.cljs", :end-column 21, :method-params ([level] [k v level]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core.async.impl.timers/SkipListNode, :variadic false, :max-fixed-arity 1} {:tag cljs.core.async.impl.timers/SkipListNode, :variadic false, :max-fixed-arity 3}), :line 34, :end-line 34, :max-fixed-arity 3, :fn-var true, :arglists (quote ([level] [k v level])), :test true}, least-greater-node {:protocol-inline nil, :meta {:file nil, :arglists (quote ([x k level] [x k level update])), :end-column 25, :end-line 44, :column 7, :line 44}, :name cljs.core.async.impl.timers/least-greater-node, :variadic false, :file "../www/static/js/compiled/out/cljs/core/async/impl/timers.cljs", :end-column 25, :method-params ([x k level] [x k level update]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 3} {:variadic false, :max-fixed-arity 4}), :line 44, :end-line 44, :max-fixed-arity 4, :fn-var true, :arglists (quote ([x k level] [x k level update])), :test true}, TIMEOUT_RESOLUTION_MS {:file "../www/static/js/compiled/out/cljs/core/async/impl/timers.cljs", :meta {:file nil, :end-column 27, :end-line 150, :column 6, :line 150}, :line 150, :column 1, :end-line 150, :end-column 27, :test true, :name cljs.core.async.impl.timers/TIMEOUT_RESOLUTION_MS}}, :imports nil, :requires {dispatch cljs.core.async.impl.dispatch, cljs.core.async.impl.dispatch cljs.core.async.impl.dispatch, channels cljs.core.async.impl.channels, cljs.core.async.impl.channels cljs.core.async.impl.channels, cljs.core.async.impl.protocols cljs.core.async.impl.protocols, impl cljs.core.async.impl.protocols}, :uses nil, :require-macros nil, :use-macros nil, :excludes #{}, :doc nil, :name cljs.core.async.impl.timers}