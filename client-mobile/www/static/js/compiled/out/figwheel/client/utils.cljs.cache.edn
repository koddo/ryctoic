;; Analyzed by ClojureScript 0.0-3165
{:use-macros nil, :excludes #{}, :name figwheel.client.utils, :imports nil, :requires nil, :uses nil, :defs {log {:protocol-inline nil, :meta {:file nil, :arglists (quote ([x] [level arg])), :end-column 10, :end-line 25, :column 7, :line 25}, :name figwheel.client.utils/log, :variadic false, :file "../www/static/js/compiled/out/figwheel/client/utils.cljs", :end-column 10, :method-params ([x] [level arg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1} {:tag any, :variadic false, :max-fixed-arity 2}), :line 25, :end-line 25, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x] [level arg])), :test true}, debug-prn {:protocol-inline nil, :meta {:file nil, :arglists (quote ([o])), :end-column 16, :end-line 17, :column 7, :line 17}, :name figwheel.client.utils/debug-prn, :variadic false, :file "../www/static/js/compiled/out/figwheel/client/utils.cljs", :end-column 16, :method-params ([o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic false, :max-fixed-arity 1}), :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([o])), :test true}, host-env? {:protocol-inline nil, :meta {:file nil, :arglists (quote ([])), :end-column 16, :end-line 11, :column 7, :line 11}, :name figwheel.client.utils/host-env?, :variadic false, :file "../www/static/js/compiled/out/figwheel/client/utils.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/Keyword, :variadic false, :max-fixed-arity 0}), :line 11, :end-line 11, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, node-env? {:protocol-inline nil, :meta {:file nil, :arglists (quote ([])), :end-column 16, :end-line 9, :column 7, :line 9}, :name figwheel.client.utils/node-env?, :variadic false, :file "../www/static/js/compiled/out/figwheel/client/utils.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag boolean, :variadic false, :max-fixed-arity 0}), :line 9, :end-line 9, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, html-env? {:protocol-inline nil, :meta {:file nil, :arglists (quote ([])), :end-column 16, :end-line 7, :column 7, :line 7}, :name figwheel.client.utils/html-env?, :variadic false, :file "../www/static/js/compiled/out/figwheel/client/utils.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 7, :end-line 7, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, *print-debug* {:file "../www/static/js/compiled/out/figwheel/client/utils.cljs", :meta {:file nil, :dynamic true, :end-column 29, :end-line 5, :column 16, :line 5}, :line 5, :column 1, :end-line 5, :end-column 29, :dynamic true, :test true, :name figwheel.client.utils/*print-debug*}}, :require-macros nil, :cljs.analyzer/constants {:order [:html :node :else :info :warn :debug :error], :seen #{:else :warn :debug :node :info :error :html}}, :doc nil}