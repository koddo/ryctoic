// Compiled by ClojureScript 0.0-3165 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-3165";
cljs.core._STAR_unchecked_if_STAR_ = false;
/**
 * Var bound to the name value of the compiler build :target option.
 * For example, if the compiler build :target is :nodejs, *target* will be bound
 * to "nodejs". *target* is a Google Closure define and can be set by compiler
 * :closure-defines option.
 * @define {string}
 */
cljs.core._STAR_target_STAR_ = "default";
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
 * Each runtime environment provides a different way to print output.
 * Whatever function *print-fn* is bound to will be passed any
 * Strings which should be printed.
 */
cljs.core._STAR_print_fn_STAR_ = (function cljs$core$_STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
 * Set *print-fn* to f.
 */
cljs.core.set_print_fn_BANG_ = (function cljs$core$set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
/**
 * When set to true, output will be flushed whenever a newline is printed.
 * 
 * Defaults to true.
 */
cljs.core._STAR_flush_on_newline_STAR_ = true;
/**
 * When set to logical false will drop newlines from printing calls.
 * This is to work around the implicit newlines emitted by standard JavaScript
 * console objects.
 */
cljs.core._STAR_print_newline_STAR_ = true;
/**
 * When set to logical false, strings and characters will be printed with
 * non-alphanumeric characters converted to the appropriate escape sequences.
 * 
 * Defaults to true
 */
cljs.core._STAR_print_readably_STAR_ = true;
/**
 * If set to logical true, when printing an object, its metadata will also
 * be printed in a form that can be read back by the reader.
 * 
 * Defaults to false.
 */
cljs.core._STAR_print_meta_STAR_ = false;
/**
 * When set to logical true, objects will be printed in a way that preserves
 * their type when read in later.
 * 
 * Defaults to false.
 */
cljs.core._STAR_print_dup_STAR_ = false;
/**
 * When set to logical true, objects will be printed in a way that preserves
 * their type when read in later.
 * 
 * Defaults to false.
 */
cljs.core._STAR_print_length_STAR_ = null;
/**
 * *print-level* controls how many levels deep the printer will
 * print nested objects. If it is bound to logical false, there is no
 * limit. Otherwise, it must be bound to an integer indicating the maximum
 * level to print. Each argument to print is at level 0; if an argument is a
 * collection, its items are at level 1; and so on. If an object is a
 * collection and is at a level greater than or equal to the value bound to
 * *print-level*, the printer prints '#' to represent it. The root binding
 * is nil indicating no limit.
 */
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function cljs$core$pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
 * Set *print-fn* to console.log
 */
cljs.core.enable_console_print_BANG_ = (function cljs$core$enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__5272__delegate = function (args){
return console.log.apply(console,(function (){var G__5271 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__5271) : cljs.core.into_array.call(null,G__5271));
})());
};
var G__5272 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__5273__i = 0, G__5273__a = new Array(arguments.length -  0);
while (G__5273__i < G__5273__a.length) {G__5273__a[G__5273__i] = arguments[G__5273__i + 0]; ++G__5273__i;}
  args = new cljs.core.IndexedSeq(G__5273__a,0);
} 
return G__5272__delegate.call(this,args);};
G__5272.cljs$lang$maxFixedArity = 0;
G__5272.cljs$lang$applyTo = (function (arglist__5274){
var args = cljs.core.seq(arglist__5274);
return G__5272__delegate(args);
});
G__5272.cljs$core$IFn$_invoke$arity$variadic = G__5272__delegate;
return G__5272;
})()
;
});
/**
 * Internal - do not use!
 */
cljs.core.truth_ = (function cljs$core$truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
 * Tests if 2 arguments are the same object
 */
cljs.core.identical_QMARK_ = (function cljs$core$identical_QMARK_(x,y){
return (x === y);
});
/**
 * Returns true if x is nil, false otherwise.
 */
cljs.core.nil_QMARK_ = (function cljs$core$nil_QMARK_(x){
return (x == null);
});
/**
 * Returns true if x is a JavaScript array.
 */
cljs.core.array_QMARK_ = (function cljs$core$array_QMARK_(x){
if((cljs.core._STAR_target_STAR_ === "nodejs")){
return Array.isArray(x);
} else {
return (x instanceof Array);
}
});
/**
 * Returns true if x is a JavaScript number.
 */
cljs.core.number_QMARK_ = (function cljs$core$number_QMARK_(n){
return typeof n === 'number';
});
/**
 * Returns true if x is logical false, false otherwise.
 */
cljs.core.not = (function cljs$core$not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
 * Returns true if x is not nil, false otherwise.
 */
cljs.core.some_QMARK_ = (function cljs$core$some_QMARK_(x){
return !((x == null));
});
/**
 * Returns true if x's constructor is Object
 */
cljs.core.object_QMARK_ = (function cljs$core$object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
/**
 * Returns true if x is a JavaScript string.
 */
cljs.core.string_QMARK_ = (function cljs$core$string_QMARK_(x){
var G__5276 = x;
return goog.isString(G__5276);
});
/**
 * Internal - do not use!
 */
cljs.core.native_satisfies_QMARK_ = (function cljs$core$native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__5278 = x__$1;
return goog.typeOf(G__5278);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function cljs$core$is_proto_(x){
return (x.constructor.prototype === x);
});
/**
 * When compiled for a command-line target, whatever
 * function *main-fn* is set to will be called with the command-line
 * argv as arguments
 */
cljs.core._STAR_main_cli_fn_STAR_ = null;
/**
 * Return x's constructor.
 */
cljs.core.type = (function cljs$core$type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function cljs$core$missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3755__auto__ = ty;
if(cljs.core.truth_(and__3755__auto__)){
return ty.cljs$lang$type;
} else {
return and__3755__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__5280 = obj;
return goog.typeOf(G__5280);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function cljs$core$type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function cljs$core$load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.nodeGlobalRequire(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__5282 = Symbol;
return goog.typeOf(G__5282);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
/**
 * Construct a JavaScript array of specified size. Accepts ignored type
 * argument for compatibility with Clojure.
 */
cljs.core.make_array = (function() {
var cljs$core$make_array = null;
var cljs$core$make_array__1 = (function (size){
return (new Array(size));
});
var cljs$core$make_array__2 = (function (type,size){
return cljs$core$make_array.cljs$core$IFn$_invoke$arity$1(size);
});
cljs$core$make_array = function(type,size){
switch(arguments.length){
case 1:
return cljs$core$make_array__1.call(this,type);
case 2:
return cljs$core$make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$make_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$make_array__1;
cljs$core$make_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$make_array__2;
return cljs$core$make_array;
})()
;
/**
 * Returns a javascript array, cloned from the passed in array
 */
cljs.core.aclone = (function cljs$core$aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4652__auto___5284 = len;
var i_5285 = (0);
while(true){
if((i_5285 < n__4652__auto___5284)){
(new_arr[i_5285] = (arr[i_5285]));

var G__5286 = (i_5285 + (1));
i_5285 = G__5286;
continue;
} else {
}
break;
}

return new_arr;
});
/**
 * Creates a new javascript array.
 * @param {...*} var_args
 */
cljs.core.array = (function cljs$core$array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__5287 = (i + (1));
i = G__5287;
continue;
} else {
return a;
}
break;
}
});
/**
 * Returns the value at the index.
 * @param {...*} var_args
 */
cljs.core.aget = (function() {
var cljs$core$aget = null;
var cljs$core$aget__2 = (function (array,i){
return (array[i]);
});
var cljs$core$aget__3 = (function() { 
var G__5296__delegate = function (array,i,idxs){
var G__5293 = cljs$core$aget;
var G__5294 = cljs$core$aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__5295 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__5293,G__5294,G__5295) : cljs.core.apply.call(null,G__5293,G__5294,G__5295));
};
var G__5296 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__5297__i = 0, G__5297__a = new Array(arguments.length -  2);
while (G__5297__i < G__5297__a.length) {G__5297__a[G__5297__i] = arguments[G__5297__i + 2]; ++G__5297__i;}
  idxs = new cljs.core.IndexedSeq(G__5297__a,0);
} 
return G__5296__delegate.call(this,array,i,idxs);};
G__5296.cljs$lang$maxFixedArity = 2;
G__5296.cljs$lang$applyTo = (function (arglist__5298){
var array = cljs.core.first(arglist__5298);
arglist__5298 = cljs.core.next(arglist__5298);
var i = cljs.core.first(arglist__5298);
var idxs = cljs.core.rest(arglist__5298);
return G__5296__delegate(array,i,idxs);
});
G__5296.cljs$core$IFn$_invoke$arity$variadic = G__5296__delegate;
return G__5296;
})()
;
cljs$core$aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return cljs$core$aget__2.call(this,array,i);
default:
var G__5299 = null;
if (arguments.length > 2) {
var G__5300__i = 0, G__5300__a = new Array(arguments.length -  2);
while (G__5300__i < G__5300__a.length) {G__5300__a[G__5300__i] = arguments[G__5300__i + 2]; ++G__5300__i;}
G__5299 = new cljs.core.IndexedSeq(G__5300__a,0);
}
return cljs$core$aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__5299);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$aget.cljs$lang$maxFixedArity = 2;
cljs$core$aget.cljs$lang$applyTo = cljs$core$aget__3.cljs$lang$applyTo;
cljs$core$aget.cljs$core$IFn$_invoke$arity$2 = cljs$core$aget__2;
cljs$core$aget.cljs$core$IFn$_invoke$arity$variadic = cljs$core$aget__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$aget;
})()
;
/**
 * Sets the value at the index.
 * @param {...*} var_args
 */
cljs.core.aset = (function() {
var cljs$core$aset = null;
var cljs$core$aset__3 = (function (array,i,val){
return (array[i] = val);
});
var cljs$core$aset__4 = (function() { 
var G__5309__delegate = function (array,idx,idx2,idxv){
var G__5305 = cljs$core$aset;
var G__5306 = (array[idx]);
var G__5307 = idx2;
var G__5308 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__5305,G__5306,G__5307,G__5308) : cljs.core.apply.call(null,G__5305,G__5306,G__5307,G__5308));
};
var G__5309 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__5310__i = 0, G__5310__a = new Array(arguments.length -  3);
while (G__5310__i < G__5310__a.length) {G__5310__a[G__5310__i] = arguments[G__5310__i + 3]; ++G__5310__i;}
  idxv = new cljs.core.IndexedSeq(G__5310__a,0);
} 
return G__5309__delegate.call(this,array,idx,idx2,idxv);};
G__5309.cljs$lang$maxFixedArity = 3;
G__5309.cljs$lang$applyTo = (function (arglist__5311){
var array = cljs.core.first(arglist__5311);
arglist__5311 = cljs.core.next(arglist__5311);
var idx = cljs.core.first(arglist__5311);
arglist__5311 = cljs.core.next(arglist__5311);
var idx2 = cljs.core.first(arglist__5311);
var idxv = cljs.core.rest(arglist__5311);
return G__5309__delegate(array,idx,idx2,idxv);
});
G__5309.cljs$core$IFn$_invoke$arity$variadic = G__5309__delegate;
return G__5309;
})()
;
cljs$core$aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return cljs$core$aset__3.call(this,array,idx,idx2);
default:
var G__5312 = null;
if (arguments.length > 3) {
var G__5313__i = 0, G__5313__a = new Array(arguments.length -  3);
while (G__5313__i < G__5313__a.length) {G__5313__a[G__5313__i] = arguments[G__5313__i + 3]; ++G__5313__i;}
G__5312 = new cljs.core.IndexedSeq(G__5313__a,0);
}
return cljs$core$aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__5312);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$aset.cljs$lang$maxFixedArity = 3;
cljs$core$aset.cljs$lang$applyTo = cljs$core$aset__4.cljs$lang$applyTo;
cljs$core$aset.cljs$core$IFn$_invoke$arity$3 = cljs$core$aset__3;
cljs$core$aset.cljs$core$IFn$_invoke$arity$variadic = cljs$core$aset__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$aset;
})()
;
/**
 * Returns the length of the array. Works on arrays of all types.
 */
cljs.core.alength = (function cljs$core$alength(array){
return array.length;
});
/**
 * Returns an array with components set to the values in aseq. Optional type
 * argument accepted for compatibility with Clojure.
 */
cljs.core.into_array = (function() {
var cljs$core$into_array = null;
var cljs$core$into_array__1 = (function (aseq){
return cljs$core$into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var cljs$core$into_array__2 = (function (type,aseq){
var G__5319 = (function (a,x){
a.push(x);

return a;
});
var G__5320 = [];
var G__5321 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__5319,G__5320,G__5321) : cljs.core.reduce.call(null,G__5319,G__5320,G__5321));
});
cljs$core$into_array = function(type,aseq){
switch(arguments.length){
case 1:
return cljs$core$into_array__1.call(this,type);
case 2:
return cljs$core$into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$into_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$into_array__1;
cljs$core$into_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$into_array__2;
return cljs$core$into_array;
})()
;
/**
 * Invoke JavaScript object method via string. Needed when the
 * string is not a valid unquoted property name.
 * @param {...*} var_args
 */
cljs.core.js_invoke = (function() { 
var cljs$core$js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var cljs$core$js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__5322__i = 0, G__5322__a = new Array(arguments.length -  2);
while (G__5322__i < G__5322__a.length) {G__5322__a[G__5322__i] = arguments[G__5322__i + 2]; ++G__5322__i;}
  args = new cljs.core.IndexedSeq(G__5322__a,0);
} 
return cljs$core$js_invoke__delegate.call(this,obj,s,args);};
cljs$core$js_invoke.cljs$lang$maxFixedArity = 2;
cljs$core$js_invoke.cljs$lang$applyTo = (function (arglist__5323){
var obj = cljs.core.first(arglist__5323);
arglist__5323 = cljs.core.next(arglist__5323);
var s = cljs.core.first(arglist__5323);
var args = cljs.core.rest(arglist__5323);
return cljs$core$js_invoke__delegate(obj,s,args);
});
cljs$core$js_invoke.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js_invoke__delegate;
return cljs$core$js_invoke;
})()
;

/**
 * Marker protocol
 */
cljs.core.Fn = (function (){var obj5325 = {};
return obj5325;
})();


/**
 * Protocol for adding the ability to invoke an object as a function.
 * For example, a vector can also be used to look up a value:
 * ([1 2 3 4] 1) => 2
 */
cljs.core.IFn = (function (){var obj5327 = {};
return obj5327;
})();

cljs.core._invoke = (function() {
var cljs$core$_invoke = null;
var cljs$core$_invoke__1 = (function (this$){
if((function (){var and__3755__auto__ = this$;
if(and__3755__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3755__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3767__auto__ = (cljs.core._invoke[(function (){var G__5373 = x__4403__auto__;
return goog.typeOf(G__5373);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._invoke["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var cljs$core$_invoke__2 = (function (this$,a){
if((function (){var and__3755__auto__ = this$;
if(and__3755__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3755__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3767__auto__ = (cljs.core._invoke[(function (){var G__5375 = x__4403__auto__;
return goog.typeOf(G__5375);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._invoke["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var cljs$core$_invoke__3 = (function (this$,a,b){
if((function (){var and__3755__auto__ = this$;
if(and__3755__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3755__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3767__auto__ = (cljs.core._invoke[(function (){var G__5377 = x__4403__auto__;
return goog.typeOf(G__5377);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._invoke["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var cljs$core$_invoke__4 = (function (this$,a,b,c){
if((function (){var and__3755__auto__ = this$;
if(and__3755__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3755__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3767__auto__ = (cljs.core._invoke[(function (){var G__5379 = x__4403__auto__;
return goog.typeOf(G__5379);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._invoke["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var cljs$core$_invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3755__auto__ = this$;
if(and__3755__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3755__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3767__auto__ = (cljs.core._invoke[(function (){var G__5381 = x__4403__auto__;
return goog.typeOf(G__5381);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._invoke["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var cljs$core$_invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3755__auto__ = this$;
if(and__3755__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3755__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3767__auto__ = (cljs.core._invoke[(function (){var G__5383 = x__4403__auto__;
return goog.typeOf(G__5383);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._invoke["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var cljs$core$_invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3755__auto__ = this$;
if(and__3755__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3755__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3767__auto__ = (cljs.core._invoke[(function (){var G__5385 = x__4403__auto__;
return goog.typeOf(G__5385);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._invoke["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var cljs$core$_invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3755__auto__ = this$;
if(and__3755__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3755__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3767__auto__ = (cljs.core._invoke[(function (){var G__5387 = x__4403__auto__;
return goog.typeOf(G__5387);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._invoke["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var cljs$core$_invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3755__auto__ = this$;
if(and__3755__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3755__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3767__auto__ = (cljs.core._invoke[(function (){var G__5389 = x__4403__auto__;
return goog.typeOf(G__5389);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._invoke["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var cljs$core$_invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3755__auto__ = this$;
if(and__3755__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3755__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3767__auto__ = (cljs.core._invoke[(function (){var G__5391 = x__4403__auto__;
return goog.typeOf(G__5391);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._invoke["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var cljs$core$_invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3755__auto__ = this$;
if(and__3755__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3755__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3767__auto__ = (cljs.core._invoke[(function (){var G__5393 = x__4403__auto__;
return goog.typeOf(G__5393);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._invoke["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var cljs$core$_invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3755__auto__ = this$;
if(and__3755__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3755__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3767__auto__ = (cljs.core._invoke[(function (){var G__5395 = x__4403__auto__;
return goog.typeOf(G__5395);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._invoke["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var cljs$core$_invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3755__auto__ = this$;
if(and__3755__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3755__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3767__auto__ = (cljs.core._invoke[(function (){var G__5397 = x__4403__auto__;
return goog.typeOf(G__5397);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._invoke["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var cljs$core$_invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3755__auto__ = this$;
if(and__3755__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3755__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3767__auto__ = (cljs.core._invoke[(function (){var G__5399 = x__4403__auto__;
return goog.typeOf(G__5399);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._invoke["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var cljs$core$_invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3755__auto__ = this$;
if(and__3755__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3755__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3767__auto__ = (cljs.core._invoke[(function (){var G__5401 = x__4403__auto__;
return goog.typeOf(G__5401);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._invoke["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var cljs$core$_invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3755__auto__ = this$;
if(and__3755__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3755__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3767__auto__ = (cljs.core._invoke[(function (){var G__5403 = x__4403__auto__;
return goog.typeOf(G__5403);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._invoke["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var cljs$core$_invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3755__auto__ = this$;
if(and__3755__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3755__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3767__auto__ = (cljs.core._invoke[(function (){var G__5405 = x__4403__auto__;
return goog.typeOf(G__5405);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._invoke["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var cljs$core$_invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3755__auto__ = this$;
if(and__3755__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3755__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3767__auto__ = (cljs.core._invoke[(function (){var G__5407 = x__4403__auto__;
return goog.typeOf(G__5407);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._invoke["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var cljs$core$_invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3755__auto__ = this$;
if(and__3755__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3755__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3767__auto__ = (cljs.core._invoke[(function (){var G__5409 = x__4403__auto__;
return goog.typeOf(G__5409);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._invoke["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var cljs$core$_invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3755__auto__ = this$;
if(and__3755__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3755__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3767__auto__ = (cljs.core._invoke[(function (){var G__5411 = x__4403__auto__;
return goog.typeOf(G__5411);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._invoke["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var cljs$core$_invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3755__auto__ = this$;
if(and__3755__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3755__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3767__auto__ = (cljs.core._invoke[(function (){var G__5413 = x__4403__auto__;
return goog.typeOf(G__5413);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._invoke["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var cljs$core$_invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3755__auto__ = this$;
if(and__3755__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3755__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3767__auto__ = (cljs.core._invoke[(function (){var G__5415 = x__4403__auto__;
return goog.typeOf(G__5415);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._invoke["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
cljs$core$_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return cljs$core$_invoke__1.call(this,this$);
case 2:
return cljs$core$_invoke__2.call(this,this$,a);
case 3:
return cljs$core$_invoke__3.call(this,this$,a,b);
case 4:
return cljs$core$_invoke__4.call(this,this$,a,b,c);
case 5:
return cljs$core$_invoke__5.call(this,this$,a,b,c,d);
case 6:
return cljs$core$_invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return cljs$core$_invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return cljs$core$_invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return cljs$core$_invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return cljs$core$_invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return cljs$core$_invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return cljs$core$_invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return cljs$core$_invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return cljs$core$_invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return cljs$core$_invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return cljs$core$_invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return cljs$core$_invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return cljs$core$_invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return cljs$core$_invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return cljs$core$_invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return cljs$core$_invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return cljs$core$_invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$1 = cljs$core$_invoke__1;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$2 = cljs$core$_invoke__2;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$3 = cljs$core$_invoke__3;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$4 = cljs$core$_invoke__4;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$5 = cljs$core$_invoke__5;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$6 = cljs$core$_invoke__6;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$7 = cljs$core$_invoke__7;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$8 = cljs$core$_invoke__8;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$9 = cljs$core$_invoke__9;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$10 = cljs$core$_invoke__10;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$11 = cljs$core$_invoke__11;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$12 = cljs$core$_invoke__12;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$13 = cljs$core$_invoke__13;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$14 = cljs$core$_invoke__14;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$15 = cljs$core$_invoke__15;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$16 = cljs$core$_invoke__16;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$17 = cljs$core$_invoke__17;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$18 = cljs$core$_invoke__18;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$19 = cljs$core$_invoke__19;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$20 = cljs$core$_invoke__20;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$21 = cljs$core$_invoke__21;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$22 = cljs$core$_invoke__22;
return cljs$core$_invoke;
})()
;


/**
 * Protocol for cloning a value.
 */
cljs.core.ICloneable = (function (){var obj5417 = {};
return obj5417;
})();

/**
 * Creates a clone of value.
 */
cljs.core._clone = (function cljs$core$_clone(value){
if((function (){var and__3755__auto__ = value;
if(and__3755__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3755__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4403__auto__ = (((value == null))?null:value);
return (function (){var or__3767__auto__ = (cljs.core._clone[(function (){var G__5421 = x__4403__auto__;
return goog.typeOf(G__5421);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._clone["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


/**
 * Protocol for adding the ability to count a collection in constant time.
 */
cljs.core.ICounted = (function (){var obj5423 = {};
return obj5423;
})();

/**
 * Calculates the count of coll in constant time. Used by cljs.core/count.
 */
cljs.core._count = (function cljs$core$_count(coll){
if((function (){var and__3755__auto__ = coll;
if(and__3755__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3755__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3767__auto__ = (cljs.core._count[(function (){var G__5427 = x__4403__auto__;
return goog.typeOf(G__5427);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._count["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for creating an empty collection.
 */
cljs.core.IEmptyableCollection = (function (){var obj5429 = {};
return obj5429;
})();

/**
 * Returns an empty collection of the same category as coll. Used
 * by cljs.core/count.
 */
cljs.core._empty = (function cljs$core$_empty(coll){
if((function (){var and__3755__auto__ = coll;
if(and__3755__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3755__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3767__auto__ = (cljs.core._empty[(function (){var G__5433 = x__4403__auto__;
return goog.typeOf(G__5433);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._empty["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding to a collection.
 */
cljs.core.ICollection = (function (){var obj5435 = {};
return obj5435;
})();

/**
 * Returns a new collection of coll with o added to it. The new item
 * should be added to the most efficient place, e.g.
 * (conj [1 2 3 4] 5) => [1 2 3 4 5]
 * (conj '(2 3 4 5) 1) => '(1 2 3 4 5)
 */
cljs.core._conj = (function cljs$core$_conj(coll,o){
if((function (){var and__3755__auto__ = coll;
if(and__3755__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3755__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3767__auto__ = (cljs.core._conj[(function (){var G__5439 = x__4403__auto__;
return goog.typeOf(G__5439);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._conj["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


/**
 * Protocol for collections to provide idexed-based access to their items.
 */
cljs.core.IIndexed = (function (){var obj5441 = {};
return obj5441;
})();

/**
 * Returns the value at the index n in the collection coll.
 * Returns not-found if index n is out of bounds and not-found is supplied.
 */
cljs.core._nth = (function() {
var cljs$core$_nth = null;
var cljs$core$_nth__2 = (function (coll,n){
if((function (){var and__3755__auto__ = coll;
if(and__3755__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3755__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3767__auto__ = (cljs.core._nth[(function (){var G__5447 = x__4403__auto__;
return goog.typeOf(G__5447);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._nth["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var cljs$core$_nth__3 = (function (coll,n,not_found){
if((function (){var and__3755__auto__ = coll;
if(and__3755__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3755__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3767__auto__ = (cljs.core._nth[(function (){var G__5449 = x__4403__auto__;
return goog.typeOf(G__5449);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._nth["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
cljs$core$_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return cljs$core$_nth__2.call(this,coll,n);
case 3:
return cljs$core$_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$_nth__2;
cljs$core$_nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$_nth__3;
return cljs$core$_nth;
})()
;


/**
 * Marker protocol indicating an array sequence.
 */
cljs.core.ASeq = (function (){var obj5451 = {};
return obj5451;
})();


/**
 * Protocol for collections to provide access to their items as sequences.
 */
cljs.core.ISeq = (function (){var obj5453 = {};
return obj5453;
})();

/**
 * Returns the first item in the collection coll. Used by cljs.core/first.
 */
cljs.core._first = (function cljs$core$_first(coll){
if((function (){var and__3755__auto__ = coll;
if(and__3755__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3755__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3767__auto__ = (cljs.core._first[(function (){var G__5457 = x__4403__auto__;
return goog.typeOf(G__5457);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._first["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

/**
 * Returns a new collection of coll without the first item. It should
 * always return a seq, e.g.
 * (rest []) => ()
 * (rest nil) => ()
 */
cljs.core._rest = (function cljs$core$_rest(coll){
if((function (){var and__3755__auto__ = coll;
if(and__3755__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3755__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3767__auto__ = (cljs.core._rest[(function (){var G__5461 = x__4403__auto__;
return goog.typeOf(G__5461);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._rest["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for accessing the next items of a collection.
 */
cljs.core.INext = (function (){var obj5463 = {};
return obj5463;
})();

/**
 * Returns a new collection of coll without the first item. In contrast to
 * rest, it should return nil if there are no more items, e.g.
 * (next []) => nil
 * (next nil) => nil
 */
cljs.core._next = (function cljs$core$_next(coll){
if((function (){var and__3755__auto__ = coll;
if(and__3755__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3755__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3767__auto__ = (cljs.core._next[(function (){var G__5467 = x__4403__auto__;
return goog.typeOf(G__5467);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._next["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for looking up a value in a data structure.
 */
cljs.core.ILookup = (function (){var obj5469 = {};
return obj5469;
})();

/**
 * Use k to look up a value in o. If not-found is supplied and k is not
 * a valid value that can be used for look up, not-found is returned.
 */
cljs.core._lookup = (function() {
var cljs$core$_lookup = null;
var cljs$core$_lookup__2 = (function (o,k){
if((function (){var and__3755__auto__ = o;
if(and__3755__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3755__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3767__auto__ = (cljs.core._lookup[(function (){var G__5475 = x__4403__auto__;
return goog.typeOf(G__5475);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._lookup["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var cljs$core$_lookup__3 = (function (o,k,not_found){
if((function (){var and__3755__auto__ = o;
if(and__3755__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3755__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3767__auto__ = (cljs.core._lookup[(function (){var G__5477 = x__4403__auto__;
return goog.typeOf(G__5477);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._lookup["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
cljs$core$_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return cljs$core$_lookup__2.call(this,o,k);
case 3:
return cljs$core$_lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_lookup.cljs$core$IFn$_invoke$arity$2 = cljs$core$_lookup__2;
cljs$core$_lookup.cljs$core$IFn$_invoke$arity$3 = cljs$core$_lookup__3;
return cljs$core$_lookup;
})()
;


/**
 * Protocol for adding associativity to collections.
 */
cljs.core.IAssociative = (function (){var obj5479 = {};
return obj5479;
})();

/**
 * Returns true if k is a key in coll.
 */
cljs.core._contains_key_QMARK_ = (function cljs$core$_contains_key_QMARK_(coll,k){
if((function (){var and__3755__auto__ = coll;
if(and__3755__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3755__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3767__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__5483 = x__4403__auto__;
return goog.typeOf(G__5483);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

/**
 * Returns a new collection of coll with a mapping from key k to
 * value v added to it.
 */
cljs.core._assoc = (function cljs$core$_assoc(coll,k,v){
if((function (){var and__3755__auto__ = coll;
if(and__3755__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3755__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3767__auto__ = (cljs.core._assoc[(function (){var G__5487 = x__4403__auto__;
return goog.typeOf(G__5487);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._assoc["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


/**
 * Protocol for adding mapping functionality to collections.
 */
cljs.core.IMap = (function (){var obj5489 = {};
return obj5489;
})();

/**
 * Returns a new collection of coll without the mapping for key k.
 */
cljs.core._dissoc = (function cljs$core$_dissoc(coll,k){
if((function (){var and__3755__auto__ = coll;
if(and__3755__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3755__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3767__auto__ = (cljs.core._dissoc[(function (){var G__5493 = x__4403__auto__;
return goog.typeOf(G__5493);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


/**
 * Protocol for examining a map entry.
 */
cljs.core.IMapEntry = (function (){var obj5495 = {};
return obj5495;
})();

/**
 * Returns the key of the map entry.
 */
cljs.core._key = (function cljs$core$_key(coll){
if((function (){var and__3755__auto__ = coll;
if(and__3755__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3755__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3767__auto__ = (cljs.core._key[(function (){var G__5499 = x__4403__auto__;
return goog.typeOf(G__5499);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._key["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

/**
 * Returns the value of the map entry.
 */
cljs.core._val = (function cljs$core$_val(coll){
if((function (){var and__3755__auto__ = coll;
if(and__3755__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3755__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3767__auto__ = (cljs.core._val[(function (){var G__5503 = x__4403__auto__;
return goog.typeOf(G__5503);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._val["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding set functionality to a collection.
 */
cljs.core.ISet = (function (){var obj5505 = {};
return obj5505;
})();

/**
 * Returns a new collection of coll that does not contain v.
 */
cljs.core._disjoin = (function cljs$core$_disjoin(coll,v){
if((function (){var and__3755__auto__ = coll;
if(and__3755__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3755__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3767__auto__ = (cljs.core._disjoin[(function (){var G__5509 = x__4403__auto__;
return goog.typeOf(G__5509);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


/**
 * Protocol for collections to provide access to their items as stacks. The top
 * of the stack should be accessed in the most efficient way for the different
 * data structures.
 */
cljs.core.IStack = (function (){var obj5511 = {};
return obj5511;
})();

/**
 * Returns the item from the top of the stack. Is used by cljs.core/peek.
 */
cljs.core._peek = (function cljs$core$_peek(coll){
if((function (){var and__3755__auto__ = coll;
if(and__3755__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3755__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3767__auto__ = (cljs.core._peek[(function (){var G__5515 = x__4403__auto__;
return goog.typeOf(G__5515);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._peek["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

/**
 * Returns a new stack without the item on top of the stack. Is used
 * by cljs.core/pop.
 */
cljs.core._pop = (function cljs$core$_pop(coll){
if((function (){var and__3755__auto__ = coll;
if(and__3755__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3755__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3767__auto__ = (cljs.core._pop[(function (){var G__5519 = x__4403__auto__;
return goog.typeOf(G__5519);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._pop["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding vector functionality to collections.
 */
cljs.core.IVector = (function (){var obj5521 = {};
return obj5521;
})();

/**
 * Returns a new vector with value val added at position n.
 */
cljs.core._assoc_n = (function cljs$core$_assoc_n(coll,n,val){
if((function (){var and__3755__auto__ = coll;
if(and__3755__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3755__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3767__auto__ = (cljs.core._assoc_n[(function (){var G__5525 = x__4403__auto__;
return goog.typeOf(G__5525);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


/**
 * Protocol for adding dereference functionality to a reference.
 */
cljs.core.IDeref = (function (){var obj5527 = {};
return obj5527;
})();

/**
 * Returns the value of the reference o.
 */
cljs.core._deref = (function cljs$core$_deref(o){
if((function (){var and__3755__auto__ = o;
if(and__3755__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3755__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3767__auto__ = (cljs.core._deref[(function (){var G__5531 = x__4403__auto__;
return goog.typeOf(G__5531);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._deref["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj5533 = {};
return obj5533;
})();

cljs.core._deref_with_timeout = (function cljs$core$_deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3755__auto__ = o;
if(and__3755__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3755__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3767__auto__ = (cljs.core._deref_with_timeout[(function (){var G__5537 = x__4403__auto__;
return goog.typeOf(G__5537);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


/**
 * Protocol for accessing the metadata of an object.
 */
cljs.core.IMeta = (function (){var obj5539 = {};
return obj5539;
})();

/**
 * Returns the metadata of object o.
 */
cljs.core._meta = (function cljs$core$_meta(o){
if((function (){var and__3755__auto__ = o;
if(and__3755__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3755__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3767__auto__ = (cljs.core._meta[(function (){var G__5543 = x__4403__auto__;
return goog.typeOf(G__5543);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._meta["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


/**
 * Protocol for adding metadata to an object.
 */
cljs.core.IWithMeta = (function (){var obj5545 = {};
return obj5545;
})();

/**
 * Returns a new object with value of o and metadata meta added to it.
 */
cljs.core._with_meta = (function cljs$core$_with_meta(o,meta){
if((function (){var and__3755__auto__ = o;
if(and__3755__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3755__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3767__auto__ = (cljs.core._with_meta[(function (){var G__5549 = x__4403__auto__;
return goog.typeOf(G__5549);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


/**
 * Protocol for seq types that can reduce themselves.
 * Called by cljs.core/reduce.
 */
cljs.core.IReduce = (function (){var obj5551 = {};
return obj5551;
})();

/**
 * f should be a function of 2 arguments. If start is not supplied,
 * returns the result of applying f to the first 2 items in coll, then
 * applying f to that result and the 3rd item, etc.
 */
cljs.core._reduce = (function() {
var cljs$core$_reduce = null;
var cljs$core$_reduce__2 = (function (coll,f){
if((function (){var and__3755__auto__ = coll;
if(and__3755__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3755__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3767__auto__ = (cljs.core._reduce[(function (){var G__5557 = x__4403__auto__;
return goog.typeOf(G__5557);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._reduce["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var cljs$core$_reduce__3 = (function (coll,f,start){
if((function (){var and__3755__auto__ = coll;
if(and__3755__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3755__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3767__auto__ = (cljs.core._reduce[(function (){var G__5559 = x__4403__auto__;
return goog.typeOf(G__5559);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._reduce["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
cljs$core$_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return cljs$core$_reduce__2.call(this,coll,f);
case 3:
return cljs$core$_reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$_reduce__2;
cljs$core$_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$_reduce__3;
return cljs$core$_reduce;
})()
;


/**
 * Protocol for associative types that can reduce themselves
 * via a function of key and val. Called by cljs.core/reduce-kv.
 */
cljs.core.IKVReduce = (function (){var obj5561 = {};
return obj5561;
})();

/**
 * Reduces an associative collection and returns the result. f should be
 * a function that takes three arguments.
 */
cljs.core._kv_reduce = (function cljs$core$_kv_reduce(coll,f,init){
if((function (){var and__3755__auto__ = coll;
if(and__3755__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3755__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3767__auto__ = (cljs.core._kv_reduce[(function (){var G__5565 = x__4403__auto__;
return goog.typeOf(G__5565);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


/**
 * Protocol for adding value comparison functionality to a type.
 */
cljs.core.IEquiv = (function (){var obj5567 = {};
return obj5567;
})();

/**
 * Returns true if o and other are equal, false otherwise.
 */
cljs.core._equiv = (function cljs$core$_equiv(o,other){
if((function (){var and__3755__auto__ = o;
if(and__3755__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3755__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3767__auto__ = (cljs.core._equiv[(function (){var G__5571 = x__4403__auto__;
return goog.typeOf(G__5571);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._equiv["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


/**
 * Protocol for adding hashing functionality to a type.
 */
cljs.core.IHash = (function (){var obj5573 = {};
return obj5573;
})();

/**
 * Returns the hash code of o.
 */
cljs.core._hash = (function cljs$core$_hash(o){
if((function (){var and__3755__auto__ = o;
if(and__3755__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3755__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3767__auto__ = (cljs.core._hash[(function (){var G__5577 = x__4403__auto__;
return goog.typeOf(G__5577);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._hash["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


/**
 * Protocol for adding the ability to a type to be transformed into a sequence.
 */
cljs.core.ISeqable = (function (){var obj5579 = {};
return obj5579;
})();

/**
 * Returns a seq of o, or nil if o is empty.
 */
cljs.core._seq = (function cljs$core$_seq(o){
if((function (){var and__3755__auto__ = o;
if(and__3755__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3755__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3767__auto__ = (cljs.core._seq[(function (){var G__5583 = x__4403__auto__;
return goog.typeOf(G__5583);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._seq["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


/**
 * Marker interface indicating a persistent collection of sequential items
 */
cljs.core.ISequential = (function (){var obj5585 = {};
return obj5585;
})();


/**
 * Marker interface indicating a persistent list
 */
cljs.core.IList = (function (){var obj5587 = {};
return obj5587;
})();


/**
 * Marker interface indicating a record object
 */
cljs.core.IRecord = (function (){var obj5589 = {};
return obj5589;
})();


/**
 * Protocol for reversing a seq.
 */
cljs.core.IReversible = (function (){var obj5591 = {};
return obj5591;
})();

/**
 * Returns a seq of the items in coll in reversed order.
 */
cljs.core._rseq = (function cljs$core$_rseq(coll){
if((function (){var and__3755__auto__ = coll;
if(and__3755__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3755__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3767__auto__ = (cljs.core._rseq[(function (){var G__5595 = x__4403__auto__;
return goog.typeOf(G__5595);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._rseq["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for a collection which can represent their items
 * in a sorted manner.
 */
cljs.core.ISorted = (function (){var obj5597 = {};
return obj5597;
})();

/**
 * Returns a sorted seq from coll in either ascending or descending order.
 */
cljs.core._sorted_seq = (function cljs$core$_sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3755__auto__ = coll;
if(and__3755__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3755__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3767__auto__ = (cljs.core._sorted_seq[(function (){var G__5601 = x__4403__auto__;
return goog.typeOf(G__5601);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

/**
 * Returns a sorted seq from coll in either ascending or descending order.
 * If ascending is true, the result should contain all items which are > or >=
 * than k. If ascending is false, the result should contain all items which
 * are < or <= than k, e.g.
 * (-sorted-seq-from (sorted-set 1 2 3 4 5) 3 true) => (3 4 5)
 * (-sorted-seq-from (sorted-set 1 2 3 4 5) 3 false) => (3 2 1)
 */
cljs.core._sorted_seq_from = (function cljs$core$_sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3755__auto__ = coll;
if(and__3755__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3755__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3767__auto__ = (cljs.core._sorted_seq_from[(function (){var G__5605 = x__4403__auto__;
return goog.typeOf(G__5605);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

/**
 * Returns the key for entry.
 */
cljs.core._entry_key = (function cljs$core$_entry_key(coll,entry){
if((function (){var and__3755__auto__ = coll;
if(and__3755__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3755__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3767__auto__ = (cljs.core._entry_key[(function (){var G__5609 = x__4403__auto__;
return goog.typeOf(G__5609);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

/**
 * Returns the comparator for coll.
 */
cljs.core._comparator = (function cljs$core$_comparator(coll){
if((function (){var and__3755__auto__ = coll;
if(and__3755__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3755__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3767__auto__ = (cljs.core._comparator[(function (){var G__5613 = x__4403__auto__;
return goog.typeOf(G__5613);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._comparator["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for writing. Currently only implemented by StringBufferWriter.
 */
cljs.core.IWriter = (function (){var obj5615 = {};
return obj5615;
})();

/**
 * Writes s with writer and returns the result.
 */
cljs.core._write = (function cljs$core$_write(writer,s){
if((function (){var and__3755__auto__ = writer;
if(and__3755__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3755__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4403__auto__ = (((writer == null))?null:writer);
return (function (){var or__3767__auto__ = (cljs.core._write[(function (){var G__5619 = x__4403__auto__;
return goog.typeOf(G__5619);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._write["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

/**
 * Flush writer.
 */
cljs.core._flush = (function cljs$core$_flush(writer){
if((function (){var and__3755__auto__ = writer;
if(and__3755__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3755__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4403__auto__ = (((writer == null))?null:writer);
return (function (){var or__3767__auto__ = (cljs.core._flush[(function (){var G__5623 = x__4403__auto__;
return goog.typeOf(G__5623);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._flush["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


/**
 * The old IPrintable protocol's implementation consisted of building a giant
 * list of strings to concatenate.  This involved lots of concat calls,
 * intermediate vectors, and lazy-seqs, and was very slow in some older JS
 * engines.  IPrintWithWriter implements printing via the IWriter protocol, so it
 * be implemented efficiently in terms of e.g. a StringBuffer append.
 */
cljs.core.IPrintWithWriter = (function (){var obj5625 = {};
return obj5625;
})();

cljs.core._pr_writer = (function cljs$core$_pr_writer(o,writer,opts){
if((function (){var and__3755__auto__ = o;
if(and__3755__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3755__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3767__auto__ = (cljs.core._pr_writer[(function (){var G__5629 = x__4403__auto__;
return goog.typeOf(G__5629);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


/**
 * Protocol for types which can have a deferred realization. Currently only
 * implemented by Delay.
 */
cljs.core.IPending = (function (){var obj5631 = {};
return obj5631;
})();

/**
 * Returns true if a value for d has been produced, false otherwise.
 */
cljs.core._realized_QMARK_ = (function cljs$core$_realized_QMARK_(d){
if((function (){var and__3755__auto__ = d;
if(and__3755__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3755__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4403__auto__ = (((d == null))?null:d);
return (function (){var or__3767__auto__ = (cljs.core._realized_QMARK_[(function (){var G__5635 = x__4403__auto__;
return goog.typeOf(G__5635);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


/**
 * Protocol for types that can be watched. Currently only implemented by Atom.
 */
cljs.core.IWatchable = (function (){var obj5637 = {};
return obj5637;
})();

/**
 * Calls all watchers with this, oldval and newval.
 */
cljs.core._notify_watches = (function cljs$core$_notify_watches(this$,oldval,newval){
if((function (){var and__3755__auto__ = this$;
if(and__3755__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3755__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3767__auto__ = (cljs.core._notify_watches[(function (){var G__5641 = x__4403__auto__;
return goog.typeOf(G__5641);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

/**
 * Adds a watcher function f to this. Keys must be unique per reference,
 * and can be used to remove the watch with -remove-watch.
 */
cljs.core._add_watch = (function cljs$core$_add_watch(this$,key,f){
if((function (){var and__3755__auto__ = this$;
if(and__3755__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3755__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3767__auto__ = (cljs.core._add_watch[(function (){var G__5645 = x__4403__auto__;
return goog.typeOf(G__5645);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

/**
 * Removes watcher that corresponds to key from this.
 */
cljs.core._remove_watch = (function cljs$core$_remove_watch(this$,key){
if((function (){var and__3755__auto__ = this$;
if(and__3755__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3755__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3767__auto__ = (cljs.core._remove_watch[(function (){var G__5649 = x__4403__auto__;
return goog.typeOf(G__5649);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


/**
 * Protocol for collections which can transformed to transients.
 */
cljs.core.IEditableCollection = (function (){var obj5651 = {};
return obj5651;
})();

/**
 * Returns a new, transient version of the collection, in constant time.
 */
cljs.core._as_transient = (function cljs$core$_as_transient(coll){
if((function (){var and__3755__auto__ = coll;
if(and__3755__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3755__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3767__auto__ = (cljs.core._as_transient[(function (){var G__5655 = x__4403__auto__;
return goog.typeOf(G__5655);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding basic functionality to transient collections.
 */
cljs.core.ITransientCollection = (function (){var obj5657 = {};
return obj5657;
})();

/**
 * Adds value val to tcoll and returns tcoll.
 */
cljs.core._conj_BANG_ = (function cljs$core$_conj_BANG_(tcoll,val){
if((function (){var and__3755__auto__ = tcoll;
if(and__3755__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3755__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4403__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3767__auto__ = (cljs.core._conj_BANG_[(function (){var G__5661 = x__4403__auto__;
return goog.typeOf(G__5661);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

/**
 * Creates a persistent data structure from tcoll and returns it.
 */
cljs.core._persistent_BANG_ = (function cljs$core$_persistent_BANG_(tcoll){
if((function (){var and__3755__auto__ = tcoll;
if(and__3755__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3755__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4403__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3767__auto__ = (cljs.core._persistent_BANG_[(function (){var G__5665 = x__4403__auto__;
return goog.typeOf(G__5665);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


/**
 * Protocol for adding associativity to transient collections.
 */
cljs.core.ITransientAssociative = (function (){var obj5667 = {};
return obj5667;
})();

/**
 * Returns a new transient collection of tcoll with a mapping from key to
 * val added to it.
 */
cljs.core._assoc_BANG_ = (function cljs$core$_assoc_BANG_(tcoll,key,val){
if((function (){var and__3755__auto__ = tcoll;
if(and__3755__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3755__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4403__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3767__auto__ = (cljs.core._assoc_BANG_[(function (){var G__5671 = x__4403__auto__;
return goog.typeOf(G__5671);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


/**
 * Protocol for adding mapping functionality to transient collections.
 */
cljs.core.ITransientMap = (function (){var obj5673 = {};
return obj5673;
})();

/**
 * Returns a new transient collection of tcoll without the mapping for key.
 */
cljs.core._dissoc_BANG_ = (function cljs$core$_dissoc_BANG_(tcoll,key){
if((function (){var and__3755__auto__ = tcoll;
if(and__3755__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3755__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4403__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3767__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__5677 = x__4403__auto__;
return goog.typeOf(G__5677);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


/**
 * Protocol for adding vector functionality to transient collections.
 */
cljs.core.ITransientVector = (function (){var obj5679 = {};
return obj5679;
})();

/**
 * Returns tcoll with value val added at position n.
 */
cljs.core._assoc_n_BANG_ = (function cljs$core$_assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3755__auto__ = tcoll;
if(and__3755__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3755__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4403__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3767__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__5683 = x__4403__auto__;
return goog.typeOf(G__5683);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

/**
 * Returns tcoll with the last item removed from it.
 */
cljs.core._pop_BANG_ = (function cljs$core$_pop_BANG_(tcoll){
if((function (){var and__3755__auto__ = tcoll;
if(and__3755__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3755__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4403__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3767__auto__ = (cljs.core._pop_BANG_[(function (){var G__5687 = x__4403__auto__;
return goog.typeOf(G__5687);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


/**
 * Protocol for adding set functionality to a transient collection.
 */
cljs.core.ITransientSet = (function (){var obj5689 = {};
return obj5689;
})();

/**
 * Returns tcoll without v.
 */
cljs.core._disjoin_BANG_ = (function cljs$core$_disjoin_BANG_(tcoll,v){
if((function (){var and__3755__auto__ = tcoll;
if(and__3755__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3755__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4403__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3767__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__5693 = x__4403__auto__;
return goog.typeOf(G__5693);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


/**
 * Protocol for values that can be compared.
 */
cljs.core.IComparable = (function (){var obj5695 = {};
return obj5695;
})();

/**
 * Returns a negative number, zero, or a positive number when x is logically
 * 'less than', 'equal to', or 'greater than' y.
 */
cljs.core._compare = (function cljs$core$_compare(x,y){
if((function (){var and__3755__auto__ = x;
if(and__3755__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3755__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4403__auto__ = (((x == null))?null:x);
return (function (){var or__3767__auto__ = (cljs.core._compare[(function (){var G__5699 = x__4403__auto__;
return goog.typeOf(G__5699);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._compare["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


/**
 * Protocol for accessing the items of a chunk.
 */
cljs.core.IChunk = (function (){var obj5701 = {};
return obj5701;
})();

/**
 * Return a new chunk of coll with the first item removed.
 */
cljs.core._drop_first = (function cljs$core$_drop_first(coll){
if((function (){var and__3755__auto__ = coll;
if(and__3755__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3755__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3767__auto__ = (cljs.core._drop_first[(function (){var G__5705 = x__4403__auto__;
return goog.typeOf(G__5705);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for accessing a collection as sequential chunks.
 */
cljs.core.IChunkedSeq = (function (){var obj5707 = {};
return obj5707;
})();

/**
 * Returns the first chunk in coll.
 */
cljs.core._chunked_first = (function cljs$core$_chunked_first(coll){
if((function (){var and__3755__auto__ = coll;
if(and__3755__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3755__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3767__auto__ = (cljs.core._chunked_first[(function (){var G__5711 = x__4403__auto__;
return goog.typeOf(G__5711);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

/**
 * Return a new collection of coll with the first chunk removed.
 */
cljs.core._chunked_rest = (function cljs$core$_chunked_rest(coll){
if((function (){var and__3755__auto__ = coll;
if(and__3755__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3755__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3767__auto__ = (cljs.core._chunked_rest[(function (){var G__5715 = x__4403__auto__;
return goog.typeOf(G__5715);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for accessing the chunks of a collection.
 */
cljs.core.IChunkedNext = (function (){var obj5717 = {};
return obj5717;
})();

/**
 * Returns a new collection of coll without the first chunk.
 */
cljs.core._chunked_next = (function cljs$core$_chunked_next(coll){
if((function (){var and__3755__auto__ = coll;
if(and__3755__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3755__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3767__auto__ = (cljs.core._chunked_next[(function (){var G__5721 = x__4403__auto__;
return goog.typeOf(G__5721);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding a name.
 */
cljs.core.INamed = (function (){var obj5723 = {};
return obj5723;
})();

/**
 * Returns the name String of x.
 */
cljs.core._name = (function cljs$core$_name(x){
if((function (){var and__3755__auto__ = x;
if(and__3755__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3755__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4403__auto__ = (((x == null))?null:x);
return (function (){var or__3767__auto__ = (cljs.core._name[(function (){var G__5727 = x__4403__auto__;
return goog.typeOf(G__5727);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._name["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

/**
 * Returns the namespace String of x.
 */
cljs.core._namespace = (function cljs$core$_namespace(x){
if((function (){var and__3755__auto__ = x;
if(and__3755__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3755__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4403__auto__ = (((x == null))?null:x);
return (function (){var or__3767__auto__ = (cljs.core._namespace[(function (){var G__5731 = x__4403__auto__;
return goog.typeOf(G__5731);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._namespace["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


/**
 * Marker protocol indicating an atom.
 */
cljs.core.IAtom = (function (){var obj5733 = {};
return obj5733;
})();


/**
 * Protocol for adding resetting functionality.
 */
cljs.core.IReset = (function (){var obj5735 = {};
return obj5735;
})();

/**
 * Sets the value of o to new-value.
 */
cljs.core._reset_BANG_ = (function cljs$core$_reset_BANG_(o,new_value){
if((function (){var and__3755__auto__ = o;
if(and__3755__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3755__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3767__auto__ = (cljs.core._reset_BANG_[(function (){var G__5739 = x__4403__auto__;
return goog.typeOf(G__5739);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


/**
 * Protocol for adding swapping functionality.
 */
cljs.core.ISwap = (function (){var obj5741 = {};
return obj5741;
})();

/**
 * Swaps the value of o to be (apply f current-value-of-atom args).
 */
cljs.core._swap_BANG_ = (function() {
var cljs$core$_swap_BANG_ = null;
var cljs$core$_swap_BANG___2 = (function (o,f){
if((function (){var and__3755__auto__ = o;
if(and__3755__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3755__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3767__auto__ = (cljs.core._swap_BANG_[(function (){var G__5751 = x__4403__auto__;
return goog.typeOf(G__5751);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var cljs$core$_swap_BANG___3 = (function (o,f,a){
if((function (){var and__3755__auto__ = o;
if(and__3755__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3755__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3767__auto__ = (cljs.core._swap_BANG_[(function (){var G__5753 = x__4403__auto__;
return goog.typeOf(G__5753);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var cljs$core$_swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3755__auto__ = o;
if(and__3755__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3755__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3767__auto__ = (cljs.core._swap_BANG_[(function (){var G__5755 = x__4403__auto__;
return goog.typeOf(G__5755);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var cljs$core$_swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3755__auto__ = o;
if(and__3755__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3755__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3767__auto__ = (cljs.core._swap_BANG_[(function (){var G__5757 = x__4403__auto__;
return goog.typeOf(G__5757);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
cljs$core$_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return cljs$core$_swap_BANG___2.call(this,o,f);
case 3:
return cljs$core$_swap_BANG___3.call(this,o,f,a);
case 4:
return cljs$core$_swap_BANG___4.call(this,o,f,a,b);
case 5:
return cljs$core$_swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_swap_BANG___2;
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$_swap_BANG___3;
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = cljs$core$_swap_BANG___4;
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = cljs$core$_swap_BANG___5;
return cljs$core$_swap_BANG_;
})()
;


/**
 * Protocol for adding volatile functionality.
 */
cljs.core.IVolatile = (function (){var obj5759 = {};
return obj5759;
})();

/**
 * Sets the value of volatile o to new-value without regard for the
 * current value. Returns new-value.
 */
cljs.core._vreset_BANG_ = (function cljs$core$_vreset_BANG_(o,new_value){
if((function (){var and__3755__auto__ = o;
if(and__3755__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3755__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3767__auto__ = (cljs.core._vreset_BANG_[(function (){var G__5763 = x__4403__auto__;
return goog.typeOf(G__5763);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


/**
 * Protocol for iterating over a collection.
 */
cljs.core.IIterable = (function (){var obj5765 = {};
return obj5765;
})();

/**
 * Returns an iterator for coll.
 */
cljs.core._iterator = (function cljs$core$_iterator(coll){
if((function (){var and__3755__auto__ = coll;
if(and__3755__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3755__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3767__auto__ = (cljs.core._iterator[(function (){var G__5769 = x__4403__auto__;
return goog.typeOf(G__5769);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._iterator["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function cljs$core$__GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
 * Support so that collections can implement toString without
 * loading all the printing machinery.
 */
cljs.core.pr_str_STAR_ = (function cljs$core$pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function cljs$core$int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__5772 = (4294967295);
var G__5773 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__5772,G__5773) : Math.imul.call(null,G__5772,G__5773));
})() === (0))))){
cljs.core.imul = (function cljs$core$imul(a,b){
var G__5776 = a;
var G__5777 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__5776,G__5777) : Math.imul.call(null,G__5776,G__5777));
});
} else {
cljs.core.imul = (function cljs$core$imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = ((3432918353) | (0));
cljs.core.m3_C2 = ((461845907) | (0));
cljs.core.m3_mix_K1 = (function cljs$core$m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul((k1 | (0)),cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function cljs$core$m3_mix_H1(h1,k1){
return ((cljs.core.imul(cljs.core.int_rotate_left(((h1 | (0)) ^ (k1 | (0))),(13)),(5)) + ((3864292196) | (0))) | (0));
});
cljs.core.m3_fmix = (function cljs$core$m3_fmix(h1,len){
var h1__$1 = (h1 | (0));
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,((2246822507) | (0)));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,((3266489909) | (0)));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function cljs$core$m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function cljs$core$m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__5778 = (i + (2));
var G__5779 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__5778;
h1 = G__5779;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj5781 = {};
return obj5781;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function cljs$core$hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__5782 = (i + (1));
var G__5783 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__5782;
hash = G__5783;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function cljs$core$add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function cljs$core$hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj5787 = {};
return obj5787;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
/**
 * Returns the hash code of its argument. Note this is the hash code
 * consistent with =.
 */
cljs.core.hash = (function cljs$core$hash(o){
if((function (){var G__5790 = o;
if(G__5790){
var bit__4434__auto__ = (G__5790.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4434__auto__) || (G__5790.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__5791 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__5791) : Math.floor.call(null,G__5791));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function cljs$core$hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
/**
 * Evaluates x and tests if it is an instance of the type
 * c. Returns true or false
 */
cljs.core.instance_QMARK_ = (function cljs$core$instance_QMARK_(t,o){
return (o instanceof t);
});
/**
 * Return true if x is a Symbol
 */
cljs.core.symbol_QMARK_ = (function cljs$core$symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function cljs$core$hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function cljs$core$compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3755__auto__ = cljs.core.not(a.ns);
if(and__3755__auto__){
return b.ns;
} else {
return and__3755__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__5798 = a.ns;
var G__5799 = b.ns;
return goog.array.defaultCompare(G__5798,G__5799);
})();
if(((0) === nsc)){
var G__5800 = a.name;
var G__5801 = b.name;
return goog.array.defaultCompare(G__5800,G__5801);
} else {
return nsc;
}
}
} else {
var G__5802 = a.name;
var G__5803 = b.name;
return goog.array.defaultCompare(G__5802,G__5803);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4183__auto__ = self__._hash;
if(!((h__4183__auto__ == null))){
return h__4183__auto__;
} else {
var h__4183__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4183__auto____$1;

return h__4183__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__5805 = null;
var G__5805__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__5805__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__5805 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__5805__2.call(this,self__,coll);
case 3:
return G__5805__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__5805.cljs$core$IFn$_invoke$arity$2 = G__5805__2;
G__5805.cljs$core$IFn$_invoke$arity$3 = G__5805__3;
return G__5805;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args5804){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args5804)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function cljs$core$__GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var cljs$core$symbol = null;
var cljs$core$symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return cljs$core$symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var cljs$core$symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
cljs$core$symbol = function(ns,name){
switch(arguments.length){
case 1:
return cljs$core$symbol__1.call(this,ns);
case 2:
return cljs$core$symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$symbol.cljs$core$IFn$_invoke$arity$1 = cljs$core$symbol__1;
cljs$core$symbol.cljs$core$IFn$_invoke$arity$2 = cljs$core$symbol__2;
return cljs$core$symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__5853 = null;
var G__5853__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__5853__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__5853__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__5853__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__5853__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__5853__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__5853__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__5853__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__5853__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__5853__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__5853__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__5853__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__5853__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__5853__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__5853__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__5853__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__5853__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__5853__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__5853__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__5853__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__5853__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__5853__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5809 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__5810 = a;
var G__5811 = b;
var G__5812 = c;
var G__5813 = d;
var G__5814 = e;
var G__5815 = f;
var G__5816 = g;
var G__5817 = h;
var G__5818 = i;
var G__5819 = j;
var G__5820 = k;
var G__5821 = l;
var G__5822 = m;
var G__5823 = n;
var G__5824 = o;
var G__5825 = p;
var G__5826 = q;
var G__5827 = r;
var G__5828 = s;
var G__5829 = t;
var G__5830 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__5809,G__5810,G__5811,G__5812,G__5813,G__5814,G__5815,G__5816,G__5817,G__5818,G__5819,G__5820,G__5821,G__5822,G__5823,G__5824,G__5825,G__5826,G__5827,G__5828,G__5829,G__5830) : cljs.core.apply.call(null,G__5809,G__5810,G__5811,G__5812,G__5813,G__5814,G__5815,G__5816,G__5817,G__5818,G__5819,G__5820,G__5821,G__5822,G__5823,G__5824,G__5825,G__5826,G__5827,G__5828,G__5829,G__5830));
});
G__5853 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__5853__1.call(this,self__);
case 2:
return G__5853__2.call(this,self__,a);
case 3:
return G__5853__3.call(this,self__,a,b);
case 4:
return G__5853__4.call(this,self__,a,b,c);
case 5:
return G__5853__5.call(this,self__,a,b,c,d);
case 6:
return G__5853__6.call(this,self__,a,b,c,d,e);
case 7:
return G__5853__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__5853__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__5853__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__5853__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__5853__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__5853__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__5853__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__5853__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__5853__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__5853__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__5853__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__5853__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__5853__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__5853__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__5853__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__5853__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__5853.cljs$core$IFn$_invoke$arity$1 = G__5853__1;
G__5853.cljs$core$IFn$_invoke$arity$2 = G__5853__2;
G__5853.cljs$core$IFn$_invoke$arity$3 = G__5853__3;
G__5853.cljs$core$IFn$_invoke$arity$4 = G__5853__4;
G__5853.cljs$core$IFn$_invoke$arity$5 = G__5853__5;
G__5853.cljs$core$IFn$_invoke$arity$6 = G__5853__6;
G__5853.cljs$core$IFn$_invoke$arity$7 = G__5853__7;
G__5853.cljs$core$IFn$_invoke$arity$8 = G__5853__8;
G__5853.cljs$core$IFn$_invoke$arity$9 = G__5853__9;
G__5853.cljs$core$IFn$_invoke$arity$10 = G__5853__10;
G__5853.cljs$core$IFn$_invoke$arity$11 = G__5853__11;
G__5853.cljs$core$IFn$_invoke$arity$12 = G__5853__12;
G__5853.cljs$core$IFn$_invoke$arity$13 = G__5853__13;
G__5853.cljs$core$IFn$_invoke$arity$14 = G__5853__14;
G__5853.cljs$core$IFn$_invoke$arity$15 = G__5853__15;
G__5853.cljs$core$IFn$_invoke$arity$16 = G__5853__16;
G__5853.cljs$core$IFn$_invoke$arity$17 = G__5853__17;
G__5853.cljs$core$IFn$_invoke$arity$18 = G__5853__18;
G__5853.cljs$core$IFn$_invoke$arity$19 = G__5853__19;
G__5853.cljs$core$IFn$_invoke$arity$20 = G__5853__20;
G__5853.cljs$core$IFn$_invoke$arity$21 = G__5853__21;
G__5853.cljs$core$IFn$_invoke$arity$22 = G__5853__22;
return G__5853;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args5808){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args5808)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__5831 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__5832 = a;
var G__5833 = b;
var G__5834 = c;
var G__5835 = d;
var G__5836 = e;
var G__5837 = f;
var G__5838 = g;
var G__5839 = h;
var G__5840 = i;
var G__5841 = j;
var G__5842 = k;
var G__5843 = l;
var G__5844 = m;
var G__5845 = n;
var G__5846 = o;
var G__5847 = p;
var G__5848 = q;
var G__5849 = r;
var G__5850 = s;
var G__5851 = t;
var G__5852 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__5831,G__5832,G__5833,G__5834,G__5835,G__5836,G__5837,G__5838,G__5839,G__5840,G__5841,G__5842,G__5843,G__5844,G__5845,G__5846,G__5847,G__5848,G__5849,G__5850,G__5851,G__5852) : cljs.core.apply.call(null,G__5831,G__5832,G__5833,G__5834,G__5835,G__5836,G__5837,G__5838,G__5839,G__5840,G__5841,G__5842,G__5843,G__5844,G__5845,G__5846,G__5847,G__5848,G__5849,G__5850,G__5851,G__5852));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function cljs$core$__GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



/**
 * Return true if x implements IIterable protocol.
 */
cljs.core.iterable_QMARK_ = (function cljs$core$iterable_QMARK_(x){
var G__5855 = x;
if(G__5855){
var bit__4441__auto__ = null;
if(cljs.core.truth_((function (){var or__3767__auto__ = bit__4441__auto__;
if(cljs.core.truth_(or__3767__auto__)){
return or__3767__auto__;
} else {
return G__5855.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__5855.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__5855);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__5855);
}
});
/**
 * Clone the supplied value which must implement ICloneable.
 */
cljs.core.clone = (function cljs$core$clone(value){
return cljs.core._clone(value);
});
/**
 * Return true if x implements ICloneable protocol.
 */
cljs.core.cloneable_QMARK_ = (function cljs$core$cloneable_QMARK_(value){
var G__5857 = value;
if(G__5857){
var bit__4441__auto__ = (G__5857.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4441__auto__) || (G__5857.cljs$core$ICloneable$)){
return true;
} else {
if((!G__5857.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__5857);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__5857);
}
});
/**
 * Returns a seq on the collection. If the collection is
 * empty, returns nil.  (seq nil) returns nil. seq also works on
 * Strings.
 */
cljs.core.seq = (function cljs$core$seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__5859 = coll;
if(G__5859){
var bit__4434__auto__ = (G__5859.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4434__auto__) || (G__5859.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(cljs.core.array_QMARK_(coll)){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
 * Returns the first item in the collection. Calls seq on its
 * argument. If coll is nil, returns nil.
 */
cljs.core.first = (function cljs$core$first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__5861 = coll;
if(G__5861){
var bit__4434__auto__ = (G__5861.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4434__auto__) || (G__5861.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
 * Returns a possibly empty seq of the items after the first. Calls seq on its
 * argument.
 */
cljs.core.rest = (function cljs$core$rest(coll){
if(!((coll == null))){
if((function (){var G__5863 = coll;
if(G__5863){
var bit__4434__auto__ = (G__5863.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4434__auto__) || (G__5863.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
 * Returns a seq of the items after the first. Calls seq on its
 * argument.  If there are no more items, returns nil
 */
cljs.core.next = (function cljs$core$next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__5865 = coll;
if(G__5865){
var bit__4434__auto__ = (G__5865.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4434__auto__) || (G__5865.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
 * Equality. Returns true if x equals y, false if not. Compares
 * numbers and collections in a type-independent manner.  Clojure's immutable data
 * structures define -equiv (and thus =) as a value, not an identity,
 * comparison.
 * @param {...*} var_args
 */
cljs.core._EQ_ = (function() {
var cljs$core$_EQ_ = null;
var cljs$core$_EQ___1 = (function (x){
return true;
});
var cljs$core$_EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var cljs$core$_EQ___3 = (function() { 
var G__5870__delegate = function (x,y,more){
while(true){
if(cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__5871 = y;
var G__5872 = cljs.core.first(more);
var G__5873 = cljs.core.next(more);
x = G__5871;
y = G__5872;
more = G__5873;
continue;
} else {
return cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__5870 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__5874__i = 0, G__5874__a = new Array(arguments.length -  2);
while (G__5874__i < G__5874__a.length) {G__5874__a[G__5874__i] = arguments[G__5874__i + 2]; ++G__5874__i;}
  more = new cljs.core.IndexedSeq(G__5874__a,0);
} 
return G__5870__delegate.call(this,x,y,more);};
G__5870.cljs$lang$maxFixedArity = 2;
G__5870.cljs$lang$applyTo = (function (arglist__5875){
var x = cljs.core.first(arglist__5875);
arglist__5875 = cljs.core.next(arglist__5875);
var y = cljs.core.first(arglist__5875);
var more = cljs.core.rest(arglist__5875);
return G__5870__delegate(x,y,more);
});
G__5870.cljs$core$IFn$_invoke$arity$variadic = G__5870__delegate;
return G__5870;
})()
;
cljs$core$_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_EQ___1.call(this,x);
case 2:
return cljs$core$_EQ___2.call(this,x,y);
default:
var G__5876 = null;
if (arguments.length > 2) {
var G__5877__i = 0, G__5877__a = new Array(arguments.length -  2);
while (G__5877__i < G__5877__a.length) {G__5877__a[G__5877__i] = arguments[G__5877__i + 2]; ++G__5877__i;}
G__5876 = new cljs.core.IndexedSeq(G__5877__a,0);
}
return cljs$core$_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__5876);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_EQ_.cljs$lang$applyTo = cljs$core$_EQ___3.cljs$lang$applyTo;
cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_EQ___1;
cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_EQ___2;
cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function cljs$core$__GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

/**
 * EXPERIMENTAL: Return a ES2015 compatible iterator for coll.
 */
cljs.core.es6_iterator = (function cljs$core$es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__5878 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__5878) : cljs.core.es6_iterator_seq.call(null,G__5878));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function cljs$core$__GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

/**
 * EXPERIMENTAL: Given an ES2015 compatible iterator return a seq.
 */
cljs.core.es6_iterator_seq = (function cljs$core$es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
 * Mix final collection hash for ordered or unordered collections.
 * hash-basis is the combined collection hash, count is the number
 * of elements included in the basis. Note this is the hash code
 * consistent with =, different from .hashCode.
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.mix_collection_hash = (function cljs$core$mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
 * Returns the hash code, consistent with =, for an external ordered
 * collection implementing Iterable.
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.hash_ordered_coll = (function cljs$core$hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__5879 = (n + (1));
var G__5880 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__5881 = cljs.core.next(coll__$1);
n = G__5879;
hash_code = G__5880;
coll__$1 = G__5881;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
 * Returns the hash code, consistent with =, for an external unordered
 * collection implementing Iterable. For maps, the iterator should
 * return map entries whose hash is computed as
 * (hash-ordered-coll [k v]).
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.hash_unordered_coll = (function cljs$core$hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__5882 = (n + (1));
var G__5883 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__5884 = cljs.core.next(coll__$1);
n = G__5882;
hash_code = G__5883;
coll__$1 = G__5884;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IComparable$ = true;

Date.prototype.cljs$core$IComparable$_compare$arity$2 = (function (this$,other){
var this$__$1 = this;
var G__5885 = this$__$1.valueOf();
var G__5886 = other.valueOf();
return goog.array.defaultCompare(G__5885,G__5886);
});

Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.valueOf() === other.valueOf()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__5887 = o;
return goog.getUid(G__5887);
}));
/**
 * Returns a number one greater than num.
 */
cljs.core.inc = (function cljs$core$inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function cljs$core$__GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
 * Wraps x in a way such that a reduce will terminate with the value x
 */
cljs.core.reduced = (function cljs$core$reduced(x){
return (new cljs.core.Reduced(x));
});
/**
 * Returns true if x is the result of a call to reduced
 */
cljs.core.reduced_QMARK_ = (function cljs$core$reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
 * If x is already reduced?, returns it, else returns (reduced x)
 */
cljs.core.ensure_reduced = (function cljs$core$ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
 * If x is reduced?, returns (deref x), else returns x
 */
cljs.core.unreduced = (function cljs$core$unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__5889 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5889) : cljs.core.deref.call(null,G__5889));
} else {
return x;
}
});
/**
 * Also reader macro: @var/@atom/@delay. Returns the
 * most-recently-committed value of ref. When applied to a var
 * or atom, returns its current state. When applied to a delay, forces
 * it if not already forced. See also - realized?.
 */
cljs.core.deref = (function cljs$core$deref(o){
return cljs.core._deref(o);
});
/**
 * Accepts any collection which satisfies the ICount and IIndexed protocols and
 * reduces them without incurring seq initialization
 */
cljs.core.ci_reduce = (function() {
var cljs$core$ci_reduce = null;
var cljs$core$ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__5896 = val;
var G__5897 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5896,G__5897) : f.call(null,G__5896,G__5897));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__5902 = nval;
var G__5903 = (n + (1));
val = G__5902;
n = G__5903;
continue;
}
} else {
return val;
}
break;
}
}
});
var cljs$core$ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__5898 = val__$1;
var G__5899 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5898,G__5899) : f.call(null,G__5898,G__5899));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__5904 = nval;
var G__5905 = (n + (1));
val__$1 = G__5904;
n = G__5905;
continue;
}
} else {
return val__$1;
}
break;
}
});
var cljs$core$ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__5900 = val__$1;
var G__5901 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5900,G__5901) : f.call(null,G__5900,G__5901));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__5906 = nval;
var G__5907 = (n + (1));
val__$1 = G__5906;
n = G__5907;
continue;
}
} else {
return val__$1;
}
break;
}
});
cljs$core$ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return cljs$core$ci_reduce__2.call(this,cicoll,f);
case 3:
return cljs$core$ci_reduce__3.call(this,cicoll,f,val);
case 4:
return cljs$core$ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$ci_reduce__2;
cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$ci_reduce__3;
cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$ci_reduce__4;
return cljs$core$ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var cljs$core$array_reduce = null;
var cljs$core$array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__5914 = val;
var G__5915 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5914,G__5915) : f.call(null,G__5914,G__5915));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__5920 = nval;
var G__5921 = (n + (1));
val = G__5920;
n = G__5921;
continue;
}
} else {
return val;
}
break;
}
}
});
var cljs$core$array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__5916 = val__$1;
var G__5917 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5916,G__5917) : f.call(null,G__5916,G__5917));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__5922 = nval;
var G__5923 = (n + (1));
val__$1 = G__5922;
n = G__5923;
continue;
}
} else {
return val__$1;
}
break;
}
});
var cljs$core$array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__5918 = val__$1;
var G__5919 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5918,G__5919) : f.call(null,G__5918,G__5919));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__5924 = nval;
var G__5925 = (n + (1));
val__$1 = G__5924;
n = G__5925;
continue;
}
} else {
return val__$1;
}
break;
}
});
cljs$core$array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return cljs$core$array_reduce__2.call(this,arr,f);
case 3:
return cljs$core$array_reduce__3.call(this,arr,f,val);
case 4:
return cljs$core$array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_reduce__2;
cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$array_reduce__3;
cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$array_reduce__4;
return cljs$core$array_reduce;
})()
;



/**
 * Returns true if coll implements count in constant time
 */
cljs.core.counted_QMARK_ = (function cljs$core$counted_QMARK_(x){
var G__5927 = x;
if(G__5927){
var bit__4441__auto__ = (G__5927.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4441__auto__) || (G__5927.cljs$core$ICounted$)){
return true;
} else {
if((!G__5927.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__5927);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__5927);
}
});
/**
 * Returns true if coll implements nth in constant time
 */
cljs.core.indexed_QMARK_ = (function cljs$core$indexed_QMARK_(x){
var G__5929 = x;
if(G__5929){
var bit__4441__auto__ = (G__5929.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4441__auto__) || (G__5929.cljs$core$IIndexed$)){
return true;
} else {
if((!G__5929.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__5929);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__5929);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function cljs$core$__GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__5930 = coll__$1;
var G__5931 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__5930,G__5931) : cljs.core.equiv_sequential.call(null,G__5930,G__5931));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__5932 = o;
var G__5933 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__5932,G__5933) : cljs.core.cons.call(null,G__5932,G__5933));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function cljs$core$__GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
/**
 * Create seq from a primitive JavaScript Array-like.
 */
cljs.core.prim_seq = (function() {
var cljs$core$prim_seq = null;
var cljs$core$prim_seq__1 = (function (prim){
return cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var cljs$core$prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
cljs$core$prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return cljs$core$prim_seq__1.call(this,prim);
case 2:
return cljs$core$prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$prim_seq__1;
cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$2 = cljs$core$prim_seq__2;
return cljs$core$prim_seq;
})()
;
/**
 * Create a seq from a JavaScript array.
 */
cljs.core.array_seq = (function() {
var cljs$core$array_seq = null;
var cljs$core$array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var cljs$core$array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
cljs$core$array_seq = function(array,i){
switch(arguments.length){
case 1:
return cljs$core$array_seq__1.call(this,array);
case 2:
return cljs$core$array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$array_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$array_seq__1;
cljs$core$array_seq.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_seq__2;
return cljs$core$array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__5936 = coll__$1;
var G__5937 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__5936,G__5937) : cljs.core.equiv_sequential.call(null,G__5936,G__5937));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__5938 = cljs.core.List.EMPTY;
var G__5939 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__5938,G__5939) : cljs.core.with_meta.call(null,G__5938,G__5939));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__5940 = f;
var G__5941 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__5940,G__5941) : cljs.core.seq_reduce.call(null,G__5940,G__5941));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__5942 = f;
var G__5943 = start;
var G__5944 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__5942,G__5943,G__5944) : cljs.core.seq_reduce.call(null,G__5942,G__5943,G__5944));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__5945 = o;
var G__5946 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__5945,G__5946) : cljs.core.cons.call(null,G__5945,G__5946));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function cljs$core$__GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
/**
 * Same as (first (next x))
 */
cljs.core.second = (function cljs$core$second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
 * Same as (first (first x))
 */
cljs.core.ffirst = (function cljs$core$ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
 * Same as (next (first x))
 */
cljs.core.nfirst = (function cljs$core$nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
 * Same as (first (next x))
 */
cljs.core.fnext = (function cljs$core$fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
 * Same as (next (next x))
 */
cljs.core.nnext = (function cljs$core$nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
 * Return the last item in coll, in linear time
 */
cljs.core.last = (function cljs$core$last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__5947 = sn;
s = G__5947;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
 * conj[oin]. Returns a new collection with the xs
 * 'added'. (conj nil item) returns (item).  The 'addition' may
 * happen at different 'places' depending on the concrete type.
 * @param {...*} var_args
 */
cljs.core.conj = (function() {
var cljs$core$conj = null;
var cljs$core$conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var cljs$core$conj__1 = (function (coll){
return coll;
});
var cljs$core$conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var cljs$core$conj__3 = (function() { 
var G__5952__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__5953 = cljs$core$conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__5954 = cljs.core.first(xs);
var G__5955 = cljs.core.next(xs);
coll = G__5953;
x = G__5954;
xs = G__5955;
continue;
} else {
return cljs$core$conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__5952 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__5956__i = 0, G__5956__a = new Array(arguments.length -  2);
while (G__5956__i < G__5956__a.length) {G__5956__a[G__5956__i] = arguments[G__5956__i + 2]; ++G__5956__i;}
  xs = new cljs.core.IndexedSeq(G__5956__a,0);
} 
return G__5952__delegate.call(this,coll,x,xs);};
G__5952.cljs$lang$maxFixedArity = 2;
G__5952.cljs$lang$applyTo = (function (arglist__5957){
var coll = cljs.core.first(arglist__5957);
arglist__5957 = cljs.core.next(arglist__5957);
var x = cljs.core.first(arglist__5957);
var xs = cljs.core.rest(arglist__5957);
return G__5952__delegate(coll,x,xs);
});
G__5952.cljs$core$IFn$_invoke$arity$variadic = G__5952__delegate;
return G__5952;
})()
;
cljs$core$conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return cljs$core$conj__0.call(this);
case 1:
return cljs$core$conj__1.call(this,coll);
case 2:
return cljs$core$conj__2.call(this,coll,x);
default:
var G__5958 = null;
if (arguments.length > 2) {
var G__5959__i = 0, G__5959__a = new Array(arguments.length -  2);
while (G__5959__i < G__5959__a.length) {G__5959__a[G__5959__i] = arguments[G__5959__i + 2]; ++G__5959__i;}
G__5958 = new cljs.core.IndexedSeq(G__5959__a,0);
}
return cljs$core$conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__5958);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$conj.cljs$lang$maxFixedArity = 2;
cljs$core$conj.cljs$lang$applyTo = cljs$core$conj__3.cljs$lang$applyTo;
cljs$core$conj.cljs$core$IFn$_invoke$arity$0 = cljs$core$conj__0;
cljs$core$conj.cljs$core$IFn$_invoke$arity$1 = cljs$core$conj__1;
cljs$core$conj.cljs$core$IFn$_invoke$arity$2 = cljs$core$conj__2;
cljs$core$conj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$conj__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$conj;
})()
;
/**
 * Returns an empty collection of the same category as coll, or nil
 */
cljs.core.empty = (function cljs$core$empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function cljs$core$accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__5960 = cljs.core.next(s);
var G__5961 = (acc + (1));
s = G__5960;
acc = G__5961;
continue;
}
break;
}
});
/**
 * Returns the number of items in the collection. (count nil) returns
 * 0.  Also works on strings, arrays, and Maps
 */
cljs.core.count = (function cljs$core$count(coll){
if(!((coll == null))){
if((function (){var G__5963 = coll;
if(G__5963){
var bit__4434__auto__ = (G__5963.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4434__auto__) || (G__5963.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(cljs.core.array_QMARK_(coll)){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var cljs$core$linear_traversal_nth = null;
var cljs$core$linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__5964 = cljs.core.next(coll);
var G__5965 = (n - (1));
coll = G__5964;
n = G__5965;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var cljs$core$linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__5966 = cljs.core.next(coll);
var G__5967 = (n - (1));
var G__5968 = not_found;
coll = G__5966;
n = G__5967;
not_found = G__5968;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
cljs$core$linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return cljs$core$linear_traversal_nth__2.call(this,coll,n);
case 3:
return cljs$core$linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$linear_traversal_nth__2;
cljs$core$linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$linear_traversal_nth__3;
return cljs$core$linear_traversal_nth;
})()
;
/**
 * Returns the value at the index. get returns nil if index out of
 * bounds, nth throws an exception unless not-found is supplied.  nth
 * also works for strings, arrays, regex Matchers and Lists, and,
 * in O(n) time, for sequences.
 */
cljs.core.nth = (function() {
var cljs$core$nth = null;
var cljs$core$nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__5973 = coll;
if(G__5973){
var bit__4434__auto__ = (G__5973.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4434__auto__) || (G__5973.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(cljs.core.array_QMARK_(coll)){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__5974 = coll;
if(G__5974){
var bit__4441__auto__ = (G__5974.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4441__auto__) || (G__5974.cljs$core$ISeq$)){
return true;
} else {
if((!G__5974.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__5974);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__5974);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var cljs$core$nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__5975 = coll;
if(G__5975){
var bit__4434__auto__ = (G__5975.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4434__auto__) || (G__5975.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(cljs.core.array_QMARK_(coll)){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__5976 = coll;
if(G__5976){
var bit__4441__auto__ = (G__5976.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4441__auto__) || (G__5976.cljs$core$ISeq$)){
return true;
} else {
if((!G__5976.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__5976);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__5976);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
cljs$core$nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return cljs$core$nth__2.call(this,coll,n);
case 3:
return cljs$core$nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$nth__2;
cljs$core$nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$nth__3;
return cljs$core$nth;
})()
;
/**
 * Returns the nth rest of coll, coll when n is 0.
 */
cljs.core.nthrest = (function cljs$core$nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__5977 = (n__$1 - (1));
var G__5978 = cljs.core.rest(xs);
n__$1 = G__5977;
xs = G__5978;
continue;
} else {
return xs;
}
break;
}
});
/**
 * Returns the value mapped to key, not-found or nil if key not present.
 */
cljs.core.get = (function() {
var cljs$core$get = null;
var cljs$core$get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__5981 = o;
if(G__5981){
var bit__4434__auto__ = (G__5981.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4434__auto__) || (G__5981.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(cljs.core.array_QMARK_(o)){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var cljs$core$get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__5982 = o;
if(G__5982){
var bit__4434__auto__ = (G__5982.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4434__auto__) || (G__5982.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(cljs.core.array_QMARK_(o)){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
cljs$core$get = function(o,k,not_found){
switch(arguments.length){
case 2:
return cljs$core$get__2.call(this,o,k);
case 3:
return cljs$core$get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$get.cljs$core$IFn$_invoke$arity$2 = cljs$core$get__2;
cljs$core$get.cljs$core$IFn$_invoke$arity$3 = cljs$core$get__3;
return cljs$core$get;
})()
;
/**
 * assoc[iate]. When applied to a map, returns a new map of the
 * same (hashed/sorted) type, that contains the mapping of key(s) to
 * val(s). When applied to a vector, returns a new vector that
 * contains val at index.
 * @param {...*} var_args
 */
cljs.core.assoc = (function() {
var cljs$core$assoc = null;
var cljs$core$assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var cljs$core$assoc__4 = (function() { 
var G__5986__delegate = function (coll,k,v,kvs){
while(true){
var ret = cljs$core$assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__5987 = ret;
var G__5988 = cljs.core.first(kvs);
var G__5989 = cljs.core.second(kvs);
var G__5990 = cljs.core.nnext(kvs);
coll = G__5987;
k = G__5988;
v = G__5989;
kvs = G__5990;
continue;
} else {
return ret;
}
break;
}
};
var G__5986 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__5991__i = 0, G__5991__a = new Array(arguments.length -  3);
while (G__5991__i < G__5991__a.length) {G__5991__a[G__5991__i] = arguments[G__5991__i + 3]; ++G__5991__i;}
  kvs = new cljs.core.IndexedSeq(G__5991__a,0);
} 
return G__5986__delegate.call(this,coll,k,v,kvs);};
G__5986.cljs$lang$maxFixedArity = 3;
G__5986.cljs$lang$applyTo = (function (arglist__5992){
var coll = cljs.core.first(arglist__5992);
arglist__5992 = cljs.core.next(arglist__5992);
var k = cljs.core.first(arglist__5992);
arglist__5992 = cljs.core.next(arglist__5992);
var v = cljs.core.first(arglist__5992);
var kvs = cljs.core.rest(arglist__5992);
return G__5986__delegate(coll,k,v,kvs);
});
G__5986.cljs$core$IFn$_invoke$arity$variadic = G__5986__delegate;
return G__5986;
})()
;
cljs$core$assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return cljs$core$assoc__3.call(this,coll,k,v);
default:
var G__5993 = null;
if (arguments.length > 3) {
var G__5994__i = 0, G__5994__a = new Array(arguments.length -  3);
while (G__5994__i < G__5994__a.length) {G__5994__a[G__5994__i] = arguments[G__5994__i + 3]; ++G__5994__i;}
G__5993 = new cljs.core.IndexedSeq(G__5994__a,0);
}
return cljs$core$assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__5993);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$assoc.cljs$lang$maxFixedArity = 3;
cljs$core$assoc.cljs$lang$applyTo = cljs$core$assoc__4.cljs$lang$applyTo;
cljs$core$assoc.cljs$core$IFn$_invoke$arity$3 = cljs$core$assoc__3;
cljs$core$assoc.cljs$core$IFn$_invoke$arity$variadic = cljs$core$assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$assoc;
})()
;
/**
 * dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
 * that does not contain a mapping for key(s).
 * @param {...*} var_args
 */
cljs.core.dissoc = (function() {
var cljs$core$dissoc = null;
var cljs$core$dissoc__1 = (function (coll){
return coll;
});
var cljs$core$dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var cljs$core$dissoc__3 = (function() { 
var G__5997__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = cljs$core$dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__5998 = ret;
var G__5999 = cljs.core.first(ks);
var G__6000 = cljs.core.next(ks);
coll = G__5998;
k = G__5999;
ks = G__6000;
continue;
} else {
return ret;
}
}
break;
}
};
var G__5997 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__6001__i = 0, G__6001__a = new Array(arguments.length -  2);
while (G__6001__i < G__6001__a.length) {G__6001__a[G__6001__i] = arguments[G__6001__i + 2]; ++G__6001__i;}
  ks = new cljs.core.IndexedSeq(G__6001__a,0);
} 
return G__5997__delegate.call(this,coll,k,ks);};
G__5997.cljs$lang$maxFixedArity = 2;
G__5997.cljs$lang$applyTo = (function (arglist__6002){
var coll = cljs.core.first(arglist__6002);
arglist__6002 = cljs.core.next(arglist__6002);
var k = cljs.core.first(arglist__6002);
var ks = cljs.core.rest(arglist__6002);
return G__5997__delegate(coll,k,ks);
});
G__5997.cljs$core$IFn$_invoke$arity$variadic = G__5997__delegate;
return G__5997;
})()
;
cljs$core$dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return cljs$core$dissoc__1.call(this,coll);
case 2:
return cljs$core$dissoc__2.call(this,coll,k);
default:
var G__6003 = null;
if (arguments.length > 2) {
var G__6004__i = 0, G__6004__a = new Array(arguments.length -  2);
while (G__6004__i < G__6004__a.length) {G__6004__a[G__6004__i] = arguments[G__6004__i + 2]; ++G__6004__i;}
G__6003 = new cljs.core.IndexedSeq(G__6004__a,0);
}
return cljs$core$dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__6003);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dissoc.cljs$lang$maxFixedArity = 2;
cljs$core$dissoc.cljs$lang$applyTo = cljs$core$dissoc__3.cljs$lang$applyTo;
cljs$core$dissoc.cljs$core$IFn$_invoke$arity$1 = cljs$core$dissoc__1;
cljs$core$dissoc.cljs$core$IFn$_invoke$arity$2 = cljs$core$dissoc__2;
cljs$core$dissoc.cljs$core$IFn$_invoke$arity$variadic = cljs$core$dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$dissoc;
})()
;
/**
 * Return true if f is a JavaScript function or satisfies the Fn protocol.
 */
cljs.core.fn_QMARK_ = (function cljs$core$fn_QMARK_(f){
var or__3767__auto__ = (function (){var G__6009 = f;
return goog.isFunction(G__6009);
})();
if(cljs.core.truth_(or__3767__auto__)){
return or__3767__auto__;
} else {
var G__6010 = f;
if(G__6010){
var bit__4441__auto__ = null;
if(cljs.core.truth_((function (){var or__3767__auto____$1 = bit__4441__auto__;
if(cljs.core.truth_(or__3767__auto____$1)){
return or__3767__auto____$1;
} else {
return G__6010.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__6010.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__6010);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__6010);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__6476 = null;
var G__6476__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__6476__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6012 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__6012) : self__.afn.call(null,G__6012));
});
var G__6476__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6013 = a;
var G__6014 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__6013,G__6014) : self__.afn.call(null,G__6013,G__6014));
});
var G__6476__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6015 = a;
var G__6016 = b;
var G__6017 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__6015,G__6016,G__6017) : self__.afn.call(null,G__6015,G__6016,G__6017));
});
var G__6476__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6018 = a;
var G__6019 = b;
var G__6020 = c;
var G__6021 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__6018,G__6019,G__6020,G__6021) : self__.afn.call(null,G__6018,G__6019,G__6020,G__6021));
});
var G__6476__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6022 = a;
var G__6023 = b;
var G__6024 = c;
var G__6025 = d;
var G__6026 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__6022,G__6023,G__6024,G__6025,G__6026) : self__.afn.call(null,G__6022,G__6023,G__6024,G__6025,G__6026));
});
var G__6476__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6027 = a;
var G__6028 = b;
var G__6029 = c;
var G__6030 = d;
var G__6031 = e;
var G__6032 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__6027,G__6028,G__6029,G__6030,G__6031,G__6032) : self__.afn.call(null,G__6027,G__6028,G__6029,G__6030,G__6031,G__6032));
});
var G__6476__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6033 = a;
var G__6034 = b;
var G__6035 = c;
var G__6036 = d;
var G__6037 = e;
var G__6038 = f;
var G__6039 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__6033,G__6034,G__6035,G__6036,G__6037,G__6038,G__6039) : self__.afn.call(null,G__6033,G__6034,G__6035,G__6036,G__6037,G__6038,G__6039));
});
var G__6476__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6040 = a;
var G__6041 = b;
var G__6042 = c;
var G__6043 = d;
var G__6044 = e;
var G__6045 = f;
var G__6046 = g;
var G__6047 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__6040,G__6041,G__6042,G__6043,G__6044,G__6045,G__6046,G__6047) : self__.afn.call(null,G__6040,G__6041,G__6042,G__6043,G__6044,G__6045,G__6046,G__6047));
});
var G__6476__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6048 = a;
var G__6049 = b;
var G__6050 = c;
var G__6051 = d;
var G__6052 = e;
var G__6053 = f;
var G__6054 = g;
var G__6055 = h;
var G__6056 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__6048,G__6049,G__6050,G__6051,G__6052,G__6053,G__6054,G__6055,G__6056) : self__.afn.call(null,G__6048,G__6049,G__6050,G__6051,G__6052,G__6053,G__6054,G__6055,G__6056));
});
var G__6476__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6057 = a;
var G__6058 = b;
var G__6059 = c;
var G__6060 = d;
var G__6061 = e;
var G__6062 = f;
var G__6063 = g;
var G__6064 = h;
var G__6065 = i;
var G__6066 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__6057,G__6058,G__6059,G__6060,G__6061,G__6062,G__6063,G__6064,G__6065,G__6066) : self__.afn.call(null,G__6057,G__6058,G__6059,G__6060,G__6061,G__6062,G__6063,G__6064,G__6065,G__6066));
});
var G__6476__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6067 = a;
var G__6068 = b;
var G__6069 = c;
var G__6070 = d;
var G__6071 = e;
var G__6072 = f;
var G__6073 = g;
var G__6074 = h;
var G__6075 = i;
var G__6076 = j;
var G__6077 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__6067,G__6068,G__6069,G__6070,G__6071,G__6072,G__6073,G__6074,G__6075,G__6076,G__6077) : self__.afn.call(null,G__6067,G__6068,G__6069,G__6070,G__6071,G__6072,G__6073,G__6074,G__6075,G__6076,G__6077));
});
var G__6476__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6078 = a;
var G__6079 = b;
var G__6080 = c;
var G__6081 = d;
var G__6082 = e;
var G__6083 = f;
var G__6084 = g;
var G__6085 = h;
var G__6086 = i;
var G__6087 = j;
var G__6088 = k;
var G__6089 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__6078,G__6079,G__6080,G__6081,G__6082,G__6083,G__6084,G__6085,G__6086,G__6087,G__6088,G__6089) : self__.afn.call(null,G__6078,G__6079,G__6080,G__6081,G__6082,G__6083,G__6084,G__6085,G__6086,G__6087,G__6088,G__6089));
});
var G__6476__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6090 = a;
var G__6091 = b;
var G__6092 = c;
var G__6093 = d;
var G__6094 = e;
var G__6095 = f;
var G__6096 = g;
var G__6097 = h;
var G__6098 = i;
var G__6099 = j;
var G__6100 = k;
var G__6101 = l;
var G__6102 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__6090,G__6091,G__6092,G__6093,G__6094,G__6095,G__6096,G__6097,G__6098,G__6099,G__6100,G__6101,G__6102) : self__.afn.call(null,G__6090,G__6091,G__6092,G__6093,G__6094,G__6095,G__6096,G__6097,G__6098,G__6099,G__6100,G__6101,G__6102));
});
var G__6476__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6103 = a;
var G__6104 = b;
var G__6105 = c;
var G__6106 = d;
var G__6107 = e;
var G__6108 = f;
var G__6109 = g;
var G__6110 = h;
var G__6111 = i;
var G__6112 = j;
var G__6113 = k;
var G__6114 = l;
var G__6115 = m;
var G__6116 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__6103,G__6104,G__6105,G__6106,G__6107,G__6108,G__6109,G__6110,G__6111,G__6112,G__6113,G__6114,G__6115,G__6116) : self__.afn.call(null,G__6103,G__6104,G__6105,G__6106,G__6107,G__6108,G__6109,G__6110,G__6111,G__6112,G__6113,G__6114,G__6115,G__6116));
});
var G__6476__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6117 = a;
var G__6118 = b;
var G__6119 = c;
var G__6120 = d;
var G__6121 = e;
var G__6122 = f;
var G__6123 = g;
var G__6124 = h;
var G__6125 = i;
var G__6126 = j;
var G__6127 = k;
var G__6128 = l;
var G__6129 = m;
var G__6130 = n;
var G__6131 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__6117,G__6118,G__6119,G__6120,G__6121,G__6122,G__6123,G__6124,G__6125,G__6126,G__6127,G__6128,G__6129,G__6130,G__6131) : self__.afn.call(null,G__6117,G__6118,G__6119,G__6120,G__6121,G__6122,G__6123,G__6124,G__6125,G__6126,G__6127,G__6128,G__6129,G__6130,G__6131));
});
var G__6476__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6132 = a;
var G__6133 = b;
var G__6134 = c;
var G__6135 = d;
var G__6136 = e;
var G__6137 = f;
var G__6138 = g;
var G__6139 = h;
var G__6140 = i;
var G__6141 = j;
var G__6142 = k;
var G__6143 = l;
var G__6144 = m;
var G__6145 = n;
var G__6146 = o;
var G__6147 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__6132,G__6133,G__6134,G__6135,G__6136,G__6137,G__6138,G__6139,G__6140,G__6141,G__6142,G__6143,G__6144,G__6145,G__6146,G__6147) : self__.afn.call(null,G__6132,G__6133,G__6134,G__6135,G__6136,G__6137,G__6138,G__6139,G__6140,G__6141,G__6142,G__6143,G__6144,G__6145,G__6146,G__6147));
});
var G__6476__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6148 = a;
var G__6149 = b;
var G__6150 = c;
var G__6151 = d;
var G__6152 = e;
var G__6153 = f;
var G__6154 = g;
var G__6155 = h;
var G__6156 = i;
var G__6157 = j;
var G__6158 = k;
var G__6159 = l;
var G__6160 = m;
var G__6161 = n;
var G__6162 = o;
var G__6163 = p;
var G__6164 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__6148,G__6149,G__6150,G__6151,G__6152,G__6153,G__6154,G__6155,G__6156,G__6157,G__6158,G__6159,G__6160,G__6161,G__6162,G__6163,G__6164) : self__.afn.call(null,G__6148,G__6149,G__6150,G__6151,G__6152,G__6153,G__6154,G__6155,G__6156,G__6157,G__6158,G__6159,G__6160,G__6161,G__6162,G__6163,G__6164));
});
var G__6476__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6165 = a;
var G__6166 = b;
var G__6167 = c;
var G__6168 = d;
var G__6169 = e;
var G__6170 = f;
var G__6171 = g;
var G__6172 = h;
var G__6173 = i;
var G__6174 = j;
var G__6175 = k;
var G__6176 = l;
var G__6177 = m;
var G__6178 = n;
var G__6179 = o;
var G__6180 = p;
var G__6181 = q;
var G__6182 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__6165,G__6166,G__6167,G__6168,G__6169,G__6170,G__6171,G__6172,G__6173,G__6174,G__6175,G__6176,G__6177,G__6178,G__6179,G__6180,G__6181,G__6182) : self__.afn.call(null,G__6165,G__6166,G__6167,G__6168,G__6169,G__6170,G__6171,G__6172,G__6173,G__6174,G__6175,G__6176,G__6177,G__6178,G__6179,G__6180,G__6181,G__6182));
});
var G__6476__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6183 = a;
var G__6184 = b;
var G__6185 = c;
var G__6186 = d;
var G__6187 = e;
var G__6188 = f;
var G__6189 = g;
var G__6190 = h;
var G__6191 = i;
var G__6192 = j;
var G__6193 = k;
var G__6194 = l;
var G__6195 = m;
var G__6196 = n;
var G__6197 = o;
var G__6198 = p;
var G__6199 = q;
var G__6200 = r;
var G__6201 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__6183,G__6184,G__6185,G__6186,G__6187,G__6188,G__6189,G__6190,G__6191,G__6192,G__6193,G__6194,G__6195,G__6196,G__6197,G__6198,G__6199,G__6200,G__6201) : self__.afn.call(null,G__6183,G__6184,G__6185,G__6186,G__6187,G__6188,G__6189,G__6190,G__6191,G__6192,G__6193,G__6194,G__6195,G__6196,G__6197,G__6198,G__6199,G__6200,G__6201));
});
var G__6476__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6202 = a;
var G__6203 = b;
var G__6204 = c;
var G__6205 = d;
var G__6206 = e;
var G__6207 = f;
var G__6208 = g;
var G__6209 = h;
var G__6210 = i;
var G__6211 = j;
var G__6212 = k;
var G__6213 = l;
var G__6214 = m;
var G__6215 = n;
var G__6216 = o;
var G__6217 = p;
var G__6218 = q;
var G__6219 = r;
var G__6220 = s;
var G__6221 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__6202,G__6203,G__6204,G__6205,G__6206,G__6207,G__6208,G__6209,G__6210,G__6211,G__6212,G__6213,G__6214,G__6215,G__6216,G__6217,G__6218,G__6219,G__6220,G__6221) : self__.afn.call(null,G__6202,G__6203,G__6204,G__6205,G__6206,G__6207,G__6208,G__6209,G__6210,G__6211,G__6212,G__6213,G__6214,G__6215,G__6216,G__6217,G__6218,G__6219,G__6220,G__6221));
});
var G__6476__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6222 = self__.afn;
var G__6223 = a;
var G__6224 = b;
var G__6225 = c;
var G__6226 = d;
var G__6227 = e;
var G__6228 = f;
var G__6229 = g;
var G__6230 = h;
var G__6231 = i;
var G__6232 = j;
var G__6233 = k;
var G__6234 = l;
var G__6235 = m;
var G__6236 = n;
var G__6237 = o;
var G__6238 = p;
var G__6239 = q;
var G__6240 = r;
var G__6241 = s;
var G__6242 = t;
var G__6243 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6222,G__6223,G__6224,G__6225,G__6226,G__6227,G__6228,G__6229,G__6230,G__6231,G__6232,G__6233,G__6234,G__6235,G__6236,G__6237,G__6238,G__6239,G__6240,G__6241,G__6242,G__6243) : cljs.core.apply.call(null,G__6222,G__6223,G__6224,G__6225,G__6226,G__6227,G__6228,G__6229,G__6230,G__6231,G__6232,G__6233,G__6234,G__6235,G__6236,G__6237,G__6238,G__6239,G__6240,G__6241,G__6242,G__6243));
});
G__6476 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__6476__1.call(this,self__);
case 2:
return G__6476__2.call(this,self__,a);
case 3:
return G__6476__3.call(this,self__,a,b);
case 4:
return G__6476__4.call(this,self__,a,b,c);
case 5:
return G__6476__5.call(this,self__,a,b,c,d);
case 6:
return G__6476__6.call(this,self__,a,b,c,d,e);
case 7:
return G__6476__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__6476__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__6476__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__6476__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__6476__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__6476__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__6476__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__6476__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__6476__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__6476__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__6476__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__6476__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__6476__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__6476__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__6476__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__6476__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6476.cljs$core$IFn$_invoke$arity$1 = G__6476__1;
G__6476.cljs$core$IFn$_invoke$arity$2 = G__6476__2;
G__6476.cljs$core$IFn$_invoke$arity$3 = G__6476__3;
G__6476.cljs$core$IFn$_invoke$arity$4 = G__6476__4;
G__6476.cljs$core$IFn$_invoke$arity$5 = G__6476__5;
G__6476.cljs$core$IFn$_invoke$arity$6 = G__6476__6;
G__6476.cljs$core$IFn$_invoke$arity$7 = G__6476__7;
G__6476.cljs$core$IFn$_invoke$arity$8 = G__6476__8;
G__6476.cljs$core$IFn$_invoke$arity$9 = G__6476__9;
G__6476.cljs$core$IFn$_invoke$arity$10 = G__6476__10;
G__6476.cljs$core$IFn$_invoke$arity$11 = G__6476__11;
G__6476.cljs$core$IFn$_invoke$arity$12 = G__6476__12;
G__6476.cljs$core$IFn$_invoke$arity$13 = G__6476__13;
G__6476.cljs$core$IFn$_invoke$arity$14 = G__6476__14;
G__6476.cljs$core$IFn$_invoke$arity$15 = G__6476__15;
G__6476.cljs$core$IFn$_invoke$arity$16 = G__6476__16;
G__6476.cljs$core$IFn$_invoke$arity$17 = G__6476__17;
G__6476.cljs$core$IFn$_invoke$arity$18 = G__6476__18;
G__6476.cljs$core$IFn$_invoke$arity$19 = G__6476__19;
G__6476.cljs$core$IFn$_invoke$arity$20 = G__6476__20;
G__6476.cljs$core$IFn$_invoke$arity$21 = G__6476__21;
G__6476.cljs$core$IFn$_invoke$arity$22 = G__6476__22;
return G__6476;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args6011){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6011)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__6244 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__6244) : self__.afn.call(null,G__6244));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__6245 = a;
var G__6246 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__6245,G__6246) : self__.afn.call(null,G__6245,G__6246));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__6247 = a;
var G__6248 = b;
var G__6249 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__6247,G__6248,G__6249) : self__.afn.call(null,G__6247,G__6248,G__6249));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__6250 = a;
var G__6251 = b;
var G__6252 = c;
var G__6253 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__6250,G__6251,G__6252,G__6253) : self__.afn.call(null,G__6250,G__6251,G__6252,G__6253));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__6254 = a;
var G__6255 = b;
var G__6256 = c;
var G__6257 = d;
var G__6258 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__6254,G__6255,G__6256,G__6257,G__6258) : self__.afn.call(null,G__6254,G__6255,G__6256,G__6257,G__6258));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__6259 = a;
var G__6260 = b;
var G__6261 = c;
var G__6262 = d;
var G__6263 = e;
var G__6264 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__6259,G__6260,G__6261,G__6262,G__6263,G__6264) : self__.afn.call(null,G__6259,G__6260,G__6261,G__6262,G__6263,G__6264));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__6265 = a;
var G__6266 = b;
var G__6267 = c;
var G__6268 = d;
var G__6269 = e;
var G__6270 = f;
var G__6271 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__6265,G__6266,G__6267,G__6268,G__6269,G__6270,G__6271) : self__.afn.call(null,G__6265,G__6266,G__6267,G__6268,G__6269,G__6270,G__6271));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__6272 = a;
var G__6273 = b;
var G__6274 = c;
var G__6275 = d;
var G__6276 = e;
var G__6277 = f;
var G__6278 = g;
var G__6279 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__6272,G__6273,G__6274,G__6275,G__6276,G__6277,G__6278,G__6279) : self__.afn.call(null,G__6272,G__6273,G__6274,G__6275,G__6276,G__6277,G__6278,G__6279));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__6280 = a;
var G__6281 = b;
var G__6282 = c;
var G__6283 = d;
var G__6284 = e;
var G__6285 = f;
var G__6286 = g;
var G__6287 = h;
var G__6288 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__6280,G__6281,G__6282,G__6283,G__6284,G__6285,G__6286,G__6287,G__6288) : self__.afn.call(null,G__6280,G__6281,G__6282,G__6283,G__6284,G__6285,G__6286,G__6287,G__6288));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__6289 = a;
var G__6290 = b;
var G__6291 = c;
var G__6292 = d;
var G__6293 = e;
var G__6294 = f;
var G__6295 = g;
var G__6296 = h;
var G__6297 = i;
var G__6298 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__6289,G__6290,G__6291,G__6292,G__6293,G__6294,G__6295,G__6296,G__6297,G__6298) : self__.afn.call(null,G__6289,G__6290,G__6291,G__6292,G__6293,G__6294,G__6295,G__6296,G__6297,G__6298));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__6299 = a;
var G__6300 = b;
var G__6301 = c;
var G__6302 = d;
var G__6303 = e;
var G__6304 = f;
var G__6305 = g;
var G__6306 = h;
var G__6307 = i;
var G__6308 = j;
var G__6309 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__6299,G__6300,G__6301,G__6302,G__6303,G__6304,G__6305,G__6306,G__6307,G__6308,G__6309) : self__.afn.call(null,G__6299,G__6300,G__6301,G__6302,G__6303,G__6304,G__6305,G__6306,G__6307,G__6308,G__6309));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__6310 = a;
var G__6311 = b;
var G__6312 = c;
var G__6313 = d;
var G__6314 = e;
var G__6315 = f;
var G__6316 = g;
var G__6317 = h;
var G__6318 = i;
var G__6319 = j;
var G__6320 = k;
var G__6321 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__6310,G__6311,G__6312,G__6313,G__6314,G__6315,G__6316,G__6317,G__6318,G__6319,G__6320,G__6321) : self__.afn.call(null,G__6310,G__6311,G__6312,G__6313,G__6314,G__6315,G__6316,G__6317,G__6318,G__6319,G__6320,G__6321));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__6322 = a;
var G__6323 = b;
var G__6324 = c;
var G__6325 = d;
var G__6326 = e;
var G__6327 = f;
var G__6328 = g;
var G__6329 = h;
var G__6330 = i;
var G__6331 = j;
var G__6332 = k;
var G__6333 = l;
var G__6334 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__6322,G__6323,G__6324,G__6325,G__6326,G__6327,G__6328,G__6329,G__6330,G__6331,G__6332,G__6333,G__6334) : self__.afn.call(null,G__6322,G__6323,G__6324,G__6325,G__6326,G__6327,G__6328,G__6329,G__6330,G__6331,G__6332,G__6333,G__6334));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__6335 = a;
var G__6336 = b;
var G__6337 = c;
var G__6338 = d;
var G__6339 = e;
var G__6340 = f;
var G__6341 = g;
var G__6342 = h;
var G__6343 = i;
var G__6344 = j;
var G__6345 = k;
var G__6346 = l;
var G__6347 = m;
var G__6348 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__6335,G__6336,G__6337,G__6338,G__6339,G__6340,G__6341,G__6342,G__6343,G__6344,G__6345,G__6346,G__6347,G__6348) : self__.afn.call(null,G__6335,G__6336,G__6337,G__6338,G__6339,G__6340,G__6341,G__6342,G__6343,G__6344,G__6345,G__6346,G__6347,G__6348));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__6349 = a;
var G__6350 = b;
var G__6351 = c;
var G__6352 = d;
var G__6353 = e;
var G__6354 = f;
var G__6355 = g;
var G__6356 = h;
var G__6357 = i;
var G__6358 = j;
var G__6359 = k;
var G__6360 = l;
var G__6361 = m;
var G__6362 = n;
var G__6363 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__6349,G__6350,G__6351,G__6352,G__6353,G__6354,G__6355,G__6356,G__6357,G__6358,G__6359,G__6360,G__6361,G__6362,G__6363) : self__.afn.call(null,G__6349,G__6350,G__6351,G__6352,G__6353,G__6354,G__6355,G__6356,G__6357,G__6358,G__6359,G__6360,G__6361,G__6362,G__6363));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__6364 = a;
var G__6365 = b;
var G__6366 = c;
var G__6367 = d;
var G__6368 = e;
var G__6369 = f;
var G__6370 = g;
var G__6371 = h;
var G__6372 = i;
var G__6373 = j;
var G__6374 = k;
var G__6375 = l;
var G__6376 = m;
var G__6377 = n;
var G__6378 = o;
var G__6379 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__6364,G__6365,G__6366,G__6367,G__6368,G__6369,G__6370,G__6371,G__6372,G__6373,G__6374,G__6375,G__6376,G__6377,G__6378,G__6379) : self__.afn.call(null,G__6364,G__6365,G__6366,G__6367,G__6368,G__6369,G__6370,G__6371,G__6372,G__6373,G__6374,G__6375,G__6376,G__6377,G__6378,G__6379));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__6380 = a;
var G__6381 = b;
var G__6382 = c;
var G__6383 = d;
var G__6384 = e;
var G__6385 = f;
var G__6386 = g;
var G__6387 = h;
var G__6388 = i;
var G__6389 = j;
var G__6390 = k;
var G__6391 = l;
var G__6392 = m;
var G__6393 = n;
var G__6394 = o;
var G__6395 = p;
var G__6396 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__6380,G__6381,G__6382,G__6383,G__6384,G__6385,G__6386,G__6387,G__6388,G__6389,G__6390,G__6391,G__6392,G__6393,G__6394,G__6395,G__6396) : self__.afn.call(null,G__6380,G__6381,G__6382,G__6383,G__6384,G__6385,G__6386,G__6387,G__6388,G__6389,G__6390,G__6391,G__6392,G__6393,G__6394,G__6395,G__6396));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__6397 = a;
var G__6398 = b;
var G__6399 = c;
var G__6400 = d;
var G__6401 = e;
var G__6402 = f;
var G__6403 = g;
var G__6404 = h;
var G__6405 = i;
var G__6406 = j;
var G__6407 = k;
var G__6408 = l;
var G__6409 = m;
var G__6410 = n;
var G__6411 = o;
var G__6412 = p;
var G__6413 = q;
var G__6414 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__6397,G__6398,G__6399,G__6400,G__6401,G__6402,G__6403,G__6404,G__6405,G__6406,G__6407,G__6408,G__6409,G__6410,G__6411,G__6412,G__6413,G__6414) : self__.afn.call(null,G__6397,G__6398,G__6399,G__6400,G__6401,G__6402,G__6403,G__6404,G__6405,G__6406,G__6407,G__6408,G__6409,G__6410,G__6411,G__6412,G__6413,G__6414));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__6415 = a;
var G__6416 = b;
var G__6417 = c;
var G__6418 = d;
var G__6419 = e;
var G__6420 = f;
var G__6421 = g;
var G__6422 = h;
var G__6423 = i;
var G__6424 = j;
var G__6425 = k;
var G__6426 = l;
var G__6427 = m;
var G__6428 = n;
var G__6429 = o;
var G__6430 = p;
var G__6431 = q;
var G__6432 = r;
var G__6433 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__6415,G__6416,G__6417,G__6418,G__6419,G__6420,G__6421,G__6422,G__6423,G__6424,G__6425,G__6426,G__6427,G__6428,G__6429,G__6430,G__6431,G__6432,G__6433) : self__.afn.call(null,G__6415,G__6416,G__6417,G__6418,G__6419,G__6420,G__6421,G__6422,G__6423,G__6424,G__6425,G__6426,G__6427,G__6428,G__6429,G__6430,G__6431,G__6432,G__6433));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__6434 = a;
var G__6435 = b;
var G__6436 = c;
var G__6437 = d;
var G__6438 = e;
var G__6439 = f;
var G__6440 = g;
var G__6441 = h;
var G__6442 = i;
var G__6443 = j;
var G__6444 = k;
var G__6445 = l;
var G__6446 = m;
var G__6447 = n;
var G__6448 = o;
var G__6449 = p;
var G__6450 = q;
var G__6451 = r;
var G__6452 = s;
var G__6453 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__6434,G__6435,G__6436,G__6437,G__6438,G__6439,G__6440,G__6441,G__6442,G__6443,G__6444,G__6445,G__6446,G__6447,G__6448,G__6449,G__6450,G__6451,G__6452,G__6453) : self__.afn.call(null,G__6434,G__6435,G__6436,G__6437,G__6438,G__6439,G__6440,G__6441,G__6442,G__6443,G__6444,G__6445,G__6446,G__6447,G__6448,G__6449,G__6450,G__6451,G__6452,G__6453));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__6454 = self__.afn;
var G__6455 = a;
var G__6456 = b;
var G__6457 = c;
var G__6458 = d;
var G__6459 = e;
var G__6460 = f;
var G__6461 = g;
var G__6462 = h;
var G__6463 = i;
var G__6464 = j;
var G__6465 = k;
var G__6466 = l;
var G__6467 = m;
var G__6468 = n;
var G__6469 = o;
var G__6470 = p;
var G__6471 = q;
var G__6472 = r;
var G__6473 = s;
var G__6474 = t;
var G__6475 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6454,G__6455,G__6456,G__6457,G__6458,G__6459,G__6460,G__6461,G__6462,G__6463,G__6464,G__6465,G__6466,G__6467,G__6468,G__6469,G__6470,G__6471,G__6472,G__6473,G__6474,G__6475) : cljs.core.apply.call(null,G__6454,G__6455,G__6456,G__6457,G__6458,G__6459,G__6460,G__6461,G__6462,G__6463,G__6464,G__6465,G__6466,G__6467,G__6468,G__6469,G__6470,G__6471,G__6472,G__6473,G__6474,G__6475));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function cljs$core$__GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
 * Returns an object of the same type and value as obj, with
 * map m as its metadata.
 */
cljs.core.with_meta = (function cljs$core$with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__6480 = o;
if(G__6480){
var bit__4441__auto__ = (G__6480.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4441__auto__) || (G__6480.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__6480.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__6480);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__6480);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
 * Returns the metadata of obj, returns nil if there is no metadata.
 */
cljs.core.meta = (function cljs$core$meta(o){
if((function (){var and__3755__auto__ = !((o == null));
if(and__3755__auto__){
var G__6484 = o;
if(G__6484){
var bit__4441__auto__ = (G__6484.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4441__auto__) || (G__6484.cljs$core$IMeta$)){
return true;
} else {
if((!G__6484.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__6484);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__6484);
}
} else {
return and__3755__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
 * For a list or queue, same as first, for a vector, same as, but much
 * more efficient than, last. If the collection is empty, returns nil.
 */
cljs.core.peek = (function cljs$core$peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
 * For a list or queue, returns a new list/queue without the first
 * item, for a vector, returns a new vector without the last item.
 * Note - not the same as next/butlast.
 */
cljs.core.pop = (function cljs$core$pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
 * disj[oin]. Returns a new set of the same (hashed/sorted) type, that
 * does not contain key(s).
 * @param {...*} var_args
 */
cljs.core.disj = (function() {
var cljs$core$disj = null;
var cljs$core$disj__1 = (function (coll){
return coll;
});
var cljs$core$disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var cljs$core$disj__3 = (function() { 
var G__6487__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = cljs$core$disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__6488 = ret;
var G__6489 = cljs.core.first(ks);
var G__6490 = cljs.core.next(ks);
coll = G__6488;
k = G__6489;
ks = G__6490;
continue;
} else {
return ret;
}
}
break;
}
};
var G__6487 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__6491__i = 0, G__6491__a = new Array(arguments.length -  2);
while (G__6491__i < G__6491__a.length) {G__6491__a[G__6491__i] = arguments[G__6491__i + 2]; ++G__6491__i;}
  ks = new cljs.core.IndexedSeq(G__6491__a,0);
} 
return G__6487__delegate.call(this,coll,k,ks);};
G__6487.cljs$lang$maxFixedArity = 2;
G__6487.cljs$lang$applyTo = (function (arglist__6492){
var coll = cljs.core.first(arglist__6492);
arglist__6492 = cljs.core.next(arglist__6492);
var k = cljs.core.first(arglist__6492);
var ks = cljs.core.rest(arglist__6492);
return G__6487__delegate(coll,k,ks);
});
G__6487.cljs$core$IFn$_invoke$arity$variadic = G__6487__delegate;
return G__6487;
})()
;
cljs$core$disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return cljs$core$disj__1.call(this,coll);
case 2:
return cljs$core$disj__2.call(this,coll,k);
default:
var G__6493 = null;
if (arguments.length > 2) {
var G__6494__i = 0, G__6494__a = new Array(arguments.length -  2);
while (G__6494__i < G__6494__a.length) {G__6494__a[G__6494__i] = arguments[G__6494__i + 2]; ++G__6494__i;}
G__6493 = new cljs.core.IndexedSeq(G__6494__a,0);
}
return cljs$core$disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__6493);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$disj.cljs$lang$maxFixedArity = 2;
cljs$core$disj.cljs$lang$applyTo = cljs$core$disj__3.cljs$lang$applyTo;
cljs$core$disj.cljs$core$IFn$_invoke$arity$1 = cljs$core$disj__1;
cljs$core$disj.cljs$core$IFn$_invoke$arity$2 = cljs$core$disj__2;
cljs$core$disj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$disj__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$disj;
})()
;
/**
 * Returns true if coll has no items - same as (not (seq coll)).
 * Please use the idiom (seq x) rather than (not (empty? x))
 */
cljs.core.empty_QMARK_ = (function cljs$core$empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
 * Returns true if x satisfies ICollection
 */
cljs.core.coll_QMARK_ = (function cljs$core$coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__6496 = x;
if(G__6496){
var bit__4441__auto__ = (G__6496.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4441__auto__) || (G__6496.cljs$core$ICollection$)){
return true;
} else {
if((!G__6496.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__6496);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__6496);
}
}
});
/**
 * Returns true if x satisfies ISet
 */
cljs.core.set_QMARK_ = (function cljs$core$set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__6498 = x;
if(G__6498){
var bit__4441__auto__ = (G__6498.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4441__auto__) || (G__6498.cljs$core$ISet$)){
return true;
} else {
if((!G__6498.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__6498);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__6498);
}
}
});
/**
 * Returns true if coll implements Associative
 */
cljs.core.associative_QMARK_ = (function cljs$core$associative_QMARK_(x){
var G__6500 = x;
if(G__6500){
var bit__4441__auto__ = (G__6500.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4441__auto__) || (G__6500.cljs$core$IAssociative$)){
return true;
} else {
if((!G__6500.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__6500);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__6500);
}
});
/**
 * Returns true if coll satisfies ISequential
 */
cljs.core.sequential_QMARK_ = (function cljs$core$sequential_QMARK_(x){
var G__6502 = x;
if(G__6502){
var bit__4441__auto__ = (G__6502.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4441__auto__) || (G__6502.cljs$core$ISequential$)){
return true;
} else {
if((!G__6502.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__6502);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__6502);
}
});
/**
 * Returns true if coll satisfies ISorted
 */
cljs.core.sorted_QMARK_ = (function cljs$core$sorted_QMARK_(x){
var G__6504 = x;
if(G__6504){
var bit__4441__auto__ = (G__6504.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4441__auto__) || (G__6504.cljs$core$ISorted$)){
return true;
} else {
if((!G__6504.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__6504);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__6504);
}
});
/**
 * Returns true if coll satisfies IReduce
 */
cljs.core.reduceable_QMARK_ = (function cljs$core$reduceable_QMARK_(x){
var G__6506 = x;
if(G__6506){
var bit__4441__auto__ = (G__6506.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4441__auto__) || (G__6506.cljs$core$IReduce$)){
return true;
} else {
if((!G__6506.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__6506);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__6506);
}
});
/**
 * Return true if x satisfies IMap
 */
cljs.core.map_QMARK_ = (function cljs$core$map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__6508 = x;
if(G__6508){
var bit__4441__auto__ = (G__6508.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4441__auto__) || (G__6508.cljs$core$IMap$)){
return true;
} else {
if((!G__6508.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__6508);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__6508);
}
}
});
/**
 * Return true if x satisfies IVector
 */
cljs.core.vector_QMARK_ = (function cljs$core$vector_QMARK_(x){
var G__6510 = x;
if(G__6510){
var bit__4441__auto__ = (G__6510.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4441__auto__) || (G__6510.cljs$core$IVector$)){
return true;
} else {
if((!G__6510.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__6510);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__6510);
}
});

/**
 * Return true if x is satisfies IChunkedSeq.
 */
cljs.core.chunked_seq_QMARK_ = (function cljs$core$chunked_seq_QMARK_(x){
var G__6512 = x;
if(G__6512){
var bit__4434__auto__ = (G__6512.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4434__auto__) || (G__6512.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
 * Create JavaSript object from an even number arguments representing
 * interleaved keys and values.
 * @param {...*} var_args
 */
cljs.core.js_obj = (function() {
var cljs$core$js_obj = null;
var cljs$core$js_obj__0 = (function (){
var obj6518 = {};
return obj6518;
});
var cljs$core$js_obj__1 = (function() { 
var G__6521__delegate = function (keyvals){
var G__6519 = goog.object.create;
var G__6520 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__6519,G__6520) : cljs.core.apply.call(null,G__6519,G__6520));
};
var G__6521 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__6522__i = 0, G__6522__a = new Array(arguments.length -  0);
while (G__6522__i < G__6522__a.length) {G__6522__a[G__6522__i] = arguments[G__6522__i + 0]; ++G__6522__i;}
  keyvals = new cljs.core.IndexedSeq(G__6522__a,0);
} 
return G__6521__delegate.call(this,keyvals);};
G__6521.cljs$lang$maxFixedArity = 0;
G__6521.cljs$lang$applyTo = (function (arglist__6523){
var keyvals = cljs.core.seq(arglist__6523);
return G__6521__delegate(keyvals);
});
G__6521.cljs$core$IFn$_invoke$arity$variadic = G__6521__delegate;
return G__6521;
})()
;
cljs$core$js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return cljs$core$js_obj__0.call(this);
default:
var G__6524 = null;
if (arguments.length > 0) {
var G__6525__i = 0, G__6525__a = new Array(arguments.length -  0);
while (G__6525__i < G__6525__a.length) {G__6525__a[G__6525__i] = arguments[G__6525__i + 0]; ++G__6525__i;}
G__6524 = new cljs.core.IndexedSeq(G__6525__a,0);
}
return cljs$core$js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__6524);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$js_obj.cljs$lang$maxFixedArity = 0;
cljs$core$js_obj.cljs$lang$applyTo = cljs$core$js_obj__1.cljs$lang$applyTo;
cljs$core$js_obj.cljs$core$IFn$_invoke$arity$0 = cljs$core$js_obj__0;
cljs$core$js_obj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$js_obj;
})()
;
/**
 * Return the JavaScript keys for an object.
 */
cljs.core.js_keys = (function cljs$core$js_keys(obj){
var keys = [];
var G__6528_6530 = obj;
var G__6529_6531 = ((function (G__6528_6530,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__6528_6530,keys))
;
goog.object.forEach(G__6528_6530,G__6529_6531);

return keys;
});
/**
 * Delete a property from a JavaScript object.
 */
cljs.core.js_delete = (function cljs$core$js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function cljs$core$array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__6532 = (i__$1 + (1));
var G__6533 = (j__$1 + (1));
var G__6534 = (len__$1 - (1));
i__$1 = G__6532;
j__$1 = G__6533;
len__$1 = G__6534;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function cljs$core$array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__6535 = (i__$1 - (1));
var G__6536 = (j__$1 - (1));
var G__6537 = (len__$1 - (1));
i__$1 = G__6535;
j__$1 = G__6536;
len__$1 = G__6537;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj6539 = {};
return obj6539;
})();
/**
 * Returns true if x is the value false, false otherwise.
 */
cljs.core.false_QMARK_ = (function cljs$core$false_QMARK_(x){
return x === false;
});
/**
 * Returns true if x is the value true, false otherwise.
 */
cljs.core.true_QMARK_ = (function cljs$core$true_QMARK_(x){
return x === true;
});
/**
 * Returns true if x identical to the JavaScript undefined value.
 */
cljs.core.undefined_QMARK_ = (function cljs$core$undefined_QMARK_(x){
return (void 0 === x);
});
/**
 * Return true if s satisfies ISeq
 */
cljs.core.seq_QMARK_ = (function cljs$core$seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__6541 = s;
if(G__6541){
var bit__4441__auto__ = (G__6541.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4441__auto__) || (G__6541.cljs$core$ISeq$)){
return true;
} else {
if((!G__6541.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6541);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6541);
}
}
});
/**
 * Return true if s satisfies ISeqable
 */
cljs.core.seqable_QMARK_ = (function cljs$core$seqable_QMARK_(s){
var G__6543 = s;
if(G__6543){
var bit__4441__auto__ = (G__6543.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4441__auto__) || (G__6543.cljs$core$ISeqable$)){
return true;
} else {
if((!G__6543.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__6543);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__6543);
}
});
/**
 * Coerce to boolean
 */
cljs.core.boolean$ = (function cljs$core$boolean(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
/**
 * Returns true if f returns true for fn? or satisfies IFn.
 */
cljs.core.ifn_QMARK_ = (function cljs$core$ifn_QMARK_(f){
var or__3767__auto__ = cljs.core.fn_QMARK_(f);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var G__6547 = f;
if(G__6547){
var bit__4441__auto__ = (G__6547.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4441__auto__) || (G__6547.cljs$core$IFn$)){
return true;
} else {
if((!G__6547.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__6547);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__6547);
}
}
});
/**
 * Returns true if n is an integer.
 */
cljs.core.integer_QMARK_ = (function cljs$core$integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__6560 = n;
return isNaN(G__6560);
})())) && (!((n === Infinity))) && (((function (){var G__6561 = n;
return parseFloat(G__6561);
})() === (function (){var G__6562 = n;
var G__6563 = (10);
return parseInt(G__6562,G__6563);
})()));
});
/**
 * Returns true if key is present in the given collection, otherwise
 * returns false.  Note that for numerically indexed collections like
 * vectors and arrays, this tests if the numeric key is within the
 * range of indexes. 'contains?' operates constant or logarithmic time;
 * it will not perform a linear search for a value.  See also 'some'.
 */
cljs.core.contains_QMARK_ = (function cljs$core$contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
 * Returns the map entry for key, or nil if key not present.
 */
cljs.core.find = (function cljs$core$find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
 * Returns true if no two of the arguments are =
 * @param {...*} var_args
 */
cljs.core.distinct_QMARK_ = (function() {
var cljs$core$distinct_QMARK_ = null;
var cljs$core$distinct_QMARK___1 = (function (x){
return true;
});
var cljs$core$distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var cljs$core$distinct_QMARK___3 = (function() { 
var G__6564__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__6565 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__6566 = etc;
s = G__6565;
xs = G__6566;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__6564 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6567__i = 0, G__6567__a = new Array(arguments.length -  2);
while (G__6567__i < G__6567__a.length) {G__6567__a[G__6567__i] = arguments[G__6567__i + 2]; ++G__6567__i;}
  more = new cljs.core.IndexedSeq(G__6567__a,0);
} 
return G__6564__delegate.call(this,x,y,more);};
G__6564.cljs$lang$maxFixedArity = 2;
G__6564.cljs$lang$applyTo = (function (arglist__6568){
var x = cljs.core.first(arglist__6568);
arglist__6568 = cljs.core.next(arglist__6568);
var y = cljs.core.first(arglist__6568);
var more = cljs.core.rest(arglist__6568);
return G__6564__delegate(x,y,more);
});
G__6564.cljs$core$IFn$_invoke$arity$variadic = G__6564__delegate;
return G__6564;
})()
;
cljs$core$distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$distinct_QMARK___1.call(this,x);
case 2:
return cljs$core$distinct_QMARK___2.call(this,x,y);
default:
var G__6569 = null;
if (arguments.length > 2) {
var G__6570__i = 0, G__6570__a = new Array(arguments.length -  2);
while (G__6570__i < G__6570__a.length) {G__6570__a[G__6570__i] = arguments[G__6570__i + 2]; ++G__6570__i;}
G__6569 = new cljs.core.IndexedSeq(G__6570__a,0);
}
return cljs$core$distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6569);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs$core$distinct_QMARK_.cljs$lang$applyTo = cljs$core$distinct_QMARK___3.cljs$lang$applyTo;
cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = cljs$core$distinct_QMARK___1;
cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = cljs$core$distinct_QMARK___2;
cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$distinct_QMARK_;
})()
;
/**
 * Comparator. Returns a negative number, zero, or a positive number
 * when x is logically 'less than', 'equal to', or 'greater than'
 * y. Uses IComparable if available and google.array.defaultCompare for objects
 * of the same type and special-cases nil to be less than any other object.
 */
cljs.core.compare = (function cljs$core$compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__6574 = x;
if(G__6574){
var bit__4434__auto__ = (G__6574.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4434__auto__) || (G__6574.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__6575 = x;
var G__6576 = y;
return goog.array.defaultCompare(G__6575,G__6576);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
 * Compare indexed collection.
 */
cljs.core.compare_indexed = (function() {
var cljs$core$compare_indexed = null;
var cljs$core$compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var cljs$core$compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__6581 = xs;
var G__6582 = ys;
var G__6583 = len;
var G__6584 = (n + (1));
xs = G__6581;
ys = G__6582;
len = G__6583;
n = G__6584;
continue;
} else {
return d;
}
break;
}
});
cljs$core$compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return cljs$core$compare_indexed__2.call(this,xs,ys);
case 4:
return cljs$core$compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$compare_indexed__2;
cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$4 = cljs$core$compare_indexed__4;
return cljs$core$compare_indexed;
})()
;
/**
 * Given a fn that might be boolean valued or a comparator,
 * return a fn that is a comparator.
 */
cljs.core.fn__GT_comparator = (function cljs$core$fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__6589 = x;
var G__6590 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6589,G__6590) : f.call(null,G__6589,G__6590));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__6591 = y;
var G__6592 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6591,G__6592) : f.call(null,G__6591,G__6592));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
 * Returns a sorted sequence of the items in coll. Comp can be
 * boolean-valued comparison function, or a -/0/+ valued comparator.
 * Comp defaults to compare.
 */
cljs.core.sort = (function() {
var cljs$core$sort = null;
var cljs$core$sort__1 = (function (coll){
return cljs$core$sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var cljs$core$sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__6598 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__6598) : cljs.core.to_array.call(null,G__6598));
})();
var G__6599_6601 = a;
var G__6600_6602 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__6599_6601,G__6600_6602);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
cljs$core$sort = function(comp,coll){
switch(arguments.length){
case 1:
return cljs$core$sort__1.call(this,comp);
case 2:
return cljs$core$sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$sort.cljs$core$IFn$_invoke$arity$1 = cljs$core$sort__1;
cljs$core$sort.cljs$core$IFn$_invoke$arity$2 = cljs$core$sort__2;
return cljs$core$sort;
})()
;
/**
 * Returns a sorted sequence of the items in coll, where the sort
 * order is determined by comparing (keyfn item).  Comp can be
 * boolean-valued comparison funcion, or a -/0/+ valued comparator.
 * Comp defaults to compare.
 */
cljs.core.sort_by = (function() {
var cljs$core$sort_by = null;
var cljs$core$sort_by__2 = (function (keyfn,coll){
return cljs$core$sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var cljs$core$sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__6608 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__6608) : keyfn.call(null,G__6608));
})(),(function (){var G__6609 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__6609) : keyfn.call(null,G__6609));
})());
}),coll);
});
cljs$core$sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return cljs$core$sort_by__2.call(this,keyfn,comp);
case 3:
return cljs$core$sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$sort_by.cljs$core$IFn$_invoke$arity$2 = cljs$core$sort_by__2;
cljs$core$sort_by.cljs$core$IFn$_invoke$arity$3 = cljs$core$sort_by__3;
return cljs$core$sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var cljs$core$seq_reduce = null;
var cljs$core$seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__6615 = f;
var G__6616 = cljs.core.first(s);
var G__6617 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__6615,G__6616,G__6617) : cljs.core.reduce.call(null,G__6615,G__6616,G__6617));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var cljs$core$seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__6618 = val__$1;
var G__6619 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6618,G__6619) : f.call(null,G__6618,G__6619));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6620 = nval;
var G__6621 = cljs.core.next(coll__$1);
val__$1 = G__6620;
coll__$1 = G__6621;
continue;
}
} else {
return val__$1;
}
break;
}
});
cljs$core$seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return cljs$core$seq_reduce__2.call(this,f,val);
case 3:
return cljs$core$seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$seq_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$seq_reduce__2;
cljs$core$seq_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$seq_reduce__3;
return cljs$core$seq_reduce;
})()
;
/**
 * Return a random permutation of coll
 */
cljs.core.shuffle = (function cljs$core$shuffle(coll){
var a = (function (){var G__6625 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__6625) : cljs.core.to_array.call(null,G__6625));
})();
var G__6626_6628 = a;
goog.array.shuffle(G__6626_6628);

var G__6627 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__6627) : cljs.core.vec.call(null,G__6627));
});
/**
 * f should be a function of 2 arguments. If val is not supplied,
 * returns the result of applying f to the first 2 items in coll, then
 * applying f to that result and the 3rd item, etc. If coll contains no
 * items, f must accept no arguments as well, and reduce returns the
 * result of calling f with no arguments.  If coll has only 1 item, it
 * is returned and f is not called.  If val is supplied, returns the
 * result of applying f to val and the first item in coll, then
 * applying f to that result and the 2nd item, etc. If coll contains no
 * items, returns val and f is not called.
 */
cljs.core.reduce = (function() {
var cljs$core$reduce = null;
var cljs$core$reduce__2 = (function (f,coll){
if((function (){var G__6631 = coll;
if(G__6631){
var bit__4434__auto__ = (G__6631.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4434__auto__) || (G__6631.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(cljs.core.array_QMARK_(coll)){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var cljs$core$reduce__3 = (function (f,val,coll){
if((function (){var G__6632 = coll;
if(G__6632){
var bit__4434__auto__ = (G__6632.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4434__auto__) || (G__6632.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(cljs.core.array_QMARK_(coll)){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
cljs$core$reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return cljs$core$reduce__2.call(this,f,val);
case 3:
return cljs$core$reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$reduce__2;
cljs$core$reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$reduce__3;
return cljs$core$reduce;
})()
;
/**
 * Reduces an associative collection. f should be a function of 3
 * arguments. Returns the result of applying f to init, the first key
 * and the first value in coll, then applying f to that result and the
 * 2nd key and value, etc. If coll contains no entries, returns init
 * and f is not called. Note that reduce-kv is supported on vectors,
 * where the keys will be the ordinals.
 */
cljs.core.reduce_kv = (function cljs$core$reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
/**
 * Returns its argument.
 */
cljs.core.identity = (function cljs$core$identity(x){
return x;
});
/**
 * Takes a reducing function f of 2 args and returns a fn suitable for
 * transduce by adding an arity-1 signature that calls cf (default -
 * identity) on the result argument.
 */
cljs.core.completing = (function() {
var cljs$core$completing = null;
var cljs$core$completing__1 = (function (f){
return cljs$core$completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var cljs$core$completing__2 = (function (f,cf){
return (function() {
var G__6641 = null;
var G__6641__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__6641__1 = (function (x){
var G__6638 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__6638) : cf.call(null,G__6638));
});
var G__6641__2 = (function (x,y){
var G__6639 = x;
var G__6640 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6639,G__6640) : f.call(null,G__6639,G__6640));
});
G__6641 = function(x,y){
switch(arguments.length){
case 0:
return G__6641__0.call(this);
case 1:
return G__6641__1.call(this,x);
case 2:
return G__6641__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6641.cljs$core$IFn$_invoke$arity$0 = G__6641__0;
G__6641.cljs$core$IFn$_invoke$arity$1 = G__6641__1;
G__6641.cljs$core$IFn$_invoke$arity$2 = G__6641__2;
return G__6641;
})()
});
cljs$core$completing = function(f,cf){
switch(arguments.length){
case 1:
return cljs$core$completing__1.call(this,f);
case 2:
return cljs$core$completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$completing.cljs$core$IFn$_invoke$arity$1 = cljs$core$completing__1;
cljs$core$completing.cljs$core$IFn$_invoke$arity$2 = cljs$core$completing__2;
return cljs$core$completing;
})()
;
/**
 * reduce with a transformation of f (xf). If init is not
 * supplied, (f) will be called to produce it. f should be a reducing
 * step function that accepts both 1 and 2 arguments, if it accepts
 * only 2 you can add the arity-1 with 'completing'. Returns the result
 * of applying (the transformed) xf to init and the first item in coll,
 * then applying xf to that result and the 2nd item, etc. If coll
 * contains no items, returns init and f is not called. Note that
 * certain transforms may inject or skip items.
 */
cljs.core.transduce = (function() {
var cljs$core$transduce = null;
var cljs$core$transduce__3 = (function (xform,f,coll){
return cljs$core$transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var cljs$core$transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__6648 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__6648) : xform.call(null,G__6648));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__6649 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__6649) : f__$1.call(null,G__6649));
});
cljs$core$transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return cljs$core$transduce__3.call(this,xform,f,init);
case 4:
return cljs$core$transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$transduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$transduce__3;
cljs$core$transduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$transduce__4;
return cljs$core$transduce;
})()
;
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core._PLUS_ = (function() {
var cljs$core$_PLUS_ = null;
var cljs$core$_PLUS___0 = (function (){
return (0);
});
var cljs$core$_PLUS___1 = (function (x){
return x;
});
var cljs$core$_PLUS___2 = (function (x,y){
return (x + y);
});
var cljs$core$_PLUS___3 = (function() { 
var G__6650__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_PLUS_,(x + y),more);
};
var G__6650 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6651__i = 0, G__6651__a = new Array(arguments.length -  2);
while (G__6651__i < G__6651__a.length) {G__6651__a[G__6651__i] = arguments[G__6651__i + 2]; ++G__6651__i;}
  more = new cljs.core.IndexedSeq(G__6651__a,0);
} 
return G__6650__delegate.call(this,x,y,more);};
G__6650.cljs$lang$maxFixedArity = 2;
G__6650.cljs$lang$applyTo = (function (arglist__6652){
var x = cljs.core.first(arglist__6652);
arglist__6652 = cljs.core.next(arglist__6652);
var y = cljs.core.first(arglist__6652);
var more = cljs.core.rest(arglist__6652);
return G__6650__delegate(x,y,more);
});
G__6650.cljs$core$IFn$_invoke$arity$variadic = G__6650__delegate;
return G__6650;
})()
;
cljs$core$_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$_PLUS___0.call(this);
case 1:
return cljs$core$_PLUS___1.call(this,x);
case 2:
return cljs$core$_PLUS___2.call(this,x,y);
default:
var G__6653 = null;
if (arguments.length > 2) {
var G__6654__i = 0, G__6654__a = new Array(arguments.length -  2);
while (G__6654__i < G__6654__a.length) {G__6654__a[G__6654__i] = arguments[G__6654__i + 2]; ++G__6654__i;}
G__6653 = new cljs.core.IndexedSeq(G__6654__a,0);
}
return cljs$core$_PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6653);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_PLUS_.cljs$lang$maxFixedArity = 2;
cljs$core$_PLUS_.cljs$lang$applyTo = cljs$core$_PLUS___3.cljs$lang$applyTo;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$0 = cljs$core$_PLUS___0;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_PLUS___1;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_PLUS___2;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_PLUS_;
})()
;
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core._ = (function() {
var cljs$core$_ = null;
var cljs$core$___1 = (function (x){
return (- x);
});
var cljs$core$___2 = (function (x,y){
return (x - y);
});
var cljs$core$___3 = (function() { 
var G__6655__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_,(x - y),more);
};
var G__6655 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6656__i = 0, G__6656__a = new Array(arguments.length -  2);
while (G__6656__i < G__6656__a.length) {G__6656__a[G__6656__i] = arguments[G__6656__i + 2]; ++G__6656__i;}
  more = new cljs.core.IndexedSeq(G__6656__a,0);
} 
return G__6655__delegate.call(this,x,y,more);};
G__6655.cljs$lang$maxFixedArity = 2;
G__6655.cljs$lang$applyTo = (function (arglist__6657){
var x = cljs.core.first(arglist__6657);
arglist__6657 = cljs.core.next(arglist__6657);
var y = cljs.core.first(arglist__6657);
var more = cljs.core.rest(arglist__6657);
return G__6655__delegate(x,y,more);
});
G__6655.cljs$core$IFn$_invoke$arity$variadic = G__6655__delegate;
return G__6655;
})()
;
cljs$core$_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$___1.call(this,x);
case 2:
return cljs$core$___2.call(this,x,y);
default:
var G__6658 = null;
if (arguments.length > 2) {
var G__6659__i = 0, G__6659__a = new Array(arguments.length -  2);
while (G__6659__i < G__6659__a.length) {G__6659__a[G__6659__i] = arguments[G__6659__i + 2]; ++G__6659__i;}
G__6658 = new cljs.core.IndexedSeq(G__6659__a,0);
}
return cljs$core$___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6658);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_.cljs$lang$maxFixedArity = 2;
cljs$core$_.cljs$lang$applyTo = cljs$core$___3.cljs$lang$applyTo;
cljs$core$_.cljs$core$IFn$_invoke$arity$1 = cljs$core$___1;
cljs$core$_.cljs$core$IFn$_invoke$arity$2 = cljs$core$___2;
cljs$core$_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_;
})()
;
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core._STAR_ = (function() {
var cljs$core$_STAR_ = null;
var cljs$core$_STAR___0 = (function (){
return (1);
});
var cljs$core$_STAR___1 = (function (x){
return x;
});
var cljs$core$_STAR___2 = (function (x,y){
return (x * y);
});
var cljs$core$_STAR___3 = (function() { 
var G__6660__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_STAR_,(x * y),more);
};
var G__6660 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6661__i = 0, G__6661__a = new Array(arguments.length -  2);
while (G__6661__i < G__6661__a.length) {G__6661__a[G__6661__i] = arguments[G__6661__i + 2]; ++G__6661__i;}
  more = new cljs.core.IndexedSeq(G__6661__a,0);
} 
return G__6660__delegate.call(this,x,y,more);};
G__6660.cljs$lang$maxFixedArity = 2;
G__6660.cljs$lang$applyTo = (function (arglist__6662){
var x = cljs.core.first(arglist__6662);
arglist__6662 = cljs.core.next(arglist__6662);
var y = cljs.core.first(arglist__6662);
var more = cljs.core.rest(arglist__6662);
return G__6660__delegate(x,y,more);
});
G__6660.cljs$core$IFn$_invoke$arity$variadic = G__6660__delegate;
return G__6660;
})()
;
cljs$core$_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$_STAR___0.call(this);
case 1:
return cljs$core$_STAR___1.call(this,x);
case 2:
return cljs$core$_STAR___2.call(this,x,y);
default:
var G__6663 = null;
if (arguments.length > 2) {
var G__6664__i = 0, G__6664__a = new Array(arguments.length -  2);
while (G__6664__i < G__6664__a.length) {G__6664__a[G__6664__i] = arguments[G__6664__i + 2]; ++G__6664__i;}
G__6663 = new cljs.core.IndexedSeq(G__6664__a,0);
}
return cljs$core$_STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6663);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_STAR_.cljs$lang$maxFixedArity = 2;
cljs$core$_STAR_.cljs$lang$applyTo = cljs$core$_STAR___3.cljs$lang$applyTo;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$0 = cljs$core$_STAR___0;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_STAR___1;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_STAR___2;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_STAR_;
})()
;
/**
 * If no denominators are supplied, returns 1/numerator,
 * else returns numerator divided by all of the denominators.
 * @param {...*} var_args
 */
cljs.core._SLASH_ = (function() {
var cljs$core$_SLASH_ = null;
var cljs$core$_SLASH___1 = (function (x){
return cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var cljs$core$_SLASH___2 = (function (x,y){
return (x / y);
});
var cljs$core$_SLASH___3 = (function() { 
var G__6669__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_SLASH_,cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__6669 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6670__i = 0, G__6670__a = new Array(arguments.length -  2);
while (G__6670__i < G__6670__a.length) {G__6670__a[G__6670__i] = arguments[G__6670__i + 2]; ++G__6670__i;}
  more = new cljs.core.IndexedSeq(G__6670__a,0);
} 
return G__6669__delegate.call(this,x,y,more);};
G__6669.cljs$lang$maxFixedArity = 2;
G__6669.cljs$lang$applyTo = (function (arglist__6671){
var x = cljs.core.first(arglist__6671);
arglist__6671 = cljs.core.next(arglist__6671);
var y = cljs.core.first(arglist__6671);
var more = cljs.core.rest(arglist__6671);
return G__6669__delegate(x,y,more);
});
G__6669.cljs$core$IFn$_invoke$arity$variadic = G__6669__delegate;
return G__6669;
})()
;
cljs$core$_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_SLASH___1.call(this,x);
case 2:
return cljs$core$_SLASH___2.call(this,x,y);
default:
var G__6672 = null;
if (arguments.length > 2) {
var G__6673__i = 0, G__6673__a = new Array(arguments.length -  2);
while (G__6673__i < G__6673__a.length) {G__6673__a[G__6673__i] = arguments[G__6673__i + 2]; ++G__6673__i;}
G__6672 = new cljs.core.IndexedSeq(G__6673__a,0);
}
return cljs$core$_SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6672);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_SLASH_.cljs$lang$maxFixedArity = 2;
cljs$core$_SLASH_.cljs$lang$applyTo = cljs$core$_SLASH___3.cljs$lang$applyTo;
cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_SLASH___1;
cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_SLASH___2;
cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_SLASH_;
})()
;
/**
 * Returns non-nil if nums are in monotonically increasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._LT_ = (function() {
var cljs$core$_LT_ = null;
var cljs$core$_LT___1 = (function (x){
return true;
});
var cljs$core$_LT___2 = (function (x,y){
return (x < y);
});
var cljs$core$_LT___3 = (function() { 
var G__6674__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__6675 = y;
var G__6676 = cljs.core.first(more);
var G__6677 = cljs.core.next(more);
x = G__6675;
y = G__6676;
more = G__6677;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6674 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6678__i = 0, G__6678__a = new Array(arguments.length -  2);
while (G__6678__i < G__6678__a.length) {G__6678__a[G__6678__i] = arguments[G__6678__i + 2]; ++G__6678__i;}
  more = new cljs.core.IndexedSeq(G__6678__a,0);
} 
return G__6674__delegate.call(this,x,y,more);};
G__6674.cljs$lang$maxFixedArity = 2;
G__6674.cljs$lang$applyTo = (function (arglist__6679){
var x = cljs.core.first(arglist__6679);
arglist__6679 = cljs.core.next(arglist__6679);
var y = cljs.core.first(arglist__6679);
var more = cljs.core.rest(arglist__6679);
return G__6674__delegate(x,y,more);
});
G__6674.cljs$core$IFn$_invoke$arity$variadic = G__6674__delegate;
return G__6674;
})()
;
cljs$core$_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_LT___1.call(this,x);
case 2:
return cljs$core$_LT___2.call(this,x,y);
default:
var G__6680 = null;
if (arguments.length > 2) {
var G__6681__i = 0, G__6681__a = new Array(arguments.length -  2);
while (G__6681__i < G__6681__a.length) {G__6681__a[G__6681__i] = arguments[G__6681__i + 2]; ++G__6681__i;}
G__6680 = new cljs.core.IndexedSeq(G__6681__a,0);
}
return cljs$core$_LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6680);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_LT_.cljs$lang$maxFixedArity = 2;
cljs$core$_LT_.cljs$lang$applyTo = cljs$core$_LT___3.cljs$lang$applyTo;
cljs$core$_LT_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_LT___1;
cljs$core$_LT_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_LT___2;
cljs$core$_LT_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_LT___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_LT_;
})()
;
/**
 * Returns non-nil if nums are in monotonically non-decreasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._LT__EQ_ = (function() {
var cljs$core$_LT__EQ_ = null;
var cljs$core$_LT__EQ___1 = (function (x){
return true;
});
var cljs$core$_LT__EQ___2 = (function (x,y){
return (x <= y);
});
var cljs$core$_LT__EQ___3 = (function() { 
var G__6682__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__6683 = y;
var G__6684 = cljs.core.first(more);
var G__6685 = cljs.core.next(more);
x = G__6683;
y = G__6684;
more = G__6685;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6682 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6686__i = 0, G__6686__a = new Array(arguments.length -  2);
while (G__6686__i < G__6686__a.length) {G__6686__a[G__6686__i] = arguments[G__6686__i + 2]; ++G__6686__i;}
  more = new cljs.core.IndexedSeq(G__6686__a,0);
} 
return G__6682__delegate.call(this,x,y,more);};
G__6682.cljs$lang$maxFixedArity = 2;
G__6682.cljs$lang$applyTo = (function (arglist__6687){
var x = cljs.core.first(arglist__6687);
arglist__6687 = cljs.core.next(arglist__6687);
var y = cljs.core.first(arglist__6687);
var more = cljs.core.rest(arglist__6687);
return G__6682__delegate(x,y,more);
});
G__6682.cljs$core$IFn$_invoke$arity$variadic = G__6682__delegate;
return G__6682;
})()
;
cljs$core$_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_LT__EQ___1.call(this,x);
case 2:
return cljs$core$_LT__EQ___2.call(this,x,y);
default:
var G__6688 = null;
if (arguments.length > 2) {
var G__6689__i = 0, G__6689__a = new Array(arguments.length -  2);
while (G__6689__i < G__6689__a.length) {G__6689__a[G__6689__i] = arguments[G__6689__i + 2]; ++G__6689__i;}
G__6688 = new cljs.core.IndexedSeq(G__6689__a,0);
}
return cljs$core$_LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6688);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_LT__EQ_.cljs$lang$applyTo = cljs$core$_LT__EQ___3.cljs$lang$applyTo;
cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_LT__EQ___1;
cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_LT__EQ___2;
cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_LT__EQ_;
})()
;
/**
 * Returns non-nil if nums are in monotonically decreasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._GT_ = (function() {
var cljs$core$_GT_ = null;
var cljs$core$_GT___1 = (function (x){
return true;
});
var cljs$core$_GT___2 = (function (x,y){
return (x > y);
});
var cljs$core$_GT___3 = (function() { 
var G__6690__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__6691 = y;
var G__6692 = cljs.core.first(more);
var G__6693 = cljs.core.next(more);
x = G__6691;
y = G__6692;
more = G__6693;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6690 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6694__i = 0, G__6694__a = new Array(arguments.length -  2);
while (G__6694__i < G__6694__a.length) {G__6694__a[G__6694__i] = arguments[G__6694__i + 2]; ++G__6694__i;}
  more = new cljs.core.IndexedSeq(G__6694__a,0);
} 
return G__6690__delegate.call(this,x,y,more);};
G__6690.cljs$lang$maxFixedArity = 2;
G__6690.cljs$lang$applyTo = (function (arglist__6695){
var x = cljs.core.first(arglist__6695);
arglist__6695 = cljs.core.next(arglist__6695);
var y = cljs.core.first(arglist__6695);
var more = cljs.core.rest(arglist__6695);
return G__6690__delegate(x,y,more);
});
G__6690.cljs$core$IFn$_invoke$arity$variadic = G__6690__delegate;
return G__6690;
})()
;
cljs$core$_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_GT___1.call(this,x);
case 2:
return cljs$core$_GT___2.call(this,x,y);
default:
var G__6696 = null;
if (arguments.length > 2) {
var G__6697__i = 0, G__6697__a = new Array(arguments.length -  2);
while (G__6697__i < G__6697__a.length) {G__6697__a[G__6697__i] = arguments[G__6697__i + 2]; ++G__6697__i;}
G__6696 = new cljs.core.IndexedSeq(G__6697__a,0);
}
return cljs$core$_GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6696);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_GT_.cljs$lang$maxFixedArity = 2;
cljs$core$_GT_.cljs$lang$applyTo = cljs$core$_GT___3.cljs$lang$applyTo;
cljs$core$_GT_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_GT___1;
cljs$core$_GT_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_GT___2;
cljs$core$_GT_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_GT___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_GT_;
})()
;
/**
 * Returns non-nil if nums are in monotonically non-increasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._GT__EQ_ = (function() {
var cljs$core$_GT__EQ_ = null;
var cljs$core$_GT__EQ___1 = (function (x){
return true;
});
var cljs$core$_GT__EQ___2 = (function (x,y){
return (x >= y);
});
var cljs$core$_GT__EQ___3 = (function() { 
var G__6698__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__6699 = y;
var G__6700 = cljs.core.first(more);
var G__6701 = cljs.core.next(more);
x = G__6699;
y = G__6700;
more = G__6701;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6698 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6702__i = 0, G__6702__a = new Array(arguments.length -  2);
while (G__6702__i < G__6702__a.length) {G__6702__a[G__6702__i] = arguments[G__6702__i + 2]; ++G__6702__i;}
  more = new cljs.core.IndexedSeq(G__6702__a,0);
} 
return G__6698__delegate.call(this,x,y,more);};
G__6698.cljs$lang$maxFixedArity = 2;
G__6698.cljs$lang$applyTo = (function (arglist__6703){
var x = cljs.core.first(arglist__6703);
arglist__6703 = cljs.core.next(arglist__6703);
var y = cljs.core.first(arglist__6703);
var more = cljs.core.rest(arglist__6703);
return G__6698__delegate(x,y,more);
});
G__6698.cljs$core$IFn$_invoke$arity$variadic = G__6698__delegate;
return G__6698;
})()
;
cljs$core$_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_GT__EQ___1.call(this,x);
case 2:
return cljs$core$_GT__EQ___2.call(this,x,y);
default:
var G__6704 = null;
if (arguments.length > 2) {
var G__6705__i = 0, G__6705__a = new Array(arguments.length -  2);
while (G__6705__i < G__6705__a.length) {G__6705__a[G__6705__i] = arguments[G__6705__i + 2]; ++G__6705__i;}
G__6704 = new cljs.core.IndexedSeq(G__6705__a,0);
}
return cljs$core$_GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6704);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_GT__EQ_.cljs$lang$applyTo = cljs$core$_GT__EQ___3.cljs$lang$applyTo;
cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_GT__EQ___1;
cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_GT__EQ___2;
cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_GT__EQ_;
})()
;
/**
 * Returns a number one less than num.
 */
cljs.core.dec = (function cljs$core$dec(x){
return (x - (1));
});
/**
 * Returns the greatest of the nums.
 * @param {...*} var_args
 */
cljs.core.max = (function() {
var cljs$core$max = null;
var cljs$core$max__1 = (function (x){
return x;
});
var cljs$core$max__2 = (function (x,y){
var x__4079__auto__ = x;
var y__4080__auto__ = y;
return ((x__4079__auto__ > y__4080__auto__) ? x__4079__auto__ : y__4080__auto__);
});
var cljs$core$max__3 = (function() { 
var G__6706__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$max,(function (){var x__4079__auto__ = x;
var y__4080__auto__ = y;
return ((x__4079__auto__ > y__4080__auto__) ? x__4079__auto__ : y__4080__auto__);
})(),more);
};
var G__6706 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6707__i = 0, G__6707__a = new Array(arguments.length -  2);
while (G__6707__i < G__6707__a.length) {G__6707__a[G__6707__i] = arguments[G__6707__i + 2]; ++G__6707__i;}
  more = new cljs.core.IndexedSeq(G__6707__a,0);
} 
return G__6706__delegate.call(this,x,y,more);};
G__6706.cljs$lang$maxFixedArity = 2;
G__6706.cljs$lang$applyTo = (function (arglist__6708){
var x = cljs.core.first(arglist__6708);
arglist__6708 = cljs.core.next(arglist__6708);
var y = cljs.core.first(arglist__6708);
var more = cljs.core.rest(arglist__6708);
return G__6706__delegate(x,y,more);
});
G__6706.cljs$core$IFn$_invoke$arity$variadic = G__6706__delegate;
return G__6706;
})()
;
cljs$core$max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$max__1.call(this,x);
case 2:
return cljs$core$max__2.call(this,x,y);
default:
var G__6709 = null;
if (arguments.length > 2) {
var G__6710__i = 0, G__6710__a = new Array(arguments.length -  2);
while (G__6710__i < G__6710__a.length) {G__6710__a[G__6710__i] = arguments[G__6710__i + 2]; ++G__6710__i;}
G__6709 = new cljs.core.IndexedSeq(G__6710__a,0);
}
return cljs$core$max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6709);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$max.cljs$lang$maxFixedArity = 2;
cljs$core$max.cljs$lang$applyTo = cljs$core$max__3.cljs$lang$applyTo;
cljs$core$max.cljs$core$IFn$_invoke$arity$1 = cljs$core$max__1;
cljs$core$max.cljs$core$IFn$_invoke$arity$2 = cljs$core$max__2;
cljs$core$max.cljs$core$IFn$_invoke$arity$variadic = cljs$core$max__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$max;
})()
;
/**
 * Returns the least of the nums.
 * @param {...*} var_args
 */
cljs.core.min = (function() {
var cljs$core$min = null;
var cljs$core$min__1 = (function (x){
return x;
});
var cljs$core$min__2 = (function (x,y){
var x__4086__auto__ = x;
var y__4087__auto__ = y;
return ((x__4086__auto__ < y__4087__auto__) ? x__4086__auto__ : y__4087__auto__);
});
var cljs$core$min__3 = (function() { 
var G__6711__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$min,(function (){var x__4086__auto__ = x;
var y__4087__auto__ = y;
return ((x__4086__auto__ < y__4087__auto__) ? x__4086__auto__ : y__4087__auto__);
})(),more);
};
var G__6711 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6712__i = 0, G__6712__a = new Array(arguments.length -  2);
while (G__6712__i < G__6712__a.length) {G__6712__a[G__6712__i] = arguments[G__6712__i + 2]; ++G__6712__i;}
  more = new cljs.core.IndexedSeq(G__6712__a,0);
} 
return G__6711__delegate.call(this,x,y,more);};
G__6711.cljs$lang$maxFixedArity = 2;
G__6711.cljs$lang$applyTo = (function (arglist__6713){
var x = cljs.core.first(arglist__6713);
arglist__6713 = cljs.core.next(arglist__6713);
var y = cljs.core.first(arglist__6713);
var more = cljs.core.rest(arglist__6713);
return G__6711__delegate(x,y,more);
});
G__6711.cljs$core$IFn$_invoke$arity$variadic = G__6711__delegate;
return G__6711;
})()
;
cljs$core$min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$min__1.call(this,x);
case 2:
return cljs$core$min__2.call(this,x,y);
default:
var G__6714 = null;
if (arguments.length > 2) {
var G__6715__i = 0, G__6715__a = new Array(arguments.length -  2);
while (G__6715__i < G__6715__a.length) {G__6715__a[G__6715__i] = arguments[G__6715__i + 2]; ++G__6715__i;}
G__6714 = new cljs.core.IndexedSeq(G__6715__a,0);
}
return cljs$core$min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6714);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$min.cljs$lang$maxFixedArity = 2;
cljs$core$min.cljs$lang$applyTo = cljs$core$min__3.cljs$lang$applyTo;
cljs$core$min.cljs$core$IFn$_invoke$arity$1 = cljs$core$min__1;
cljs$core$min.cljs$core$IFn$_invoke$arity$2 = cljs$core$min__2;
cljs$core$min.cljs$core$IFn$_invoke$arity$variadic = cljs$core$min__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$min;
})()
;
cljs.core.byte$ = (function cljs$core$byte(x){
return x;
});
/**
 * Coerce to char
 */
cljs.core.char$ = (function cljs$core$char(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function cljs$core$short(x){
return x;
});
cljs.core.float$ = (function cljs$core$float(x){
return x;
});
cljs.core.double$ = (function cljs$core$double(x){
return x;
});
cljs.core.unchecked_byte = (function cljs$core$unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function cljs$core$unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function cljs$core$unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function cljs$core$unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function cljs$core$unchecked_double(x){
return x;
});
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core.unchecked_add = (function() {
var cljs$core$unchecked_add = null;
var cljs$core$unchecked_add__0 = (function (){
return (0);
});
var cljs$core$unchecked_add__1 = (function (x){
return x;
});
var cljs$core$unchecked_add__2 = (function (x,y){
return (x + y);
});
var cljs$core$unchecked_add__3 = (function() { 
var G__6716__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_add,(x + y),more);
};
var G__6716 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6717__i = 0, G__6717__a = new Array(arguments.length -  2);
while (G__6717__i < G__6717__a.length) {G__6717__a[G__6717__i] = arguments[G__6717__i + 2]; ++G__6717__i;}
  more = new cljs.core.IndexedSeq(G__6717__a,0);
} 
return G__6716__delegate.call(this,x,y,more);};
G__6716.cljs$lang$maxFixedArity = 2;
G__6716.cljs$lang$applyTo = (function (arglist__6718){
var x = cljs.core.first(arglist__6718);
arglist__6718 = cljs.core.next(arglist__6718);
var y = cljs.core.first(arglist__6718);
var more = cljs.core.rest(arglist__6718);
return G__6716__delegate(x,y,more);
});
G__6716.cljs$core$IFn$_invoke$arity$variadic = G__6716__delegate;
return G__6716;
})()
;
cljs$core$unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_add__0.call(this);
case 1:
return cljs$core$unchecked_add__1.call(this,x);
case 2:
return cljs$core$unchecked_add__2.call(this,x,y);
default:
var G__6719 = null;
if (arguments.length > 2) {
var G__6720__i = 0, G__6720__a = new Array(arguments.length -  2);
while (G__6720__i < G__6720__a.length) {G__6720__a[G__6720__i] = arguments[G__6720__i + 2]; ++G__6720__i;}
G__6719 = new cljs.core.IndexedSeq(G__6720__a,0);
}
return cljs$core$unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6719);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_add.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_add.cljs$lang$applyTo = cljs$core$unchecked_add__3.cljs$lang$applyTo;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_add__0;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_add__1;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_add__2;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_add;
})()
;
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core.unchecked_add_int = (function() {
var cljs$core$unchecked_add_int = null;
var cljs$core$unchecked_add_int__0 = (function (){
return (0);
});
var cljs$core$unchecked_add_int__1 = (function (x){
return x;
});
var cljs$core$unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var cljs$core$unchecked_add_int__3 = (function() { 
var G__6721__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_add_int,(x + y),more);
};
var G__6721 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6722__i = 0, G__6722__a = new Array(arguments.length -  2);
while (G__6722__i < G__6722__a.length) {G__6722__a[G__6722__i] = arguments[G__6722__i + 2]; ++G__6722__i;}
  more = new cljs.core.IndexedSeq(G__6722__a,0);
} 
return G__6721__delegate.call(this,x,y,more);};
G__6721.cljs$lang$maxFixedArity = 2;
G__6721.cljs$lang$applyTo = (function (arglist__6723){
var x = cljs.core.first(arglist__6723);
arglist__6723 = cljs.core.next(arglist__6723);
var y = cljs.core.first(arglist__6723);
var more = cljs.core.rest(arglist__6723);
return G__6721__delegate(x,y,more);
});
G__6721.cljs$core$IFn$_invoke$arity$variadic = G__6721__delegate;
return G__6721;
})()
;
cljs$core$unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_add_int__0.call(this);
case 1:
return cljs$core$unchecked_add_int__1.call(this,x);
case 2:
return cljs$core$unchecked_add_int__2.call(this,x,y);
default:
var G__6724 = null;
if (arguments.length > 2) {
var G__6725__i = 0, G__6725__a = new Array(arguments.length -  2);
while (G__6725__i < G__6725__a.length) {G__6725__a[G__6725__i] = arguments[G__6725__i + 2]; ++G__6725__i;}
G__6724 = new cljs.core.IndexedSeq(G__6725__a,0);
}
return cljs$core$unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6724);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_add_int.cljs$lang$applyTo = cljs$core$unchecked_add_int__3.cljs$lang$applyTo;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_add_int__0;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_add_int__1;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_add_int__2;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_add_int;
})()
;
/**
 * Returns a number one less than x, an int.
 */
cljs.core.unchecked_dec = (function cljs$core$unchecked_dec(x){
return (x - (1));
});
/**
 * Returns a number one less than x, an int.
 */
cljs.core.unchecked_dec_int = (function cljs$core$unchecked_dec_int(x){
return (x - (1));
});
/**
 * If no denominators are supplied, returns 1/numerator,
 * else returns numerator divided by all of the denominators.
 * @param {...*} var_args
 */
cljs.core.unchecked_divide_int = (function() {
var cljs$core$unchecked_divide_int = null;
var cljs$core$unchecked_divide_int__1 = (function (x){
return cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var cljs$core$unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var cljs$core$unchecked_divide_int__3 = (function() { 
var G__6730__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_divide_int,cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__6730 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6731__i = 0, G__6731__a = new Array(arguments.length -  2);
while (G__6731__i < G__6731__a.length) {G__6731__a[G__6731__i] = arguments[G__6731__i + 2]; ++G__6731__i;}
  more = new cljs.core.IndexedSeq(G__6731__a,0);
} 
return G__6730__delegate.call(this,x,y,more);};
G__6730.cljs$lang$maxFixedArity = 2;
G__6730.cljs$lang$applyTo = (function (arglist__6732){
var x = cljs.core.first(arglist__6732);
arglist__6732 = cljs.core.next(arglist__6732);
var y = cljs.core.first(arglist__6732);
var more = cljs.core.rest(arglist__6732);
return G__6730__delegate(x,y,more);
});
G__6730.cljs$core$IFn$_invoke$arity$variadic = G__6730__delegate;
return G__6730;
})()
;
cljs$core$unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$unchecked_divide_int__1.call(this,x);
case 2:
return cljs$core$unchecked_divide_int__2.call(this,x,y);
default:
var G__6733 = null;
if (arguments.length > 2) {
var G__6734__i = 0, G__6734__a = new Array(arguments.length -  2);
while (G__6734__i < G__6734__a.length) {G__6734__a[G__6734__i] = arguments[G__6734__i + 2]; ++G__6734__i;}
G__6733 = new cljs.core.IndexedSeq(G__6734__a,0);
}
return cljs$core$unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6733);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_divide_int.cljs$lang$applyTo = cljs$core$unchecked_divide_int__3.cljs$lang$applyTo;
cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_divide_int__1;
cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_divide_int__2;
cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function cljs$core$unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function cljs$core$unchecked_inc_int(x){
return (x + (1));
});
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core.unchecked_multiply = (function() {
var cljs$core$unchecked_multiply = null;
var cljs$core$unchecked_multiply__0 = (function (){
return (1);
});
var cljs$core$unchecked_multiply__1 = (function (x){
return x;
});
var cljs$core$unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var cljs$core$unchecked_multiply__3 = (function() { 
var G__6735__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_multiply,(x * y),more);
};
var G__6735 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6736__i = 0, G__6736__a = new Array(arguments.length -  2);
while (G__6736__i < G__6736__a.length) {G__6736__a[G__6736__i] = arguments[G__6736__i + 2]; ++G__6736__i;}
  more = new cljs.core.IndexedSeq(G__6736__a,0);
} 
return G__6735__delegate.call(this,x,y,more);};
G__6735.cljs$lang$maxFixedArity = 2;
G__6735.cljs$lang$applyTo = (function (arglist__6737){
var x = cljs.core.first(arglist__6737);
arglist__6737 = cljs.core.next(arglist__6737);
var y = cljs.core.first(arglist__6737);
var more = cljs.core.rest(arglist__6737);
return G__6735__delegate(x,y,more);
});
G__6735.cljs$core$IFn$_invoke$arity$variadic = G__6735__delegate;
return G__6735;
})()
;
cljs$core$unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_multiply__0.call(this);
case 1:
return cljs$core$unchecked_multiply__1.call(this,x);
case 2:
return cljs$core$unchecked_multiply__2.call(this,x,y);
default:
var G__6738 = null;
if (arguments.length > 2) {
var G__6739__i = 0, G__6739__a = new Array(arguments.length -  2);
while (G__6739__i < G__6739__a.length) {G__6739__a[G__6739__i] = arguments[G__6739__i + 2]; ++G__6739__i;}
G__6738 = new cljs.core.IndexedSeq(G__6739__a,0);
}
return cljs$core$unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6738);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_multiply.cljs$lang$applyTo = cljs$core$unchecked_multiply__3.cljs$lang$applyTo;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_multiply__0;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_multiply__1;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_multiply__2;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_multiply;
})()
;
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core.unchecked_multiply_int = (function() {
var cljs$core$unchecked_multiply_int = null;
var cljs$core$unchecked_multiply_int__0 = (function (){
return (1);
});
var cljs$core$unchecked_multiply_int__1 = (function (x){
return x;
});
var cljs$core$unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var cljs$core$unchecked_multiply_int__3 = (function() { 
var G__6740__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_multiply_int,(x * y),more);
};
var G__6740 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6741__i = 0, G__6741__a = new Array(arguments.length -  2);
while (G__6741__i < G__6741__a.length) {G__6741__a[G__6741__i] = arguments[G__6741__i + 2]; ++G__6741__i;}
  more = new cljs.core.IndexedSeq(G__6741__a,0);
} 
return G__6740__delegate.call(this,x,y,more);};
G__6740.cljs$lang$maxFixedArity = 2;
G__6740.cljs$lang$applyTo = (function (arglist__6742){
var x = cljs.core.first(arglist__6742);
arglist__6742 = cljs.core.next(arglist__6742);
var y = cljs.core.first(arglist__6742);
var more = cljs.core.rest(arglist__6742);
return G__6740__delegate(x,y,more);
});
G__6740.cljs$core$IFn$_invoke$arity$variadic = G__6740__delegate;
return G__6740;
})()
;
cljs$core$unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_multiply_int__0.call(this);
case 1:
return cljs$core$unchecked_multiply_int__1.call(this,x);
case 2:
return cljs$core$unchecked_multiply_int__2.call(this,x,y);
default:
var G__6743 = null;
if (arguments.length > 2) {
var G__6744__i = 0, G__6744__a = new Array(arguments.length -  2);
while (G__6744__i < G__6744__a.length) {G__6744__a[G__6744__i] = arguments[G__6744__i + 2]; ++G__6744__i;}
G__6743 = new cljs.core.IndexedSeq(G__6744__a,0);
}
return cljs$core$unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6743);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_multiply_int.cljs$lang$applyTo = cljs$core$unchecked_multiply_int__3.cljs$lang$applyTo;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_multiply_int__0;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_multiply_int__1;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_multiply_int__2;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function cljs$core$unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function cljs$core$unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function cljs$core$unchecked_remainder_int(x,n){
var G__6747 = x;
var G__6748 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__6747,G__6748) : cljs.core.mod.call(null,G__6747,G__6748));
});
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core.unchecked_subtract = (function() {
var cljs$core$unchecked_subtract = null;
var cljs$core$unchecked_subtract__1 = (function (x){
return (- x);
});
var cljs$core$unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var cljs$core$unchecked_subtract__3 = (function() { 
var G__6749__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_subtract,(x - y),more);
};
var G__6749 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6750__i = 0, G__6750__a = new Array(arguments.length -  2);
while (G__6750__i < G__6750__a.length) {G__6750__a[G__6750__i] = arguments[G__6750__i + 2]; ++G__6750__i;}
  more = new cljs.core.IndexedSeq(G__6750__a,0);
} 
return G__6749__delegate.call(this,x,y,more);};
G__6749.cljs$lang$maxFixedArity = 2;
G__6749.cljs$lang$applyTo = (function (arglist__6751){
var x = cljs.core.first(arglist__6751);
arglist__6751 = cljs.core.next(arglist__6751);
var y = cljs.core.first(arglist__6751);
var more = cljs.core.rest(arglist__6751);
return G__6749__delegate(x,y,more);
});
G__6749.cljs$core$IFn$_invoke$arity$variadic = G__6749__delegate;
return G__6749;
})()
;
cljs$core$unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$unchecked_subtract__1.call(this,x);
case 2:
return cljs$core$unchecked_subtract__2.call(this,x,y);
default:
var G__6752 = null;
if (arguments.length > 2) {
var G__6753__i = 0, G__6753__a = new Array(arguments.length -  2);
while (G__6753__i < G__6753__a.length) {G__6753__a[G__6753__i] = arguments[G__6753__i + 2]; ++G__6753__i;}
G__6752 = new cljs.core.IndexedSeq(G__6753__a,0);
}
return cljs$core$unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6752);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_subtract.cljs$lang$applyTo = cljs$core$unchecked_subtract__3.cljs$lang$applyTo;
cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_subtract__1;
cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_subtract__2;
cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_subtract;
})()
;
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core.unchecked_subtract_int = (function() {
var cljs$core$unchecked_subtract_int = null;
var cljs$core$unchecked_subtract_int__1 = (function (x){
return (- x);
});
var cljs$core$unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var cljs$core$unchecked_subtract_int__3 = (function() { 
var G__6754__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_subtract_int,(x - y),more);
};
var G__6754 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6755__i = 0, G__6755__a = new Array(arguments.length -  2);
while (G__6755__i < G__6755__a.length) {G__6755__a[G__6755__i] = arguments[G__6755__i + 2]; ++G__6755__i;}
  more = new cljs.core.IndexedSeq(G__6755__a,0);
} 
return G__6754__delegate.call(this,x,y,more);};
G__6754.cljs$lang$maxFixedArity = 2;
G__6754.cljs$lang$applyTo = (function (arglist__6756){
var x = cljs.core.first(arglist__6756);
arglist__6756 = cljs.core.next(arglist__6756);
var y = cljs.core.first(arglist__6756);
var more = cljs.core.rest(arglist__6756);
return G__6754__delegate(x,y,more);
});
G__6754.cljs$core$IFn$_invoke$arity$variadic = G__6754__delegate;
return G__6754;
})()
;
cljs$core$unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$unchecked_subtract_int__1.call(this,x);
case 2:
return cljs$core$unchecked_subtract_int__2.call(this,x,y);
default:
var G__6757 = null;
if (arguments.length > 2) {
var G__6758__i = 0, G__6758__a = new Array(arguments.length -  2);
while (G__6758__i < G__6758__a.length) {G__6758__a[G__6758__i] = arguments[G__6758__i + 2]; ++G__6758__i;}
G__6757 = new cljs.core.IndexedSeq(G__6758__a,0);
}
return cljs$core$unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6757);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_subtract_int.cljs$lang$applyTo = cljs$core$unchecked_subtract_int__3.cljs$lang$applyTo;
cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_subtract_int__1;
cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_subtract_int__2;
cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_subtract_int;
})()
;
cljs.core.fix = (function cljs$core$fix(q){
if((q >= (0))){
var G__6761 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__6761) : Math.floor.call(null,G__6761));
} else {
var G__6762 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__6762) : Math.ceil.call(null,G__6762));
}
});
/**
 * Coerce to int by stripping decimal places.
 */
cljs.core.int$ = (function cljs$core$int(x){
return (x | (0));
});
/**
 * Coerce to int by stripping decimal places.
 */
cljs.core.unchecked_int = (function cljs$core$unchecked_int(x){
return cljs.core.fix(x);
});
/**
 * Coerce to long by stripping decimal places. Identical to `int'.
 */
cljs.core.long$ = (function cljs$core$long(x){
return cljs.core.fix(x);
});
/**
 * Coerce to long by stripping decimal places. Identical to `int'.
 */
cljs.core.unchecked_long = (function cljs$core$unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function cljs$core$booleans(x){
return x;
});
cljs.core.bytes = (function cljs$core$bytes(x){
return x;
});
cljs.core.chars = (function cljs$core$chars(x){
return x;
});
cljs.core.shorts = (function cljs$core$shorts(x){
return x;
});
cljs.core.ints = (function cljs$core$ints(x){
return x;
});
cljs.core.floats = (function cljs$core$floats(x){
return x;
});
cljs.core.doubles = (function cljs$core$doubles(x){
return x;
});
cljs.core.longs = (function cljs$core$longs(x){
return x;
});
/**
 * Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
 */
cljs.core.js_mod = (function cljs$core$js_mod(n,d){
return (n % d);
});
/**
 * Modulus of num and div. Truncates toward negative infinity.
 */
cljs.core.mod = (function cljs$core$mod(n,d){
return (((n % d) + d) % d);
});
/**
 * quot[ient] of dividing numerator by denominator.
 */
cljs.core.quot = (function cljs$core$quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
 * remainder of dividing numerator by denominator.
 */
cljs.core.rem = (function cljs$core$rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
 * Bitwise exclusive or
 * @param {...*} var_args
 */
cljs.core.bit_xor = (function() {
var cljs$core$bit_xor = null;
var cljs$core$bit_xor__2 = (function (x,y){
return (x ^ y);
});
var cljs$core$bit_xor__3 = (function() { 
var G__6763__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_xor,(x ^ y),more);
};
var G__6763 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6764__i = 0, G__6764__a = new Array(arguments.length -  2);
while (G__6764__i < G__6764__a.length) {G__6764__a[G__6764__i] = arguments[G__6764__i + 2]; ++G__6764__i;}
  more = new cljs.core.IndexedSeq(G__6764__a,0);
} 
return G__6763__delegate.call(this,x,y,more);};
G__6763.cljs$lang$maxFixedArity = 2;
G__6763.cljs$lang$applyTo = (function (arglist__6765){
var x = cljs.core.first(arglist__6765);
arglist__6765 = cljs.core.next(arglist__6765);
var y = cljs.core.first(arglist__6765);
var more = cljs.core.rest(arglist__6765);
return G__6763__delegate(x,y,more);
});
G__6763.cljs$core$IFn$_invoke$arity$variadic = G__6763__delegate;
return G__6763;
})()
;
cljs$core$bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_xor__2.call(this,x,y);
default:
var G__6766 = null;
if (arguments.length > 2) {
var G__6767__i = 0, G__6767__a = new Array(arguments.length -  2);
while (G__6767__i < G__6767__a.length) {G__6767__a[G__6767__i] = arguments[G__6767__i + 2]; ++G__6767__i;}
G__6766 = new cljs.core.IndexedSeq(G__6767__a,0);
}
return cljs$core$bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6766);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_xor.cljs$lang$maxFixedArity = 2;
cljs$core$bit_xor.cljs$lang$applyTo = cljs$core$bit_xor__3.cljs$lang$applyTo;
cljs$core$bit_xor.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_xor__2;
cljs$core$bit_xor.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_xor;
})()
;
/**
 * Bitwise and
 * @param {...*} var_args
 */
cljs.core.bit_and = (function() {
var cljs$core$bit_and = null;
var cljs$core$bit_and__2 = (function (x,y){
return (x & y);
});
var cljs$core$bit_and__3 = (function() { 
var G__6768__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_and,(x & y),more);
};
var G__6768 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6769__i = 0, G__6769__a = new Array(arguments.length -  2);
while (G__6769__i < G__6769__a.length) {G__6769__a[G__6769__i] = arguments[G__6769__i + 2]; ++G__6769__i;}
  more = new cljs.core.IndexedSeq(G__6769__a,0);
} 
return G__6768__delegate.call(this,x,y,more);};
G__6768.cljs$lang$maxFixedArity = 2;
G__6768.cljs$lang$applyTo = (function (arglist__6770){
var x = cljs.core.first(arglist__6770);
arglist__6770 = cljs.core.next(arglist__6770);
var y = cljs.core.first(arglist__6770);
var more = cljs.core.rest(arglist__6770);
return G__6768__delegate(x,y,more);
});
G__6768.cljs$core$IFn$_invoke$arity$variadic = G__6768__delegate;
return G__6768;
})()
;
cljs$core$bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_and__2.call(this,x,y);
default:
var G__6771 = null;
if (arguments.length > 2) {
var G__6772__i = 0, G__6772__a = new Array(arguments.length -  2);
while (G__6772__i < G__6772__a.length) {G__6772__a[G__6772__i] = arguments[G__6772__i + 2]; ++G__6772__i;}
G__6771 = new cljs.core.IndexedSeq(G__6772__a,0);
}
return cljs$core$bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6771);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_and.cljs$lang$maxFixedArity = 2;
cljs$core$bit_and.cljs$lang$applyTo = cljs$core$bit_and__3.cljs$lang$applyTo;
cljs$core$bit_and.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_and__2;
cljs$core$bit_and.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_and;
})()
;
/**
 * Bitwise or
 * @param {...*} var_args
 */
cljs.core.bit_or = (function() {
var cljs$core$bit_or = null;
var cljs$core$bit_or__2 = (function (x,y){
return (x | y);
});
var cljs$core$bit_or__3 = (function() { 
var G__6773__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_or,(x | y),more);
};
var G__6773 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6774__i = 0, G__6774__a = new Array(arguments.length -  2);
while (G__6774__i < G__6774__a.length) {G__6774__a[G__6774__i] = arguments[G__6774__i + 2]; ++G__6774__i;}
  more = new cljs.core.IndexedSeq(G__6774__a,0);
} 
return G__6773__delegate.call(this,x,y,more);};
G__6773.cljs$lang$maxFixedArity = 2;
G__6773.cljs$lang$applyTo = (function (arglist__6775){
var x = cljs.core.first(arglist__6775);
arglist__6775 = cljs.core.next(arglist__6775);
var y = cljs.core.first(arglist__6775);
var more = cljs.core.rest(arglist__6775);
return G__6773__delegate(x,y,more);
});
G__6773.cljs$core$IFn$_invoke$arity$variadic = G__6773__delegate;
return G__6773;
})()
;
cljs$core$bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_or__2.call(this,x,y);
default:
var G__6776 = null;
if (arguments.length > 2) {
var G__6777__i = 0, G__6777__a = new Array(arguments.length -  2);
while (G__6777__i < G__6777__a.length) {G__6777__a[G__6777__i] = arguments[G__6777__i + 2]; ++G__6777__i;}
G__6776 = new cljs.core.IndexedSeq(G__6777__a,0);
}
return cljs$core$bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6776);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_or.cljs$lang$maxFixedArity = 2;
cljs$core$bit_or.cljs$lang$applyTo = cljs$core$bit_or__3.cljs$lang$applyTo;
cljs$core$bit_or.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_or__2;
cljs$core$bit_or.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_or;
})()
;
/**
 * Bitwise and
 * @param {...*} var_args
 */
cljs.core.bit_and_not = (function() {
var cljs$core$bit_and_not = null;
var cljs$core$bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var cljs$core$bit_and_not__3 = (function() { 
var G__6778__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_and_not,(x & ~y),more);
};
var G__6778 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6779__i = 0, G__6779__a = new Array(arguments.length -  2);
while (G__6779__i < G__6779__a.length) {G__6779__a[G__6779__i] = arguments[G__6779__i + 2]; ++G__6779__i;}
  more = new cljs.core.IndexedSeq(G__6779__a,0);
} 
return G__6778__delegate.call(this,x,y,more);};
G__6778.cljs$lang$maxFixedArity = 2;
G__6778.cljs$lang$applyTo = (function (arglist__6780){
var x = cljs.core.first(arglist__6780);
arglist__6780 = cljs.core.next(arglist__6780);
var y = cljs.core.first(arglist__6780);
var more = cljs.core.rest(arglist__6780);
return G__6778__delegate(x,y,more);
});
G__6778.cljs$core$IFn$_invoke$arity$variadic = G__6778__delegate;
return G__6778;
})()
;
cljs$core$bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_and_not__2.call(this,x,y);
default:
var G__6781 = null;
if (arguments.length > 2) {
var G__6782__i = 0, G__6782__a = new Array(arguments.length -  2);
while (G__6782__i < G__6782__a.length) {G__6782__a[G__6782__i] = arguments[G__6782__i + 2]; ++G__6782__i;}
G__6781 = new cljs.core.IndexedSeq(G__6782__a,0);
}
return cljs$core$bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6781);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_and_not.cljs$lang$maxFixedArity = 2;
cljs$core$bit_and_not.cljs$lang$applyTo = cljs$core$bit_and_not__3.cljs$lang$applyTo;
cljs$core$bit_and_not.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_and_not__2;
cljs$core$bit_and_not.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_and_not;
})()
;
/**
 * Clear bit at index n
 */
cljs.core.bit_clear = (function cljs$core$bit_clear(x,n){
return (x & ~(1 << n));
});
/**
 * Flip bit at index n
 */
cljs.core.bit_flip = (function cljs$core$bit_flip(x,n){
return (x ^ (1 << n));
});
/**
 * Bitwise complement
 */
cljs.core.bit_not = (function cljs$core$bit_not(x){
return (~ x);
});
/**
 * Set bit at index n
 */
cljs.core.bit_set = (function cljs$core$bit_set(x,n){
return (x | (1 << n));
});
/**
 * Test bit at index n
 */
cljs.core.bit_test = (function cljs$core$bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
 * Bitwise shift left
 */
cljs.core.bit_shift_left = (function cljs$core$bit_shift_left(x,n){
return (x << n);
});
/**
 * Bitwise shift right
 */
cljs.core.bit_shift_right = (function cljs$core$bit_shift_right(x,n){
return (x >> n);
});
/**
 * DEPRECATED: Bitwise shift right with zero fill
 */
cljs.core.bit_shift_right_zero_fill = (function cljs$core$bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
 * Bitwise shift right with zero fill
 */
cljs.core.unsigned_bit_shift_right = (function cljs$core$unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
 * Counts the number of bits set in n
 */
cljs.core.bit_count = (function cljs$core$bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
 * Returns non-nil if nums all have the equivalent
 * value, otherwise false. Behavior on non nums is
 * undefined.
 * @param {...*} var_args
 */
cljs.core._EQ__EQ_ = (function() {
var cljs$core$_EQ__EQ_ = null;
var cljs$core$_EQ__EQ___1 = (function (x){
return true;
});
var cljs$core$_EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var cljs$core$_EQ__EQ___3 = (function() { 
var G__6787__delegate = function (x,y,more){
while(true){
if(cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__6788 = y;
var G__6789 = cljs.core.first(more);
var G__6790 = cljs.core.next(more);
x = G__6788;
y = G__6789;
more = G__6790;
continue;
} else {
return cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6787 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6791__i = 0, G__6791__a = new Array(arguments.length -  2);
while (G__6791__i < G__6791__a.length) {G__6791__a[G__6791__i] = arguments[G__6791__i + 2]; ++G__6791__i;}
  more = new cljs.core.IndexedSeq(G__6791__a,0);
} 
return G__6787__delegate.call(this,x,y,more);};
G__6787.cljs$lang$maxFixedArity = 2;
G__6787.cljs$lang$applyTo = (function (arglist__6792){
var x = cljs.core.first(arglist__6792);
arglist__6792 = cljs.core.next(arglist__6792);
var y = cljs.core.first(arglist__6792);
var more = cljs.core.rest(arglist__6792);
return G__6787__delegate(x,y,more);
});
G__6787.cljs$core$IFn$_invoke$arity$variadic = G__6787__delegate;
return G__6787;
})()
;
cljs$core$_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_EQ__EQ___1.call(this,x);
case 2:
return cljs$core$_EQ__EQ___2.call(this,x,y);
default:
var G__6793 = null;
if (arguments.length > 2) {
var G__6794__i = 0, G__6794__a = new Array(arguments.length -  2);
while (G__6794__i < G__6794__a.length) {G__6794__a[G__6794__i] = arguments[G__6794__i + 2]; ++G__6794__i;}
G__6793 = new cljs.core.IndexedSeq(G__6794__a,0);
}
return cljs$core$_EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6793);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_EQ__EQ_.cljs$lang$applyTo = cljs$core$_EQ__EQ___3.cljs$lang$applyTo;
cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_EQ__EQ___1;
cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_EQ__EQ___2;
cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_EQ__EQ_;
})()
;
/**
 * Returns true if num is greater than zero, else false
 */
cljs.core.pos_QMARK_ = (function cljs$core$pos_QMARK_(n){
return (n > (0));
});
/**
 * Returns true if num is zero, else false
 */
cljs.core.zero_QMARK_ = (function cljs$core$zero_QMARK_(n){
return (n === (0));
});
/**
 * Returns true if num is less than zero, else false
 */
cljs.core.neg_QMARK_ = (function cljs$core$neg_QMARK_(x){
return (x < (0));
});
/**
 * Returns the nth next of coll, (seq coll) when n is 0.
 */
cljs.core.nthnext = (function cljs$core$nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__6795 = (n__$1 - (1));
var G__6796 = cljs.core.next(xs);
n__$1 = G__6795;
xs = G__6796;
continue;
} else {
return xs;
}
break;
}
});
/**
 * With no args, returns the empty string. With one arg x, returns
 * x.toString().  (str nil) returns the empty string. With more than
 * one arg, returns the concatenation of the str values of the args.
 * @param {...*} var_args
 */
cljs.core.str = (function() {
var cljs$core$str = null;
var cljs$core$str__0 = (function (){
return "";
});
var cljs$core$str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__6800 = x;
return goog.string.buildString(G__6800);
}
});
var cljs$core$str__2 = (function() { 
var G__6801__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(cljs$core$str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__6802 = sb.append(cljs$core$str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__6803 = cljs.core.next(more);
sb = G__6802;
more = G__6803;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__6801 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__6804__i = 0, G__6804__a = new Array(arguments.length -  1);
while (G__6804__i < G__6804__a.length) {G__6804__a[G__6804__i] = arguments[G__6804__i + 1]; ++G__6804__i;}
  ys = new cljs.core.IndexedSeq(G__6804__a,0);
} 
return G__6801__delegate.call(this,x,ys);};
G__6801.cljs$lang$maxFixedArity = 1;
G__6801.cljs$lang$applyTo = (function (arglist__6805){
var x = cljs.core.first(arglist__6805);
var ys = cljs.core.rest(arglist__6805);
return G__6801__delegate(x,ys);
});
G__6801.cljs$core$IFn$_invoke$arity$variadic = G__6801__delegate;
return G__6801;
})()
;
cljs$core$str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return cljs$core$str__0.call(this);
case 1:
return cljs$core$str__1.call(this,x);
default:
var G__6806 = null;
if (arguments.length > 1) {
var G__6807__i = 0, G__6807__a = new Array(arguments.length -  1);
while (G__6807__i < G__6807__a.length) {G__6807__a[G__6807__i] = arguments[G__6807__i + 1]; ++G__6807__i;}
G__6806 = new cljs.core.IndexedSeq(G__6807__a,0);
}
return cljs$core$str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__6806);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$str.cljs$lang$maxFixedArity = 1;
cljs$core$str.cljs$lang$applyTo = cljs$core$str__2.cljs$lang$applyTo;
cljs$core$str.cljs$core$IFn$_invoke$arity$0 = cljs$core$str__0;
cljs$core$str.cljs$core$IFn$_invoke$arity$1 = cljs$core$str__1;
cljs$core$str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$str__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$str;
})()
;
/**
 * Returns the substring of s beginning at start inclusive, and ending
 * at end (defaults to length of string), exclusive.
 */
cljs.core.subs = (function() {
var cljs$core$subs = null;
var cljs$core$subs__2 = (function (s,start){
return s.substring(start);
});
var cljs$core$subs__3 = (function (s,start,end){
return s.substring(start,end);
});
cljs$core$subs = function(s,start,end){
switch(arguments.length){
case 2:
return cljs$core$subs__2.call(this,s,start);
case 3:
return cljs$core$subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$subs.cljs$core$IFn$_invoke$arity$2 = cljs$core$subs__2;
cljs$core$subs.cljs$core$IFn$_invoke$arity$3 = cljs$core$subs__3;
return cljs$core$subs;
})()
;

/**
 * Assumes x is sequential. Returns true if x equals y, otherwise
 * returns false.
 */
cljs.core.equiv_sequential = (function cljs$core$equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__6808 = cljs.core.next(xs);
var G__6809 = cljs.core.next(ys);
xs = G__6808;
ys = G__6809;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function cljs$core$hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__6810 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__6811 = cljs.core.next(s);
res = G__6810;
s = G__6811;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function cljs$core$hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__6816 = ((h + (cljs.core.hash((function (){var G__6814 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__6814) : cljs.core.key.call(null,G__6814));
})()) ^ cljs.core.hash((function (){var G__6815 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__6815) : cljs.core.val.call(null,G__6815));
})()))) % (4503599627370496));
var G__6817 = cljs.core.next(s);
h = G__6816;
s = G__6817;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function cljs$core$hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__6818 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__6819 = cljs.core.next(s__$1);
h = G__6818;
s__$1 = G__6819;
continue;
} else {
return h;
}
break;
}
});


/**
 * Takes a JavaScript object and a map of names to functions and
 * attaches said functions as methods on the object.  Any references to
 * JavaScript's implicit this (via the this-as macro) will resolve to the
 * object that the function is attached.
 */
cljs.core.extend_object_BANG_ = (function cljs$core$extend_object_BANG_(obj,fn_map){
var seq__6830_6840 = cljs.core.seq(fn_map);
var chunk__6831_6841 = null;
var count__6832_6842 = (0);
var i__6833_6843 = (0);
while(true){
if((i__6833_6843 < count__6832_6842)){
var vec__6834_6844 = chunk__6831_6841.cljs$core$IIndexed$_nth$arity$2(null,i__6833_6843);
var key_name_6845 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6834_6844,(0),null);
var f_6846 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6834_6844,(1),null);
var str_name_6847 = (function (){var G__6835 = key_name_6845;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__6835) : cljs.core.name.call(null,G__6835));
})();
(obj[str_name_6847] = f_6846);

var G__6848 = seq__6830_6840;
var G__6849 = chunk__6831_6841;
var G__6850 = count__6832_6842;
var G__6851 = (i__6833_6843 + (1));
seq__6830_6840 = G__6848;
chunk__6831_6841 = G__6849;
count__6832_6842 = G__6850;
i__6833_6843 = G__6851;
continue;
} else {
var temp__4126__auto___6852 = cljs.core.seq(seq__6830_6840);
if(temp__4126__auto___6852){
var seq__6830_6853__$1 = temp__4126__auto___6852;
if(cljs.core.chunked_seq_QMARK_(seq__6830_6853__$1)){
var c__4552__auto___6854 = (function (){var G__6836 = seq__6830_6853__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__6836) : cljs.core.chunk_first.call(null,G__6836));
})();
var G__6855 = (function (){var G__6837 = seq__6830_6853__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__6837) : cljs.core.chunk_rest.call(null,G__6837));
})();
var G__6856 = c__4552__auto___6854;
var G__6857 = cljs.core.count(c__4552__auto___6854);
var G__6858 = (0);
seq__6830_6840 = G__6855;
chunk__6831_6841 = G__6856;
count__6832_6842 = G__6857;
i__6833_6843 = G__6858;
continue;
} else {
var vec__6838_6859 = cljs.core.first(seq__6830_6853__$1);
var key_name_6860 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6838_6859,(0),null);
var f_6861 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6838_6859,(1),null);
var str_name_6862 = (function (){var G__6839 = key_name_6860;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__6839) : cljs.core.name.call(null,G__6839));
})();
(obj[str_name_6862] = f_6861);

var G__6863 = cljs.core.next(seq__6830_6853__$1);
var G__6864 = null;
var G__6865 = (0);
var G__6866 = (0);
seq__6830_6840 = G__6863;
chunk__6831_6841 = G__6864;
count__6832_6842 = G__6865;
i__6833_6843 = G__6866;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4183__auto__ = self__.__hash;
if(!((h__4183__auto__ == null))){
return h__4183__auto__;
} else {
var h__4183__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4183__auto____$1;

return h__4183__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function cljs$core$__GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function cljs$core$__GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
/**
 * Returns true if coll satisfies? IReversible.
 */
cljs.core.reversible_QMARK_ = (function cljs$core$reversible_QMARK_(coll){
var G__6868 = coll;
if(G__6868){
var bit__4441__auto__ = (G__6868.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4441__auto__) || (G__6868.cljs$core$IReversible$)){
return true;
} else {
if((!G__6868.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__6868);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__6868);
}
});
/**
 * Returns, in constant time, a seq of the items in rev (which
 * can be a vector or sorted-map), in reverse order. If rev is empty returns nil
 */
cljs.core.rseq = (function cljs$core$rseq(coll){
return cljs.core._rseq(coll);
});
/**
 * Returns a seq of the items in coll in reverse order. Not lazy.
 */
cljs.core.reverse = (function cljs$core$reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
 * Creates a new list containing the items.
 * @param {...*} var_args
 */
cljs.core.list = (function() { 
var cljs$core$list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__6869 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__6869;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__6870 = (i - (1));
var G__6871 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__6870;
r = G__6871;
continue;
} else {
return r;
}
break;
}
};
var cljs$core$list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__6872__i = 0, G__6872__a = new Array(arguments.length -  0);
while (G__6872__i < G__6872__a.length) {G__6872__a[G__6872__i] = arguments[G__6872__i + 0]; ++G__6872__i;}
  xs = new cljs.core.IndexedSeq(G__6872__a,0);
} 
return cljs$core$list__delegate.call(this,xs);};
cljs$core$list.cljs$lang$maxFixedArity = 0;
cljs$core$list.cljs$lang$applyTo = (function (arglist__6873){
var xs = cljs.core.seq(arglist__6873);
return cljs$core$list__delegate(xs);
});
cljs$core$list.cljs$core$IFn$_invoke$arity$variadic = cljs$core$list__delegate;
return cljs$core$list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4183__auto__ = self__.__hash;
if(!((h__4183__auto__ == null))){
return h__4183__auto__;
} else {
var h__4183__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4183__auto____$1;

return h__4183__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function cljs$core$__GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
/**
 * Returns a new seq where x is the first element and seq is the rest.
 */
cljs.core.cons = (function cljs$core$cons(x,coll){
if((function (){var or__3767__auto__ = (coll == null);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var G__6877 = coll;
if(G__6877){
var bit__4434__auto__ = (G__6877.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4434__auto__) || (G__6877.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
/**
 * Returns true if x implements IList
 */
cljs.core.list_QMARK_ = (function cljs$core$list_QMARK_(x){
var G__6879 = x;
if(G__6879){
var bit__4441__auto__ = (G__6879.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4441__auto__) || (G__6879.cljs$core$IList$)){
return true;
} else {
if((!G__6879.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__6879);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__6879);
}
});
cljs.core.hash_keyword = (function cljs$core$hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function cljs$core$compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3755__auto__ = cljs.core.not(a.ns);
if(and__3755__auto__){
return b.ns;
} else {
return and__3755__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__6886 = a.ns;
var G__6887 = b.ns;
return goog.array.defaultCompare(G__6886,G__6887);
})();
if(((0) === nsc)){
var G__6888 = a.name;
var G__6889 = b.name;
return goog.array.defaultCompare(G__6888,G__6889);
} else {
return nsc;
}
}
} else {
var G__6890 = a.name;
var G__6891 = b.name;
return goog.array.defaultCompare(G__6890,G__6891);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4183__auto__ = self__._hash;
if(!((h__4183__auto__ == null))){
return h__4183__auto__;
} else {
var h__4183__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4183__auto____$1;

return h__4183__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__6893 = null;
var G__6893__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__6893__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__6893 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__6893__2.call(this,self__,coll);
case 3:
return G__6893__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6893.cljs$core$IFn$_invoke$arity$2 = G__6893__2;
G__6893.cljs$core$IFn$_invoke$arity$3 = G__6893__3;
return G__6893;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args6892){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6892)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function cljs$core$__GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

/**
 * Return true if x is a Keyword
 */
cljs.core.keyword_QMARK_ = (function cljs$core$keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
/**
 * Efficient test to determine that two keywords are identical.
 */
cljs.core.keyword_identical_QMARK_ = (function cljs$core$keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
 * Returns the namespace String of a symbol or keyword, or nil if not present.
 */
cljs.core.namespace = (function cljs$core$namespace(x){
if((function (){var G__6895 = x;
if(G__6895){
var bit__4434__auto__ = (G__6895.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4434__auto__) || (G__6895.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
 * Returns a Keyword with the given namespace and name.  Do not use :
 * in the keyword strings, it will be added automatically.
 */
cljs.core.keyword = (function() {
var cljs$core$keyword = null;
var cljs$core$keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__6897 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__6897) : cljs.core.name.call(null,G__6897));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var cljs$core$keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
cljs$core$keyword = function(ns,name){
switch(arguments.length){
case 1:
return cljs$core$keyword__1.call(this,ns);
case 2:
return cljs$core$keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$keyword.cljs$core$IFn$_invoke$arity$1 = cljs$core$keyword__1;
cljs$core$keyword.cljs$core$IFn$_invoke$arity$2 = cljs$core$keyword__2;
return cljs$core$keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4183__auto__ = self__.__hash;
if(!((h__4183__auto__ == null))){
return h__4183__auto__;
} else {
var h__4183__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4183__auto____$1;

return h__4183__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__6898 = ls.sval();
ls = G__6898;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function cljs$core$__GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function cljs$core$__GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function cljs$core$chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function cljs$core$__GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var cljs$core$array_chunk = null;
var cljs$core$array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var cljs$core$array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var cljs$core$array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
cljs$core$array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return cljs$core$array_chunk__1.call(this,arr);
case 2:
return cljs$core$array_chunk__2.call(this,arr,off);
case 3:
return cljs$core$array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$1 = cljs$core$array_chunk__1;
cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_chunk__2;
cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$3 = cljs$core$array_chunk__3;
return cljs$core$array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4183__auto__ = self__.__hash;
if(!((h__4183__auto__ == null))){
return h__4183__auto__;
} else {
var h__4183__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4183__auto____$1;

return h__4183__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function cljs$core$__GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
cljs.core.chunk_cons = (function cljs$core$chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function cljs$core$chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function cljs$core$chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function cljs$core$chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function cljs$core$chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function cljs$core$chunk_next(s){
if((function (){var G__6900 = s;
if(G__6900){
var bit__4434__auto__ = (G__6900.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4434__auto__) || (G__6900.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
 * Naive impl of to-array as a start.
 */
cljs.core.to_array = (function cljs$core$to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__6901 = cljs.core.next(s__$1);
s__$1 = G__6901;
continue;
} else {
return ary;
}
break;
}
});
/**
 * Returns a (potentially-ragged) 2-dimensional array
 * containing the contents of coll.
 */
cljs.core.to_array_2d = (function cljs$core$to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_6902 = (0);
var xs_6903 = cljs.core.seq(coll);
while(true){
if(xs_6903){
(ret[i_6902] = cljs.core.to_array(cljs.core.first(xs_6903)));

var G__6904 = (i_6902 + (1));
var G__6905 = cljs.core.next(xs_6903);
i_6902 = G__6904;
xs_6903 = G__6905;
continue;
} else {
}
break;
}

return ret;
});
/**
 * Creates an array of ints. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.int_array = (function() {
var cljs$core$int_array = null;
var cljs$core$int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__6908 = (i + (1));
var G__6909 = cljs.core.next(s__$1);
i = G__6908;
s__$1 = G__6909;
continue;
} else {
return a;
}
break;
}
} else {
var n__4652__auto___6910 = size;
var i_6911 = (0);
while(true){
if((i_6911 < n__4652__auto___6910)){
(a[i_6911] = init_val_or_seq);

var G__6912 = (i_6911 + (1));
i_6911 = G__6912;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$int_array__1.call(this,size);
case 2:
return cljs$core$int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$int_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$int_array__1;
cljs$core$int_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$int_array__2;
return cljs$core$int_array;
})()
;
/**
 * Creates an array of longs. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.long_array = (function() {
var cljs$core$long_array = null;
var cljs$core$long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__6915 = (i + (1));
var G__6916 = cljs.core.next(s__$1);
i = G__6915;
s__$1 = G__6916;
continue;
} else {
return a;
}
break;
}
} else {
var n__4652__auto___6917 = size;
var i_6918 = (0);
while(true){
if((i_6918 < n__4652__auto___6917)){
(a[i_6918] = init_val_or_seq);

var G__6919 = (i_6918 + (1));
i_6918 = G__6919;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$long_array__1.call(this,size);
case 2:
return cljs$core$long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$long_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$long_array__1;
cljs$core$long_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$long_array__2;
return cljs$core$long_array;
})()
;
/**
 * Creates an array of doubles. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.double_array = (function() {
var cljs$core$double_array = null;
var cljs$core$double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__6922 = (i + (1));
var G__6923 = cljs.core.next(s__$1);
i = G__6922;
s__$1 = G__6923;
continue;
} else {
return a;
}
break;
}
} else {
var n__4652__auto___6924 = size;
var i_6925 = (0);
while(true){
if((i_6925 < n__4652__auto___6924)){
(a[i_6925] = init_val_or_seq);

var G__6926 = (i_6925 + (1));
i_6925 = G__6926;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$double_array__1.call(this,size);
case 2:
return cljs$core$double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$double_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$double_array__1;
cljs$core$double_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$double_array__2;
return cljs$core$double_array;
})()
;
/**
 * Creates an array of objects. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.object_array = (function() {
var cljs$core$object_array = null;
var cljs$core$object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__6929 = (i + (1));
var G__6930 = cljs.core.next(s__$1);
i = G__6929;
s__$1 = G__6930;
continue;
} else {
return a;
}
break;
}
} else {
var n__4652__auto___6931 = size;
var i_6932 = (0);
while(true){
if((i_6932 < n__4652__auto___6931)){
(a[i_6932] = init_val_or_seq);

var G__6933 = (i_6932 + (1));
i_6932 = G__6933;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$object_array__1.call(this,size);
case 2:
return cljs$core$object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$object_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$object_array__1;
cljs$core$object_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$object_array__2;
return cljs$core$object_array;
})()
;
cljs.core.bounded_count = (function cljs$core$bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__6934 = cljs.core.next(s__$1);
var G__6935 = (i - (1));
var G__6936 = (sum + (1));
s__$1 = G__6934;
i = G__6935;
sum = G__6936;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function cljs$core$spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),cljs$core$spread(cljs.core.next(arglist)));

}
}
});
/**
 * Returns a lazy seq representing the concatenation of the elements in the supplied colls.
 * @param {...*} var_args
 */
cljs.core.concat = (function() {
var cljs$core$concat = null;
var cljs$core$concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var cljs$core$concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var cljs$core$concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),cljs$core$concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),cljs$core$concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var cljs$core$concat__3 = (function() { 
var G__6956__delegate = function (x,y,zs){
var cat = (function cljs$core$concat_$_cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cljs$core$concat_$_cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cljs$core$concat_$_cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cljs$core$concat_$_cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(cljs$core$concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__6956 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__6957__i = 0, G__6957__a = new Array(arguments.length -  2);
while (G__6957__i < G__6957__a.length) {G__6957__a[G__6957__i] = arguments[G__6957__i + 2]; ++G__6957__i;}
  zs = new cljs.core.IndexedSeq(G__6957__a,0);
} 
return G__6956__delegate.call(this,x,y,zs);};
G__6956.cljs$lang$maxFixedArity = 2;
G__6956.cljs$lang$applyTo = (function (arglist__6958){
var x = cljs.core.first(arglist__6958);
arglist__6958 = cljs.core.next(arglist__6958);
var y = cljs.core.first(arglist__6958);
var zs = cljs.core.rest(arglist__6958);
return G__6956__delegate(x,y,zs);
});
G__6956.cljs$core$IFn$_invoke$arity$variadic = G__6956__delegate;
return G__6956;
})()
;
cljs$core$concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return cljs$core$concat__0.call(this);
case 1:
return cljs$core$concat__1.call(this,x);
case 2:
return cljs$core$concat__2.call(this,x,y);
default:
var G__6959 = null;
if (arguments.length > 2) {
var G__6960__i = 0, G__6960__a = new Array(arguments.length -  2);
while (G__6960__i < G__6960__a.length) {G__6960__a[G__6960__i] = arguments[G__6960__i + 2]; ++G__6960__i;}
G__6959 = new cljs.core.IndexedSeq(G__6960__a,0);
}
return cljs$core$concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6959);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$concat.cljs$lang$maxFixedArity = 2;
cljs$core$concat.cljs$lang$applyTo = cljs$core$concat__3.cljs$lang$applyTo;
cljs$core$concat.cljs$core$IFn$_invoke$arity$0 = cljs$core$concat__0;
cljs$core$concat.cljs$core$IFn$_invoke$arity$1 = cljs$core$concat__1;
cljs$core$concat.cljs$core$IFn$_invoke$arity$2 = cljs$core$concat__2;
cljs$core$concat.cljs$core$IFn$_invoke$arity$variadic = cljs$core$concat__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$concat;
})()
;
/**
 * Creates a new list containing the items prepended to the rest, the
 * last of which will be treated as a sequence.
 * @param {...*} var_args
 */
cljs.core.list_STAR_ = (function() {
var cljs$core$list_STAR_ = null;
var cljs$core$list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var cljs$core$list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var cljs$core$list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var cljs$core$list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var cljs$core$list_STAR___5 = (function() { 
var G__6961__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__6961 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__6962__i = 0, G__6962__a = new Array(arguments.length -  4);
while (G__6962__i < G__6962__a.length) {G__6962__a[G__6962__i] = arguments[G__6962__i + 4]; ++G__6962__i;}
  more = new cljs.core.IndexedSeq(G__6962__a,0);
} 
return G__6961__delegate.call(this,a,b,c,d,more);};
G__6961.cljs$lang$maxFixedArity = 4;
G__6961.cljs$lang$applyTo = (function (arglist__6963){
var a = cljs.core.first(arglist__6963);
arglist__6963 = cljs.core.next(arglist__6963);
var b = cljs.core.first(arglist__6963);
arglist__6963 = cljs.core.next(arglist__6963);
var c = cljs.core.first(arglist__6963);
arglist__6963 = cljs.core.next(arglist__6963);
var d = cljs.core.first(arglist__6963);
var more = cljs.core.rest(arglist__6963);
return G__6961__delegate(a,b,c,d,more);
});
G__6961.cljs$core$IFn$_invoke$arity$variadic = G__6961__delegate;
return G__6961;
})()
;
cljs$core$list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$list_STAR___1.call(this,a);
case 2:
return cljs$core$list_STAR___2.call(this,a,b);
case 3:
return cljs$core$list_STAR___3.call(this,a,b,c);
case 4:
return cljs$core$list_STAR___4.call(this,a,b,c,d);
default:
var G__6964 = null;
if (arguments.length > 4) {
var G__6965__i = 0, G__6965__a = new Array(arguments.length -  4);
while (G__6965__i < G__6965__a.length) {G__6965__a[G__6965__i] = arguments[G__6965__i + 4]; ++G__6965__i;}
G__6964 = new cljs.core.IndexedSeq(G__6965__a,0);
}
return cljs$core$list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__6964);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$list_STAR_.cljs$lang$maxFixedArity = 4;
cljs$core$list_STAR_.cljs$lang$applyTo = cljs$core$list_STAR___5.cljs$lang$applyTo;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$1 = cljs$core$list_STAR___1;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$2 = cljs$core$list_STAR___2;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$3 = cljs$core$list_STAR___3;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$4 = cljs$core$list_STAR___4;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$list_STAR_;
})()
;
/**
 * Returns a new, transient version of the collection, in constant time.
 */
cljs.core.transient$ = (function cljs$core$transient(coll){
return cljs.core._as_transient(coll);
});
/**
 * Returns a new, persistent version of the transient collection, in
 * constant time. The transient collection cannot be used after this
 * call, any such use will throw an exception.
 */
cljs.core.persistent_BANG_ = (function cljs$core$persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
 * Adds x to the transient collection, and return coll. The 'addition'
 * may happen at different 'places' depending on the concrete type.
 * @param {...*} var_args
 */
cljs.core.conj_BANG_ = (function() {
var cljs$core$conj_BANG_ = null;
var cljs$core$conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var cljs$core$conj_BANG___1 = (function (coll){
return coll;
});
var cljs$core$conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var cljs$core$conj_BANG___3 = (function() { 
var G__6966__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__6967 = ntcoll;
var G__6968 = cljs.core.first(vals);
var G__6969 = cljs.core.next(vals);
tcoll = G__6967;
val = G__6968;
vals = G__6969;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__6966 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__6970__i = 0, G__6970__a = new Array(arguments.length -  2);
while (G__6970__i < G__6970__a.length) {G__6970__a[G__6970__i] = arguments[G__6970__i + 2]; ++G__6970__i;}
  vals = new cljs.core.IndexedSeq(G__6970__a,0);
} 
return G__6966__delegate.call(this,tcoll,val,vals);};
G__6966.cljs$lang$maxFixedArity = 2;
G__6966.cljs$lang$applyTo = (function (arglist__6971){
var tcoll = cljs.core.first(arglist__6971);
arglist__6971 = cljs.core.next(arglist__6971);
var val = cljs.core.first(arglist__6971);
var vals = cljs.core.rest(arglist__6971);
return G__6966__delegate(tcoll,val,vals);
});
G__6966.cljs$core$IFn$_invoke$arity$variadic = G__6966__delegate;
return G__6966;
})()
;
cljs$core$conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return cljs$core$conj_BANG___0.call(this);
case 1:
return cljs$core$conj_BANG___1.call(this,tcoll);
case 2:
return cljs$core$conj_BANG___2.call(this,tcoll,val);
default:
var G__6972 = null;
if (arguments.length > 2) {
var G__6973__i = 0, G__6973__a = new Array(arguments.length -  2);
while (G__6973__i < G__6973__a.length) {G__6973__a[G__6973__i] = arguments[G__6973__i + 2]; ++G__6973__i;}
G__6972 = new cljs.core.IndexedSeq(G__6973__a,0);
}
return cljs$core$conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__6972);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$conj_BANG_.cljs$lang$applyTo = cljs$core$conj_BANG___3.cljs$lang$applyTo;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$0 = cljs$core$conj_BANG___0;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$1 = cljs$core$conj_BANG___1;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$conj_BANG___2;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$conj_BANG_;
})()
;
/**
 * When applied to a transient map, adds mapping of key(s) to
 * val(s). When applied to a transient vector, sets the val at index.
 * Note - index must be <= (count vector). Returns coll.
 * @param {...*} var_args
 */
cljs.core.assoc_BANG_ = (function() {
var cljs$core$assoc_BANG_ = null;
var cljs$core$assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var cljs$core$assoc_BANG___4 = (function() { 
var G__6974__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__6975 = ntcoll;
var G__6976 = cljs.core.first(kvs);
var G__6977 = cljs.core.second(kvs);
var G__6978 = cljs.core.nnext(kvs);
tcoll = G__6975;
key = G__6976;
val = G__6977;
kvs = G__6978;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__6974 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__6979__i = 0, G__6979__a = new Array(arguments.length -  3);
while (G__6979__i < G__6979__a.length) {G__6979__a[G__6979__i] = arguments[G__6979__i + 3]; ++G__6979__i;}
  kvs = new cljs.core.IndexedSeq(G__6979__a,0);
} 
return G__6974__delegate.call(this,tcoll,key,val,kvs);};
G__6974.cljs$lang$maxFixedArity = 3;
G__6974.cljs$lang$applyTo = (function (arglist__6980){
var tcoll = cljs.core.first(arglist__6980);
arglist__6980 = cljs.core.next(arglist__6980);
var key = cljs.core.first(arglist__6980);
arglist__6980 = cljs.core.next(arglist__6980);
var val = cljs.core.first(arglist__6980);
var kvs = cljs.core.rest(arglist__6980);
return G__6974__delegate(tcoll,key,val,kvs);
});
G__6974.cljs$core$IFn$_invoke$arity$variadic = G__6974__delegate;
return G__6974;
})()
;
cljs$core$assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return cljs$core$assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__6981 = null;
if (arguments.length > 3) {
var G__6982__i = 0, G__6982__a = new Array(arguments.length -  3);
while (G__6982__i < G__6982__a.length) {G__6982__a[G__6982__i] = arguments[G__6982__i + 3]; ++G__6982__i;}
G__6981 = new cljs.core.IndexedSeq(G__6982__a,0);
}
return cljs$core$assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__6981);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs$core$assoc_BANG_.cljs$lang$applyTo = cljs$core$assoc_BANG___4.cljs$lang$applyTo;
cljs$core$assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$assoc_BANG___3;
cljs$core$assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$assoc_BANG_;
})()
;
/**
 * Returns a transient map that doesn't contain a mapping for key(s).
 * @param {...*} var_args
 */
cljs.core.dissoc_BANG_ = (function() {
var cljs$core$dissoc_BANG_ = null;
var cljs$core$dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var cljs$core$dissoc_BANG___3 = (function() { 
var G__6983__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__6984 = ntcoll;
var G__6985 = cljs.core.first(ks);
var G__6986 = cljs.core.next(ks);
tcoll = G__6984;
key = G__6985;
ks = G__6986;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__6983 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__6987__i = 0, G__6987__a = new Array(arguments.length -  2);
while (G__6987__i < G__6987__a.length) {G__6987__a[G__6987__i] = arguments[G__6987__i + 2]; ++G__6987__i;}
  ks = new cljs.core.IndexedSeq(G__6987__a,0);
} 
return G__6983__delegate.call(this,tcoll,key,ks);};
G__6983.cljs$lang$maxFixedArity = 2;
G__6983.cljs$lang$applyTo = (function (arglist__6988){
var tcoll = cljs.core.first(arglist__6988);
arglist__6988 = cljs.core.next(arglist__6988);
var key = cljs.core.first(arglist__6988);
var ks = cljs.core.rest(arglist__6988);
return G__6983__delegate(tcoll,key,ks);
});
G__6983.cljs$core$IFn$_invoke$arity$variadic = G__6983__delegate;
return G__6983;
})()
;
cljs$core$dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return cljs$core$dissoc_BANG___2.call(this,tcoll,key);
default:
var G__6989 = null;
if (arguments.length > 2) {
var G__6990__i = 0, G__6990__a = new Array(arguments.length -  2);
while (G__6990__i < G__6990__a.length) {G__6990__a[G__6990__i] = arguments[G__6990__i + 2]; ++G__6990__i;}
G__6989 = new cljs.core.IndexedSeq(G__6990__a,0);
}
return cljs$core$dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__6989);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$dissoc_BANG_.cljs$lang$applyTo = cljs$core$dissoc_BANG___3.cljs$lang$applyTo;
cljs$core$dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$dissoc_BANG___2;
cljs$core$dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$dissoc_BANG_;
})()
;
/**
 * Removes the last item from a transient vector. If
 * the collection is empty, throws an exception. Returns coll
 */
cljs.core.pop_BANG_ = (function cljs$core$pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
 * disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
 * does not contain key(s).
 * @param {...*} var_args
 */
cljs.core.disj_BANG_ = (function() {
var cljs$core$disj_BANG_ = null;
var cljs$core$disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var cljs$core$disj_BANG___3 = (function() { 
var G__6991__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__6992 = ntcoll;
var G__6993 = cljs.core.first(vals);
var G__6994 = cljs.core.next(vals);
tcoll = G__6992;
val = G__6993;
vals = G__6994;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__6991 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__6995__i = 0, G__6995__a = new Array(arguments.length -  2);
while (G__6995__i < G__6995__a.length) {G__6995__a[G__6995__i] = arguments[G__6995__i + 2]; ++G__6995__i;}
  vals = new cljs.core.IndexedSeq(G__6995__a,0);
} 
return G__6991__delegate.call(this,tcoll,val,vals);};
G__6991.cljs$lang$maxFixedArity = 2;
G__6991.cljs$lang$applyTo = (function (arglist__6996){
var tcoll = cljs.core.first(arglist__6996);
arglist__6996 = cljs.core.next(arglist__6996);
var val = cljs.core.first(arglist__6996);
var vals = cljs.core.rest(arglist__6996);
return G__6991__delegate(tcoll,val,vals);
});
G__6991.cljs$core$IFn$_invoke$arity$variadic = G__6991__delegate;
return G__6991;
})()
;
cljs$core$disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return cljs$core$disj_BANG___2.call(this,tcoll,val);
default:
var G__6997 = null;
if (arguments.length > 2) {
var G__6998__i = 0, G__6998__a = new Array(arguments.length -  2);
while (G__6998__i < G__6998__a.length) {G__6998__a[G__6998__i] = arguments[G__6998__i + 2]; ++G__6998__i;}
G__6997 = new cljs.core.IndexedSeq(G__6998__a,0);
}
return cljs$core$disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__6997);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$disj_BANG_.cljs$lang$applyTo = cljs$core$disj_BANG___3.cljs$lang$applyTo;
cljs$core$disj_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$disj_BANG___2;
cljs$core$disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$disj_BANG_;
})()
;

cljs.core.apply_to = (function cljs$core$apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4696 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4696);
} else {
var G__7209 = a4696;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7209) : f.call(null,G__7209));
}
} else {
var b4697 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4696,b4697);
} else {
var G__7210 = a4696;
var G__7211 = b4697;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7210,G__7211) : f.call(null,G__7210,G__7211));
}
} else {
var c4698 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4696,b4697,c4698);
} else {
var G__7212 = a4696;
var G__7213 = b4697;
var G__7214 = c4698;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7212,G__7213,G__7214) : f.call(null,G__7212,G__7213,G__7214));
}
} else {
var d4699 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4696,b4697,c4698,d4699);
} else {
var G__7215 = a4696;
var G__7216 = b4697;
var G__7217 = c4698;
var G__7218 = d4699;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7215,G__7216,G__7217,G__7218) : f.call(null,G__7215,G__7216,G__7217,G__7218));
}
} else {
var e4700 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4696,b4697,c4698,d4699,e4700);
} else {
var G__7219 = a4696;
var G__7220 = b4697;
var G__7221 = c4698;
var G__7222 = d4699;
var G__7223 = e4700;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7219,G__7220,G__7221,G__7222,G__7223) : f.call(null,G__7219,G__7220,G__7221,G__7222,G__7223));
}
} else {
var f4701 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4696,b4697,c4698,d4699,e4700,f4701);
} else {
var G__7224 = a4696;
var G__7225 = b4697;
var G__7226 = c4698;
var G__7227 = d4699;
var G__7228 = e4700;
var G__7229 = f4701;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__7224,G__7225,G__7226,G__7227,G__7228,G__7229) : f.call(null,G__7224,G__7225,G__7226,G__7227,G__7228,G__7229));
}
} else {
var g4702 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4696,b4697,c4698,d4699,e4700,f4701,g4702);
} else {
var G__7230 = a4696;
var G__7231 = b4697;
var G__7232 = c4698;
var G__7233 = d4699;
var G__7234 = e4700;
var G__7235 = f4701;
var G__7236 = g4702;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__7230,G__7231,G__7232,G__7233,G__7234,G__7235,G__7236) : f.call(null,G__7230,G__7231,G__7232,G__7233,G__7234,G__7235,G__7236));
}
} else {
var h4703 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4696,b4697,c4698,d4699,e4700,f4701,g4702,h4703);
} else {
var G__7237 = a4696;
var G__7238 = b4697;
var G__7239 = c4698;
var G__7240 = d4699;
var G__7241 = e4700;
var G__7242 = f4701;
var G__7243 = g4702;
var G__7244 = h4703;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__7237,G__7238,G__7239,G__7240,G__7241,G__7242,G__7243,G__7244) : f.call(null,G__7237,G__7238,G__7239,G__7240,G__7241,G__7242,G__7243,G__7244));
}
} else {
var i4704 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4696,b4697,c4698,d4699,e4700,f4701,g4702,h4703,i4704);
} else {
var G__7245 = a4696;
var G__7246 = b4697;
var G__7247 = c4698;
var G__7248 = d4699;
var G__7249 = e4700;
var G__7250 = f4701;
var G__7251 = g4702;
var G__7252 = h4703;
var G__7253 = i4704;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__7245,G__7246,G__7247,G__7248,G__7249,G__7250,G__7251,G__7252,G__7253) : f.call(null,G__7245,G__7246,G__7247,G__7248,G__7249,G__7250,G__7251,G__7252,G__7253));
}
} else {
var j4705 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4696,b4697,c4698,d4699,e4700,f4701,g4702,h4703,i4704,j4705);
} else {
var G__7254 = a4696;
var G__7255 = b4697;
var G__7256 = c4698;
var G__7257 = d4699;
var G__7258 = e4700;
var G__7259 = f4701;
var G__7260 = g4702;
var G__7261 = h4703;
var G__7262 = i4704;
var G__7263 = j4705;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__7254,G__7255,G__7256,G__7257,G__7258,G__7259,G__7260,G__7261,G__7262,G__7263) : f.call(null,G__7254,G__7255,G__7256,G__7257,G__7258,G__7259,G__7260,G__7261,G__7262,G__7263));
}
} else {
var k4706 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4696,b4697,c4698,d4699,e4700,f4701,g4702,h4703,i4704,j4705,k4706);
} else {
var G__7264 = a4696;
var G__7265 = b4697;
var G__7266 = c4698;
var G__7267 = d4699;
var G__7268 = e4700;
var G__7269 = f4701;
var G__7270 = g4702;
var G__7271 = h4703;
var G__7272 = i4704;
var G__7273 = j4705;
var G__7274 = k4706;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__7264,G__7265,G__7266,G__7267,G__7268,G__7269,G__7270,G__7271,G__7272,G__7273,G__7274) : f.call(null,G__7264,G__7265,G__7266,G__7267,G__7268,G__7269,G__7270,G__7271,G__7272,G__7273,G__7274));
}
} else {
var l4707 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4696,b4697,c4698,d4699,e4700,f4701,g4702,h4703,i4704,j4705,k4706,l4707);
} else {
var G__7275 = a4696;
var G__7276 = b4697;
var G__7277 = c4698;
var G__7278 = d4699;
var G__7279 = e4700;
var G__7280 = f4701;
var G__7281 = g4702;
var G__7282 = h4703;
var G__7283 = i4704;
var G__7284 = j4705;
var G__7285 = k4706;
var G__7286 = l4707;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__7275,G__7276,G__7277,G__7278,G__7279,G__7280,G__7281,G__7282,G__7283,G__7284,G__7285,G__7286) : f.call(null,G__7275,G__7276,G__7277,G__7278,G__7279,G__7280,G__7281,G__7282,G__7283,G__7284,G__7285,G__7286));
}
} else {
var m4708 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4696,b4697,c4698,d4699,e4700,f4701,g4702,h4703,i4704,j4705,k4706,l4707,m4708);
} else {
var G__7287 = a4696;
var G__7288 = b4697;
var G__7289 = c4698;
var G__7290 = d4699;
var G__7291 = e4700;
var G__7292 = f4701;
var G__7293 = g4702;
var G__7294 = h4703;
var G__7295 = i4704;
var G__7296 = j4705;
var G__7297 = k4706;
var G__7298 = l4707;
var G__7299 = m4708;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__7287,G__7288,G__7289,G__7290,G__7291,G__7292,G__7293,G__7294,G__7295,G__7296,G__7297,G__7298,G__7299) : f.call(null,G__7287,G__7288,G__7289,G__7290,G__7291,G__7292,G__7293,G__7294,G__7295,G__7296,G__7297,G__7298,G__7299));
}
} else {
var n4709 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4696,b4697,c4698,d4699,e4700,f4701,g4702,h4703,i4704,j4705,k4706,l4707,m4708,n4709);
} else {
var G__7300 = a4696;
var G__7301 = b4697;
var G__7302 = c4698;
var G__7303 = d4699;
var G__7304 = e4700;
var G__7305 = f4701;
var G__7306 = g4702;
var G__7307 = h4703;
var G__7308 = i4704;
var G__7309 = j4705;
var G__7310 = k4706;
var G__7311 = l4707;
var G__7312 = m4708;
var G__7313 = n4709;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__7300,G__7301,G__7302,G__7303,G__7304,G__7305,G__7306,G__7307,G__7308,G__7309,G__7310,G__7311,G__7312,G__7313) : f.call(null,G__7300,G__7301,G__7302,G__7303,G__7304,G__7305,G__7306,G__7307,G__7308,G__7309,G__7310,G__7311,G__7312,G__7313));
}
} else {
var o4710 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4696,b4697,c4698,d4699,e4700,f4701,g4702,h4703,i4704,j4705,k4706,l4707,m4708,n4709,o4710);
} else {
var G__7314 = a4696;
var G__7315 = b4697;
var G__7316 = c4698;
var G__7317 = d4699;
var G__7318 = e4700;
var G__7319 = f4701;
var G__7320 = g4702;
var G__7321 = h4703;
var G__7322 = i4704;
var G__7323 = j4705;
var G__7324 = k4706;
var G__7325 = l4707;
var G__7326 = m4708;
var G__7327 = n4709;
var G__7328 = o4710;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__7314,G__7315,G__7316,G__7317,G__7318,G__7319,G__7320,G__7321,G__7322,G__7323,G__7324,G__7325,G__7326,G__7327,G__7328) : f.call(null,G__7314,G__7315,G__7316,G__7317,G__7318,G__7319,G__7320,G__7321,G__7322,G__7323,G__7324,G__7325,G__7326,G__7327,G__7328));
}
} else {
var p4711 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4696,b4697,c4698,d4699,e4700,f4701,g4702,h4703,i4704,j4705,k4706,l4707,m4708,n4709,o4710,p4711);
} else {
var G__7329 = a4696;
var G__7330 = b4697;
var G__7331 = c4698;
var G__7332 = d4699;
var G__7333 = e4700;
var G__7334 = f4701;
var G__7335 = g4702;
var G__7336 = h4703;
var G__7337 = i4704;
var G__7338 = j4705;
var G__7339 = k4706;
var G__7340 = l4707;
var G__7341 = m4708;
var G__7342 = n4709;
var G__7343 = o4710;
var G__7344 = p4711;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__7329,G__7330,G__7331,G__7332,G__7333,G__7334,G__7335,G__7336,G__7337,G__7338,G__7339,G__7340,G__7341,G__7342,G__7343,G__7344) : f.call(null,G__7329,G__7330,G__7331,G__7332,G__7333,G__7334,G__7335,G__7336,G__7337,G__7338,G__7339,G__7340,G__7341,G__7342,G__7343,G__7344));
}
} else {
var q4712 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4696,b4697,c4698,d4699,e4700,f4701,g4702,h4703,i4704,j4705,k4706,l4707,m4708,n4709,o4710,p4711,q4712);
} else {
var G__7345 = a4696;
var G__7346 = b4697;
var G__7347 = c4698;
var G__7348 = d4699;
var G__7349 = e4700;
var G__7350 = f4701;
var G__7351 = g4702;
var G__7352 = h4703;
var G__7353 = i4704;
var G__7354 = j4705;
var G__7355 = k4706;
var G__7356 = l4707;
var G__7357 = m4708;
var G__7358 = n4709;
var G__7359 = o4710;
var G__7360 = p4711;
var G__7361 = q4712;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__7345,G__7346,G__7347,G__7348,G__7349,G__7350,G__7351,G__7352,G__7353,G__7354,G__7355,G__7356,G__7357,G__7358,G__7359,G__7360,G__7361) : f.call(null,G__7345,G__7346,G__7347,G__7348,G__7349,G__7350,G__7351,G__7352,G__7353,G__7354,G__7355,G__7356,G__7357,G__7358,G__7359,G__7360,G__7361));
}
} else {
var r4713 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4696,b4697,c4698,d4699,e4700,f4701,g4702,h4703,i4704,j4705,k4706,l4707,m4708,n4709,o4710,p4711,q4712,r4713);
} else {
var G__7362 = a4696;
var G__7363 = b4697;
var G__7364 = c4698;
var G__7365 = d4699;
var G__7366 = e4700;
var G__7367 = f4701;
var G__7368 = g4702;
var G__7369 = h4703;
var G__7370 = i4704;
var G__7371 = j4705;
var G__7372 = k4706;
var G__7373 = l4707;
var G__7374 = m4708;
var G__7375 = n4709;
var G__7376 = o4710;
var G__7377 = p4711;
var G__7378 = q4712;
var G__7379 = r4713;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__7362,G__7363,G__7364,G__7365,G__7366,G__7367,G__7368,G__7369,G__7370,G__7371,G__7372,G__7373,G__7374,G__7375,G__7376,G__7377,G__7378,G__7379) : f.call(null,G__7362,G__7363,G__7364,G__7365,G__7366,G__7367,G__7368,G__7369,G__7370,G__7371,G__7372,G__7373,G__7374,G__7375,G__7376,G__7377,G__7378,G__7379));
}
} else {
var s4714 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4696,b4697,c4698,d4699,e4700,f4701,g4702,h4703,i4704,j4705,k4706,l4707,m4708,n4709,o4710,p4711,q4712,r4713,s4714);
} else {
var G__7380 = a4696;
var G__7381 = b4697;
var G__7382 = c4698;
var G__7383 = d4699;
var G__7384 = e4700;
var G__7385 = f4701;
var G__7386 = g4702;
var G__7387 = h4703;
var G__7388 = i4704;
var G__7389 = j4705;
var G__7390 = k4706;
var G__7391 = l4707;
var G__7392 = m4708;
var G__7393 = n4709;
var G__7394 = o4710;
var G__7395 = p4711;
var G__7396 = q4712;
var G__7397 = r4713;
var G__7398 = s4714;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__7380,G__7381,G__7382,G__7383,G__7384,G__7385,G__7386,G__7387,G__7388,G__7389,G__7390,G__7391,G__7392,G__7393,G__7394,G__7395,G__7396,G__7397,G__7398) : f.call(null,G__7380,G__7381,G__7382,G__7383,G__7384,G__7385,G__7386,G__7387,G__7388,G__7389,G__7390,G__7391,G__7392,G__7393,G__7394,G__7395,G__7396,G__7397,G__7398));
}
} else {
var t4715 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4696,b4697,c4698,d4699,e4700,f4701,g4702,h4703,i4704,j4705,k4706,l4707,m4708,n4709,o4710,p4711,q4712,r4713,s4714,t4715);
} else {
var G__7399 = a4696;
var G__7400 = b4697;
var G__7401 = c4698;
var G__7402 = d4699;
var G__7403 = e4700;
var G__7404 = f4701;
var G__7405 = g4702;
var G__7406 = h4703;
var G__7407 = i4704;
var G__7408 = j4705;
var G__7409 = k4706;
var G__7410 = l4707;
var G__7411 = m4708;
var G__7412 = n4709;
var G__7413 = o4710;
var G__7414 = p4711;
var G__7415 = q4712;
var G__7416 = r4713;
var G__7417 = s4714;
var G__7418 = t4715;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__7399,G__7400,G__7401,G__7402,G__7403,G__7404,G__7405,G__7406,G__7407,G__7408,G__7409,G__7410,G__7411,G__7412,G__7413,G__7414,G__7415,G__7416,G__7417,G__7418) : f.call(null,G__7399,G__7400,G__7401,G__7402,G__7403,G__7404,G__7405,G__7406,G__7407,G__7408,G__7409,G__7410,G__7411,G__7412,G__7413,G__7414,G__7415,G__7416,G__7417,G__7418));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
 * Applies fn f to the argument list formed by prepending intervening arguments to args.
 * @param {...*} var_args
 */
cljs.core.apply = (function() {
var cljs$core$apply = null;
var cljs$core$apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var cljs$core$apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var cljs$core$apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var cljs$core$apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var cljs$core$apply__6 = (function() { 
var G__7419__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__7419 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__7420__i = 0, G__7420__a = new Array(arguments.length -  5);
while (G__7420__i < G__7420__a.length) {G__7420__a[G__7420__i] = arguments[G__7420__i + 5]; ++G__7420__i;}
  args = new cljs.core.IndexedSeq(G__7420__a,0);
} 
return G__7419__delegate.call(this,f,a,b,c,d,args);};
G__7419.cljs$lang$maxFixedArity = 5;
G__7419.cljs$lang$applyTo = (function (arglist__7421){
var f = cljs.core.first(arglist__7421);
arglist__7421 = cljs.core.next(arglist__7421);
var a = cljs.core.first(arglist__7421);
arglist__7421 = cljs.core.next(arglist__7421);
var b = cljs.core.first(arglist__7421);
arglist__7421 = cljs.core.next(arglist__7421);
var c = cljs.core.first(arglist__7421);
arglist__7421 = cljs.core.next(arglist__7421);
var d = cljs.core.first(arglist__7421);
var args = cljs.core.rest(arglist__7421);
return G__7419__delegate(f,a,b,c,d,args);
});
G__7419.cljs$core$IFn$_invoke$arity$variadic = G__7419__delegate;
return G__7419;
})()
;
cljs$core$apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return cljs$core$apply__2.call(this,f,a);
case 3:
return cljs$core$apply__3.call(this,f,a,b);
case 4:
return cljs$core$apply__4.call(this,f,a,b,c);
case 5:
return cljs$core$apply__5.call(this,f,a,b,c,d);
default:
var G__7422 = null;
if (arguments.length > 5) {
var G__7423__i = 0, G__7423__a = new Array(arguments.length -  5);
while (G__7423__i < G__7423__a.length) {G__7423__a[G__7423__i] = arguments[G__7423__i + 5]; ++G__7423__i;}
G__7422 = new cljs.core.IndexedSeq(G__7423__a,0);
}
return cljs$core$apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__7422);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$apply.cljs$lang$maxFixedArity = 5;
cljs$core$apply.cljs$lang$applyTo = cljs$core$apply__6.cljs$lang$applyTo;
cljs$core$apply.cljs$core$IFn$_invoke$arity$2 = cljs$core$apply__2;
cljs$core$apply.cljs$core$IFn$_invoke$arity$3 = cljs$core$apply__3;
cljs$core$apply.cljs$core$IFn$_invoke$arity$4 = cljs$core$apply__4;
cljs$core$apply.cljs$core$IFn$_invoke$arity$5 = cljs$core$apply__5;
cljs$core$apply.cljs$core$IFn$_invoke$arity$variadic = cljs$core$apply__6.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$apply;
})()
;
/**
 * Returns an object of the same type and value as obj, with
 * (apply f (meta obj) args) as its metadata.
 * @param {...*} var_args
 */
cljs.core.vary_meta = (function() {
var cljs$core$vary_meta = null;
var cljs$core$vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__7439 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7439) : f.call(null,G__7439));
})());
});
var cljs$core$vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__7440 = cljs.core.meta(obj);
var G__7441 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7440,G__7441) : f.call(null,G__7440,G__7441));
})());
});
var cljs$core$vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__7442 = cljs.core.meta(obj);
var G__7443 = a;
var G__7444 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7442,G__7443,G__7444) : f.call(null,G__7442,G__7443,G__7444));
})());
});
var cljs$core$vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__7445 = cljs.core.meta(obj);
var G__7446 = a;
var G__7447 = b;
var G__7448 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7445,G__7446,G__7447,G__7448) : f.call(null,G__7445,G__7446,G__7447,G__7448));
})());
});
var cljs$core$vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__7449 = cljs.core.meta(obj);
var G__7450 = a;
var G__7451 = b;
var G__7452 = c;
var G__7453 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7449,G__7450,G__7451,G__7452,G__7453) : f.call(null,G__7449,G__7450,G__7451,G__7452,G__7453));
})());
});
var cljs$core$vary_meta__7 = (function() { 
var G__7454__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__7454 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__7455__i = 0, G__7455__a = new Array(arguments.length -  6);
while (G__7455__i < G__7455__a.length) {G__7455__a[G__7455__i] = arguments[G__7455__i + 6]; ++G__7455__i;}
  args = new cljs.core.IndexedSeq(G__7455__a,0);
} 
return G__7454__delegate.call(this,obj,f,a,b,c,d,args);};
G__7454.cljs$lang$maxFixedArity = 6;
G__7454.cljs$lang$applyTo = (function (arglist__7456){
var obj = cljs.core.first(arglist__7456);
arglist__7456 = cljs.core.next(arglist__7456);
var f = cljs.core.first(arglist__7456);
arglist__7456 = cljs.core.next(arglist__7456);
var a = cljs.core.first(arglist__7456);
arglist__7456 = cljs.core.next(arglist__7456);
var b = cljs.core.first(arglist__7456);
arglist__7456 = cljs.core.next(arglist__7456);
var c = cljs.core.first(arglist__7456);
arglist__7456 = cljs.core.next(arglist__7456);
var d = cljs.core.first(arglist__7456);
var args = cljs.core.rest(arglist__7456);
return G__7454__delegate(obj,f,a,b,c,d,args);
});
G__7454.cljs$core$IFn$_invoke$arity$variadic = G__7454__delegate;
return G__7454;
})()
;
cljs$core$vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return cljs$core$vary_meta__2.call(this,obj,f);
case 3:
return cljs$core$vary_meta__3.call(this,obj,f,a);
case 4:
return cljs$core$vary_meta__4.call(this,obj,f,a,b);
case 5:
return cljs$core$vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return cljs$core$vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__7457 = null;
if (arguments.length > 6) {
var G__7458__i = 0, G__7458__a = new Array(arguments.length -  6);
while (G__7458__i < G__7458__a.length) {G__7458__a[G__7458__i] = arguments[G__7458__i + 6]; ++G__7458__i;}
G__7457 = new cljs.core.IndexedSeq(G__7458__a,0);
}
return cljs$core$vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__7457);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$vary_meta.cljs$lang$maxFixedArity = 6;
cljs$core$vary_meta.cljs$lang$applyTo = cljs$core$vary_meta__7.cljs$lang$applyTo;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$2 = cljs$core$vary_meta__2;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$3 = cljs$core$vary_meta__3;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$4 = cljs$core$vary_meta__4;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$5 = cljs$core$vary_meta__5;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$6 = cljs$core$vary_meta__6;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$variadic = cljs$core$vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$vary_meta;
})()
;
/**
 * Same as (not (= obj1 obj2))
 * @param {...*} var_args
 */
cljs.core.not_EQ_ = (function() {
var cljs$core$not_EQ_ = null;
var cljs$core$not_EQ___1 = (function (x){
return false;
});
var cljs$core$not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var cljs$core$not_EQ___3 = (function() { 
var G__7459__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__7459 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7460__i = 0, G__7460__a = new Array(arguments.length -  2);
while (G__7460__i < G__7460__a.length) {G__7460__a[G__7460__i] = arguments[G__7460__i + 2]; ++G__7460__i;}
  more = new cljs.core.IndexedSeq(G__7460__a,0);
} 
return G__7459__delegate.call(this,x,y,more);};
G__7459.cljs$lang$maxFixedArity = 2;
G__7459.cljs$lang$applyTo = (function (arglist__7461){
var x = cljs.core.first(arglist__7461);
arglist__7461 = cljs.core.next(arglist__7461);
var y = cljs.core.first(arglist__7461);
var more = cljs.core.rest(arglist__7461);
return G__7459__delegate(x,y,more);
});
G__7459.cljs$core$IFn$_invoke$arity$variadic = G__7459__delegate;
return G__7459;
})()
;
cljs$core$not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$not_EQ___1.call(this,x);
case 2:
return cljs$core$not_EQ___2.call(this,x,y);
default:
var G__7462 = null;
if (arguments.length > 2) {
var G__7463__i = 0, G__7463__a = new Array(arguments.length -  2);
while (G__7463__i < G__7463__a.length) {G__7463__a[G__7463__i] = arguments[G__7463__i + 2]; ++G__7463__i;}
G__7462 = new cljs.core.IndexedSeq(G__7463__a,0);
}
return cljs$core$not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7462);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$not_EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$not_EQ_.cljs$lang$applyTo = cljs$core$not_EQ___3.cljs$lang$applyTo;
cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$not_EQ___1;
cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$not_EQ___2;
cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$not_EQ_;
})()
;
/**
 * If coll is empty, returns nil, else coll
 */
cljs.core.not_empty = (function cljs$core$not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function cljs$core$nil_iter(){
if(typeof cljs.core.t7467 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t7467 = (function (nil_iter,meta7468){
this.nil_iter = nil_iter;
this.meta7468 = meta7468;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t7467.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t7467.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t7467.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t7467.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_7469){
var self__ = this;
var _7469__$1 = this;
return self__.meta7468;
});

cljs.core.t7467.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_7469,meta7468__$1){
var self__ = this;
var _7469__$1 = this;
return (new cljs.core.t7467(self__.nil_iter,meta7468__$1));
});

cljs.core.t7467.cljs$lang$type = true;

cljs.core.t7467.cljs$lang$ctorStr = "cljs.core/t7467";

cljs.core.t7467.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/t7467");
});

cljs.core.__GT_t7467 = (function cljs$core$nil_iter_$___GT_t7467(nil_iter__$1,meta7468){
return (new cljs.core.t7467(nil_iter__$1,meta7468));
});

}

return (new cljs.core.t7467(cljs$core$nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function cljs$core$__GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function cljs$core$string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function cljs$core$__GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function cljs$core$array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function cljs$core$__GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function cljs$core$seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function cljs$core$iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(cljs.core.array_QMARK_(coll)){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function cljs$core$lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3755__auto__ = !((lt.stepper == null));
if(and__3755__auto__){
return self__.iter.hasNext();
} else {
return and__3755__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__7470 = lt;
var G__7471 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__7470,G__7471) : self__.xform.call(null,G__7470,G__7471));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__7472 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__7472) : self__.xform.call(null,G__7472));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function cljs$core$__GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function cljs$core$stepper(xform,iter){
var stepfn = (function() {
var cljs$core$stepper_$_stepfn = null;
var cljs$core$stepper_$_stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var cljs$core$stepper_$_stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
cljs$core$stepper_$_stepfn = function(result,input){
switch(arguments.length){
case 1:
return cljs$core$stepper_$_stepfn__1.call(this,result);
case 2:
return cljs$core$stepper_$_stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
return cljs$core$stepper_$_stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__7474 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__7474) : xform.call(null,G__7474));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__7476 = cljs.core.next(iters__$1);
iters__$1 = G__7476;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4652__auto___7477 = self__.iters.length;
var i_7478 = (0);
while(true){
if((i_7478 < n__4652__auto___7477)){
(self__.nexts[i_7478] = (self__.iters[i_7478]).next());

var G__7479 = (i_7478 + (1));
i_7478 = G__7479;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3755__auto__ = !((lt.stepper == null));
if(and__3755__auto__){
return this$.hasNext();
} else {
return and__3755__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__7475 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__7475) : self__.xform.call(null,G__7475));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function cljs$core$__GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var cljs$core$multi_stepper = null;
var cljs$core$multi_stepper__2 = (function (xform,iters){
return cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var cljs$core$multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var cljs$core$multi_stepper_$_stepfn = null;
var cljs$core$multi_stepper_$_stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var cljs$core$multi_stepper_$_stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
cljs$core$multi_stepper_$_stepfn = function(result,input){
switch(arguments.length){
case 1:
return cljs$core$multi_stepper_$_stepfn__1.call(this,result);
case 2:
return cljs$core$multi_stepper_$_stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$multi_stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$multi_stepper_$_stepfn__1;
cljs$core$multi_stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$multi_stepper_$_stepfn__2;
return cljs$core$multi_stepper_$_stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__7484 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__7484) : xform.call(null,G__7484));
})(),iters,nexts));
});
cljs$core$multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return cljs$core$multi_stepper__2.call(this,xform,iters);
case 3:
return cljs$core$multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$2 = cljs$core$multi_stepper__2;
cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$3 = cljs$core$multi_stepper__3;
return cljs$core$multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function cljs$core$__GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__7485_7489 = cljs.core.seq(colls);
var chunk__7486_7490 = null;
var count__7487_7491 = (0);
var i__7488_7492 = (0);
while(true){
if((i__7488_7492 < count__7487_7491)){
var coll_7493 = chunk__7486_7490.cljs$core$IIndexed$_nth$arity$2(null,i__7488_7492);
iters.push(cljs.core.iter(coll_7493));

var G__7494 = seq__7485_7489;
var G__7495 = chunk__7486_7490;
var G__7496 = count__7487_7491;
var G__7497 = (i__7488_7492 + (1));
seq__7485_7489 = G__7494;
chunk__7486_7490 = G__7495;
count__7487_7491 = G__7496;
i__7488_7492 = G__7497;
continue;
} else {
var temp__4126__auto___7498 = cljs.core.seq(seq__7485_7489);
if(temp__4126__auto___7498){
var seq__7485_7499__$1 = temp__4126__auto___7498;
if(cljs.core.chunked_seq_QMARK_(seq__7485_7499__$1)){
var c__4552__auto___7500 = cljs.core.chunk_first(seq__7485_7499__$1);
var G__7501 = cljs.core.chunk_rest(seq__7485_7499__$1);
var G__7502 = c__4552__auto___7500;
var G__7503 = cljs.core.count(c__4552__auto___7500);
var G__7504 = (0);
seq__7485_7489 = G__7501;
chunk__7486_7490 = G__7502;
count__7487_7491 = G__7503;
i__7488_7492 = G__7504;
continue;
} else {
var coll_7505 = cljs.core.first(seq__7485_7499__$1);
iters.push(cljs.core.iter(coll_7505));

var G__7506 = cljs.core.next(seq__7485_7499__$1);
var G__7507 = null;
var G__7508 = (0);
var G__7509 = (0);
seq__7485_7489 = G__7506;
chunk__7486_7490 = G__7507;
count__7487_7491 = G__7508;
i__7488_7492 = G__7509;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
 * Coerces coll to a (possibly empty) sequence, if it is not already
 * one. Will not force a lazy seq. (sequence nil) yields (), When a
 * transducer is supplied, returns a lazy sequence of applications of
 * the transform to the items in coll(s), i.e. to the set of first
 * items of each coll, followed by the set of second
 * items in each coll, until any one of the colls is exhausted.  Any
 * remaining items in other colls are ignored. The transform should accept
 * number-of-colls arguments
 * @param {...*} var_args
 */
cljs.core.sequence = (function() {
var cljs$core$sequence = null;
var cljs$core$sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3767__auto__ = cljs.core.seq(coll);
if(or__3767__auto__){
return or__3767__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var cljs$core$sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var cljs$core$sequence__3 = (function() { 
var G__7510__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__7510 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__7511__i = 0, G__7511__a = new Array(arguments.length -  2);
while (G__7511__i < G__7511__a.length) {G__7511__a[G__7511__i] = arguments[G__7511__i + 2]; ++G__7511__i;}
  colls = new cljs.core.IndexedSeq(G__7511__a,0);
} 
return G__7510__delegate.call(this,xform,coll,colls);};
G__7510.cljs$lang$maxFixedArity = 2;
G__7510.cljs$lang$applyTo = (function (arglist__7512){
var xform = cljs.core.first(arglist__7512);
arglist__7512 = cljs.core.next(arglist__7512);
var coll = cljs.core.first(arglist__7512);
var colls = cljs.core.rest(arglist__7512);
return G__7510__delegate(xform,coll,colls);
});
G__7510.cljs$core$IFn$_invoke$arity$variadic = G__7510__delegate;
return G__7510;
})()
;
cljs$core$sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return cljs$core$sequence__1.call(this,xform);
case 2:
return cljs$core$sequence__2.call(this,xform,coll);
default:
var G__7513 = null;
if (arguments.length > 2) {
var G__7514__i = 0, G__7514__a = new Array(arguments.length -  2);
while (G__7514__i < G__7514__a.length) {G__7514__a[G__7514__i] = arguments[G__7514__i + 2]; ++G__7514__i;}
G__7513 = new cljs.core.IndexedSeq(G__7514__a,0);
}
return cljs$core$sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__7513);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$sequence.cljs$lang$maxFixedArity = 2;
cljs$core$sequence.cljs$lang$applyTo = cljs$core$sequence__3.cljs$lang$applyTo;
cljs$core$sequence.cljs$core$IFn$_invoke$arity$1 = cljs$core$sequence__1;
cljs$core$sequence.cljs$core$IFn$_invoke$arity$2 = cljs$core$sequence__2;
cljs$core$sequence.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$sequence;
})()
;
/**
 * Returns true if (pred x) is logical true for every x in coll, else
 * false.
 */
cljs.core.every_QMARK_ = (function cljs$core$every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__7516 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__7516) : pred.call(null,G__7516));
})())){
var G__7517 = pred;
var G__7518 = cljs.core.next(coll);
pred = G__7517;
coll = G__7518;
continue;
} else {
return false;

}
}
break;
}
});
/**
 * Returns false if (pred x) is logical true for every x in
 * coll, else true.
 */
cljs.core.not_every_QMARK_ = (function cljs$core$not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
 * Returns the first logical true value of (pred x) for any x in coll,
 * else nil.  One common idiom is to use a set as pred, for example
 * this will return :fred if :fred is in the sequence, otherwise nil:
 * (some #{:fred} coll)
 */
cljs.core.some = (function cljs$core$some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3767__auto__ = (function (){var G__7522 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__7522) : pred.call(null,G__7522));
})();
if(cljs.core.truth_(or__3767__auto__)){
return or__3767__auto__;
} else {
var G__7523 = pred;
var G__7524 = cljs.core.next(coll);
pred = G__7523;
coll = G__7524;
continue;
}
} else {
return null;
}
break;
}
});
/**
 * Returns false if (pred x) is logical true for any x in coll,
 * else true.
 */
cljs.core.not_any_QMARK_ = (function cljs$core$not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
 * Returns true if n is even, throws an exception if n is not an integer
 */
cljs.core.even_QMARK_ = (function cljs$core$even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
 * Returns true if n is odd, throws an exception if n is not an integer
 */
cljs.core.odd_QMARK_ = (function cljs$core$odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
 * Takes a fn f and returns a fn that takes the same arguments as f,
 * has the same effects, if any, and returns the opposite truth value.
 */
cljs.core.complement = (function cljs$core$complement(f){
return (function() {
var G__7531 = null;
var G__7531__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__7531__1 = (function (x){
return cljs.core.not((function (){var G__7528 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7528) : f.call(null,G__7528));
})());
});
var G__7531__2 = (function (x,y){
return cljs.core.not((function (){var G__7529 = x;
var G__7530 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7529,G__7530) : f.call(null,G__7529,G__7530));
})());
});
var G__7531__3 = (function() { 
var G__7532__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__7532 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__7533__i = 0, G__7533__a = new Array(arguments.length -  2);
while (G__7533__i < G__7533__a.length) {G__7533__a[G__7533__i] = arguments[G__7533__i + 2]; ++G__7533__i;}
  zs = new cljs.core.IndexedSeq(G__7533__a,0);
} 
return G__7532__delegate.call(this,x,y,zs);};
G__7532.cljs$lang$maxFixedArity = 2;
G__7532.cljs$lang$applyTo = (function (arglist__7534){
var x = cljs.core.first(arglist__7534);
arglist__7534 = cljs.core.next(arglist__7534);
var y = cljs.core.first(arglist__7534);
var zs = cljs.core.rest(arglist__7534);
return G__7532__delegate(x,y,zs);
});
G__7532.cljs$core$IFn$_invoke$arity$variadic = G__7532__delegate;
return G__7532;
})()
;
G__7531 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__7531__0.call(this);
case 1:
return G__7531__1.call(this,x);
case 2:
return G__7531__2.call(this,x,y);
default:
var G__7535 = null;
if (arguments.length > 2) {
var G__7536__i = 0, G__7536__a = new Array(arguments.length -  2);
while (G__7536__i < G__7536__a.length) {G__7536__a[G__7536__i] = arguments[G__7536__i + 2]; ++G__7536__i;}
G__7535 = new cljs.core.IndexedSeq(G__7536__a,0);
}
return G__7531__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7535);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7531.cljs$lang$maxFixedArity = 2;
G__7531.cljs$lang$applyTo = G__7531__3.cljs$lang$applyTo;
G__7531.cljs$core$IFn$_invoke$arity$0 = G__7531__0;
G__7531.cljs$core$IFn$_invoke$arity$1 = G__7531__1;
G__7531.cljs$core$IFn$_invoke$arity$2 = G__7531__2;
G__7531.cljs$core$IFn$_invoke$arity$variadic = G__7531__3.cljs$core$IFn$_invoke$arity$variadic;
return G__7531;
})()
});
/**
 * Returns a function that takes any number of arguments and returns x.
 */
cljs.core.constantly = (function cljs$core$constantly(x){
return (function() { 
var G__7537__delegate = function (args){
return x;
};
var G__7537 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__7538__i = 0, G__7538__a = new Array(arguments.length -  0);
while (G__7538__i < G__7538__a.length) {G__7538__a[G__7538__i] = arguments[G__7538__i + 0]; ++G__7538__i;}
  args = new cljs.core.IndexedSeq(G__7538__a,0);
} 
return G__7537__delegate.call(this,args);};
G__7537.cljs$lang$maxFixedArity = 0;
G__7537.cljs$lang$applyTo = (function (arglist__7539){
var args = cljs.core.seq(arglist__7539);
return G__7537__delegate(args);
});
G__7537.cljs$core$IFn$_invoke$arity$variadic = G__7537__delegate;
return G__7537;
})()
;
});
/**
 * Takes a set of functions and returns a fn that is the composition
 * of those fns.  The returned fn takes a variable number of args,
 * applies the rightmost of fns to the args, the next
 * fn (right-to-left) to the result, etc.
 * @param {...*} var_args
 */
cljs.core.comp = (function() {
var cljs$core$comp = null;
var cljs$core$comp__0 = (function (){
return cljs.core.identity;
});
var cljs$core$comp__1 = (function (f){
return f;
});
var cljs$core$comp__2 = (function (f,g){
return (function() {
var G__7594 = null;
var G__7594__0 = (function (){
var G__7567 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7567) : f.call(null,G__7567));
});
var G__7594__1 = (function (x){
var G__7568 = (function (){var G__7569 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7569) : g.call(null,G__7569));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7568) : f.call(null,G__7568));
});
var G__7594__2 = (function (x,y){
var G__7570 = (function (){var G__7571 = x;
var G__7572 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__7571,G__7572) : g.call(null,G__7571,G__7572));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7570) : f.call(null,G__7570));
});
var G__7594__3 = (function (x,y,z){
var G__7573 = (function (){var G__7574 = x;
var G__7575 = y;
var G__7576 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__7574,G__7575,G__7576) : g.call(null,G__7574,G__7575,G__7576));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7573) : f.call(null,G__7573));
});
var G__7594__4 = (function() { 
var G__7595__delegate = function (x,y,z,args){
var G__7577 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7577) : f.call(null,G__7577));
};
var G__7595 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7596__i = 0, G__7596__a = new Array(arguments.length -  3);
while (G__7596__i < G__7596__a.length) {G__7596__a[G__7596__i] = arguments[G__7596__i + 3]; ++G__7596__i;}
  args = new cljs.core.IndexedSeq(G__7596__a,0);
} 
return G__7595__delegate.call(this,x,y,z,args);};
G__7595.cljs$lang$maxFixedArity = 3;
G__7595.cljs$lang$applyTo = (function (arglist__7597){
var x = cljs.core.first(arglist__7597);
arglist__7597 = cljs.core.next(arglist__7597);
var y = cljs.core.first(arglist__7597);
arglist__7597 = cljs.core.next(arglist__7597);
var z = cljs.core.first(arglist__7597);
var args = cljs.core.rest(arglist__7597);
return G__7595__delegate(x,y,z,args);
});
G__7595.cljs$core$IFn$_invoke$arity$variadic = G__7595__delegate;
return G__7595;
})()
;
G__7594 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__7594__0.call(this);
case 1:
return G__7594__1.call(this,x);
case 2:
return G__7594__2.call(this,x,y);
case 3:
return G__7594__3.call(this,x,y,z);
default:
var G__7598 = null;
if (arguments.length > 3) {
var G__7599__i = 0, G__7599__a = new Array(arguments.length -  3);
while (G__7599__i < G__7599__a.length) {G__7599__a[G__7599__i] = arguments[G__7599__i + 3]; ++G__7599__i;}
G__7598 = new cljs.core.IndexedSeq(G__7599__a,0);
}
return G__7594__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7598);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7594.cljs$lang$maxFixedArity = 3;
G__7594.cljs$lang$applyTo = G__7594__4.cljs$lang$applyTo;
G__7594.cljs$core$IFn$_invoke$arity$0 = G__7594__0;
G__7594.cljs$core$IFn$_invoke$arity$1 = G__7594__1;
G__7594.cljs$core$IFn$_invoke$arity$2 = G__7594__2;
G__7594.cljs$core$IFn$_invoke$arity$3 = G__7594__3;
G__7594.cljs$core$IFn$_invoke$arity$variadic = G__7594__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7594;
})()
});
var cljs$core$comp__3 = (function (f,g,h){
return (function() {
var G__7600 = null;
var G__7600__0 = (function (){
var G__7578 = (function (){var G__7579 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7579) : g.call(null,G__7579));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7578) : f.call(null,G__7578));
});
var G__7600__1 = (function (x){
var G__7580 = (function (){var G__7581 = (function (){var G__7582 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__7582) : h.call(null,G__7582));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7581) : g.call(null,G__7581));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7580) : f.call(null,G__7580));
});
var G__7600__2 = (function (x,y){
var G__7583 = (function (){var G__7584 = (function (){var G__7585 = x;
var G__7586 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__7585,G__7586) : h.call(null,G__7585,G__7586));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7584) : g.call(null,G__7584));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7583) : f.call(null,G__7583));
});
var G__7600__3 = (function (x,y,z){
var G__7587 = (function (){var G__7588 = (function (){var G__7589 = x;
var G__7590 = y;
var G__7591 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__7589,G__7590,G__7591) : h.call(null,G__7589,G__7590,G__7591));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7588) : g.call(null,G__7588));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7587) : f.call(null,G__7587));
});
var G__7600__4 = (function() { 
var G__7601__delegate = function (x,y,z,args){
var G__7592 = (function (){var G__7593 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7593) : g.call(null,G__7593));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7592) : f.call(null,G__7592));
};
var G__7601 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7602__i = 0, G__7602__a = new Array(arguments.length -  3);
while (G__7602__i < G__7602__a.length) {G__7602__a[G__7602__i] = arguments[G__7602__i + 3]; ++G__7602__i;}
  args = new cljs.core.IndexedSeq(G__7602__a,0);
} 
return G__7601__delegate.call(this,x,y,z,args);};
G__7601.cljs$lang$maxFixedArity = 3;
G__7601.cljs$lang$applyTo = (function (arglist__7603){
var x = cljs.core.first(arglist__7603);
arglist__7603 = cljs.core.next(arglist__7603);
var y = cljs.core.first(arglist__7603);
arglist__7603 = cljs.core.next(arglist__7603);
var z = cljs.core.first(arglist__7603);
var args = cljs.core.rest(arglist__7603);
return G__7601__delegate(x,y,z,args);
});
G__7601.cljs$core$IFn$_invoke$arity$variadic = G__7601__delegate;
return G__7601;
})()
;
G__7600 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__7600__0.call(this);
case 1:
return G__7600__1.call(this,x);
case 2:
return G__7600__2.call(this,x,y);
case 3:
return G__7600__3.call(this,x,y,z);
default:
var G__7604 = null;
if (arguments.length > 3) {
var G__7605__i = 0, G__7605__a = new Array(arguments.length -  3);
while (G__7605__i < G__7605__a.length) {G__7605__a[G__7605__i] = arguments[G__7605__i + 3]; ++G__7605__i;}
G__7604 = new cljs.core.IndexedSeq(G__7605__a,0);
}
return G__7600__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7604);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7600.cljs$lang$maxFixedArity = 3;
G__7600.cljs$lang$applyTo = G__7600__4.cljs$lang$applyTo;
G__7600.cljs$core$IFn$_invoke$arity$0 = G__7600__0;
G__7600.cljs$core$IFn$_invoke$arity$1 = G__7600__1;
G__7600.cljs$core$IFn$_invoke$arity$2 = G__7600__2;
G__7600.cljs$core$IFn$_invoke$arity$3 = G__7600__3;
G__7600.cljs$core$IFn$_invoke$arity$variadic = G__7600__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7600;
})()
});
var cljs$core$comp__4 = (function() { 
var G__7606__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__7607__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__7608 = cljs.core.first(fs__$2).call(null,ret);
var G__7609 = cljs.core.next(fs__$2);
ret = G__7608;
fs__$2 = G__7609;
continue;
} else {
return ret;
}
break;
}
};
var G__7607 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__7610__i = 0, G__7610__a = new Array(arguments.length -  0);
while (G__7610__i < G__7610__a.length) {G__7610__a[G__7610__i] = arguments[G__7610__i + 0]; ++G__7610__i;}
  args = new cljs.core.IndexedSeq(G__7610__a,0);
} 
return G__7607__delegate.call(this,args);};
G__7607.cljs$lang$maxFixedArity = 0;
G__7607.cljs$lang$applyTo = (function (arglist__7611){
var args = cljs.core.seq(arglist__7611);
return G__7607__delegate(args);
});
G__7607.cljs$core$IFn$_invoke$arity$variadic = G__7607__delegate;
return G__7607;
})()
;
;})(fs__$1))
};
var G__7606 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__7612__i = 0, G__7612__a = new Array(arguments.length -  3);
while (G__7612__i < G__7612__a.length) {G__7612__a[G__7612__i] = arguments[G__7612__i + 3]; ++G__7612__i;}
  fs = new cljs.core.IndexedSeq(G__7612__a,0);
} 
return G__7606__delegate.call(this,f1,f2,f3,fs);};
G__7606.cljs$lang$maxFixedArity = 3;
G__7606.cljs$lang$applyTo = (function (arglist__7613){
var f1 = cljs.core.first(arglist__7613);
arglist__7613 = cljs.core.next(arglist__7613);
var f2 = cljs.core.first(arglist__7613);
arglist__7613 = cljs.core.next(arglist__7613);
var f3 = cljs.core.first(arglist__7613);
var fs = cljs.core.rest(arglist__7613);
return G__7606__delegate(f1,f2,f3,fs);
});
G__7606.cljs$core$IFn$_invoke$arity$variadic = G__7606__delegate;
return G__7606;
})()
;
cljs$core$comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return cljs$core$comp__0.call(this);
case 1:
return cljs$core$comp__1.call(this,f1);
case 2:
return cljs$core$comp__2.call(this,f1,f2);
case 3:
return cljs$core$comp__3.call(this,f1,f2,f3);
default:
var G__7614 = null;
if (arguments.length > 3) {
var G__7615__i = 0, G__7615__a = new Array(arguments.length -  3);
while (G__7615__i < G__7615__a.length) {G__7615__a[G__7615__i] = arguments[G__7615__i + 3]; ++G__7615__i;}
G__7614 = new cljs.core.IndexedSeq(G__7615__a,0);
}
return cljs$core$comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__7614);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$comp.cljs$lang$maxFixedArity = 3;
cljs$core$comp.cljs$lang$applyTo = cljs$core$comp__4.cljs$lang$applyTo;
cljs$core$comp.cljs$core$IFn$_invoke$arity$0 = cljs$core$comp__0;
cljs$core$comp.cljs$core$IFn$_invoke$arity$1 = cljs$core$comp__1;
cljs$core$comp.cljs$core$IFn$_invoke$arity$2 = cljs$core$comp__2;
cljs$core$comp.cljs$core$IFn$_invoke$arity$3 = cljs$core$comp__3;
cljs$core$comp.cljs$core$IFn$_invoke$arity$variadic = cljs$core$comp__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$comp;
})()
;
/**
 * Takes a function f and fewer than the normal arguments to f, and
 * returns a fn that takes a variable number of additional args. When
 * called, the returned function calls f with args + additional args.
 * @param {...*} var_args
 */
cljs.core.partial = (function() {
var cljs$core$partial = null;
var cljs$core$partial__1 = (function (f){
return f;
});
var cljs$core$partial__2 = (function (f,arg1){
return (function() {
var G__7700 = null;
var G__7700__0 = (function (){
var G__7658 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7658) : f.call(null,G__7658));
});
var G__7700__1 = (function (x){
var G__7659 = arg1;
var G__7660 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7659,G__7660) : f.call(null,G__7659,G__7660));
});
var G__7700__2 = (function (x,y){
var G__7661 = arg1;
var G__7662 = x;
var G__7663 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7661,G__7662,G__7663) : f.call(null,G__7661,G__7662,G__7663));
});
var G__7700__3 = (function (x,y,z){
var G__7664 = arg1;
var G__7665 = x;
var G__7666 = y;
var G__7667 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7664,G__7665,G__7666,G__7667) : f.call(null,G__7664,G__7665,G__7666,G__7667));
});
var G__7700__4 = (function() { 
var G__7701__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__7701 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7702__i = 0, G__7702__a = new Array(arguments.length -  3);
while (G__7702__i < G__7702__a.length) {G__7702__a[G__7702__i] = arguments[G__7702__i + 3]; ++G__7702__i;}
  args = new cljs.core.IndexedSeq(G__7702__a,0);
} 
return G__7701__delegate.call(this,x,y,z,args);};
G__7701.cljs$lang$maxFixedArity = 3;
G__7701.cljs$lang$applyTo = (function (arglist__7703){
var x = cljs.core.first(arglist__7703);
arglist__7703 = cljs.core.next(arglist__7703);
var y = cljs.core.first(arglist__7703);
arglist__7703 = cljs.core.next(arglist__7703);
var z = cljs.core.first(arglist__7703);
var args = cljs.core.rest(arglist__7703);
return G__7701__delegate(x,y,z,args);
});
G__7701.cljs$core$IFn$_invoke$arity$variadic = G__7701__delegate;
return G__7701;
})()
;
G__7700 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__7700__0.call(this);
case 1:
return G__7700__1.call(this,x);
case 2:
return G__7700__2.call(this,x,y);
case 3:
return G__7700__3.call(this,x,y,z);
default:
var G__7704 = null;
if (arguments.length > 3) {
var G__7705__i = 0, G__7705__a = new Array(arguments.length -  3);
while (G__7705__i < G__7705__a.length) {G__7705__a[G__7705__i] = arguments[G__7705__i + 3]; ++G__7705__i;}
G__7704 = new cljs.core.IndexedSeq(G__7705__a,0);
}
return G__7700__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7704);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7700.cljs$lang$maxFixedArity = 3;
G__7700.cljs$lang$applyTo = G__7700__4.cljs$lang$applyTo;
G__7700.cljs$core$IFn$_invoke$arity$0 = G__7700__0;
G__7700.cljs$core$IFn$_invoke$arity$1 = G__7700__1;
G__7700.cljs$core$IFn$_invoke$arity$2 = G__7700__2;
G__7700.cljs$core$IFn$_invoke$arity$3 = G__7700__3;
G__7700.cljs$core$IFn$_invoke$arity$variadic = G__7700__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7700;
})()
});
var cljs$core$partial__3 = (function (f,arg1,arg2){
return (function() {
var G__7706 = null;
var G__7706__0 = (function (){
var G__7668 = arg1;
var G__7669 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7668,G__7669) : f.call(null,G__7668,G__7669));
});
var G__7706__1 = (function (x){
var G__7670 = arg1;
var G__7671 = arg2;
var G__7672 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7670,G__7671,G__7672) : f.call(null,G__7670,G__7671,G__7672));
});
var G__7706__2 = (function (x,y){
var G__7673 = arg1;
var G__7674 = arg2;
var G__7675 = x;
var G__7676 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7673,G__7674,G__7675,G__7676) : f.call(null,G__7673,G__7674,G__7675,G__7676));
});
var G__7706__3 = (function (x,y,z){
var G__7677 = arg1;
var G__7678 = arg2;
var G__7679 = x;
var G__7680 = y;
var G__7681 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7677,G__7678,G__7679,G__7680,G__7681) : f.call(null,G__7677,G__7678,G__7679,G__7680,G__7681));
});
var G__7706__4 = (function() { 
var G__7707__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__7707 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7708__i = 0, G__7708__a = new Array(arguments.length -  3);
while (G__7708__i < G__7708__a.length) {G__7708__a[G__7708__i] = arguments[G__7708__i + 3]; ++G__7708__i;}
  args = new cljs.core.IndexedSeq(G__7708__a,0);
} 
return G__7707__delegate.call(this,x,y,z,args);};
G__7707.cljs$lang$maxFixedArity = 3;
G__7707.cljs$lang$applyTo = (function (arglist__7709){
var x = cljs.core.first(arglist__7709);
arglist__7709 = cljs.core.next(arglist__7709);
var y = cljs.core.first(arglist__7709);
arglist__7709 = cljs.core.next(arglist__7709);
var z = cljs.core.first(arglist__7709);
var args = cljs.core.rest(arglist__7709);
return G__7707__delegate(x,y,z,args);
});
G__7707.cljs$core$IFn$_invoke$arity$variadic = G__7707__delegate;
return G__7707;
})()
;
G__7706 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__7706__0.call(this);
case 1:
return G__7706__1.call(this,x);
case 2:
return G__7706__2.call(this,x,y);
case 3:
return G__7706__3.call(this,x,y,z);
default:
var G__7710 = null;
if (arguments.length > 3) {
var G__7711__i = 0, G__7711__a = new Array(arguments.length -  3);
while (G__7711__i < G__7711__a.length) {G__7711__a[G__7711__i] = arguments[G__7711__i + 3]; ++G__7711__i;}
G__7710 = new cljs.core.IndexedSeq(G__7711__a,0);
}
return G__7706__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7710);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7706.cljs$lang$maxFixedArity = 3;
G__7706.cljs$lang$applyTo = G__7706__4.cljs$lang$applyTo;
G__7706.cljs$core$IFn$_invoke$arity$0 = G__7706__0;
G__7706.cljs$core$IFn$_invoke$arity$1 = G__7706__1;
G__7706.cljs$core$IFn$_invoke$arity$2 = G__7706__2;
G__7706.cljs$core$IFn$_invoke$arity$3 = G__7706__3;
G__7706.cljs$core$IFn$_invoke$arity$variadic = G__7706__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7706;
})()
});
var cljs$core$partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__7712 = null;
var G__7712__0 = (function (){
var G__7682 = arg1;
var G__7683 = arg2;
var G__7684 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7682,G__7683,G__7684) : f.call(null,G__7682,G__7683,G__7684));
});
var G__7712__1 = (function (x){
var G__7685 = arg1;
var G__7686 = arg2;
var G__7687 = arg3;
var G__7688 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7685,G__7686,G__7687,G__7688) : f.call(null,G__7685,G__7686,G__7687,G__7688));
});
var G__7712__2 = (function (x,y){
var G__7689 = arg1;
var G__7690 = arg2;
var G__7691 = arg3;
var G__7692 = x;
var G__7693 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7689,G__7690,G__7691,G__7692,G__7693) : f.call(null,G__7689,G__7690,G__7691,G__7692,G__7693));
});
var G__7712__3 = (function (x,y,z){
var G__7694 = arg1;
var G__7695 = arg2;
var G__7696 = arg3;
var G__7697 = x;
var G__7698 = y;
var G__7699 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__7694,G__7695,G__7696,G__7697,G__7698,G__7699) : f.call(null,G__7694,G__7695,G__7696,G__7697,G__7698,G__7699));
});
var G__7712__4 = (function() { 
var G__7713__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__7713 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7714__i = 0, G__7714__a = new Array(arguments.length -  3);
while (G__7714__i < G__7714__a.length) {G__7714__a[G__7714__i] = arguments[G__7714__i + 3]; ++G__7714__i;}
  args = new cljs.core.IndexedSeq(G__7714__a,0);
} 
return G__7713__delegate.call(this,x,y,z,args);};
G__7713.cljs$lang$maxFixedArity = 3;
G__7713.cljs$lang$applyTo = (function (arglist__7715){
var x = cljs.core.first(arglist__7715);
arglist__7715 = cljs.core.next(arglist__7715);
var y = cljs.core.first(arglist__7715);
arglist__7715 = cljs.core.next(arglist__7715);
var z = cljs.core.first(arglist__7715);
var args = cljs.core.rest(arglist__7715);
return G__7713__delegate(x,y,z,args);
});
G__7713.cljs$core$IFn$_invoke$arity$variadic = G__7713__delegate;
return G__7713;
})()
;
G__7712 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__7712__0.call(this);
case 1:
return G__7712__1.call(this,x);
case 2:
return G__7712__2.call(this,x,y);
case 3:
return G__7712__3.call(this,x,y,z);
default:
var G__7716 = null;
if (arguments.length > 3) {
var G__7717__i = 0, G__7717__a = new Array(arguments.length -  3);
while (G__7717__i < G__7717__a.length) {G__7717__a[G__7717__i] = arguments[G__7717__i + 3]; ++G__7717__i;}
G__7716 = new cljs.core.IndexedSeq(G__7717__a,0);
}
return G__7712__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7716);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7712.cljs$lang$maxFixedArity = 3;
G__7712.cljs$lang$applyTo = G__7712__4.cljs$lang$applyTo;
G__7712.cljs$core$IFn$_invoke$arity$0 = G__7712__0;
G__7712.cljs$core$IFn$_invoke$arity$1 = G__7712__1;
G__7712.cljs$core$IFn$_invoke$arity$2 = G__7712__2;
G__7712.cljs$core$IFn$_invoke$arity$3 = G__7712__3;
G__7712.cljs$core$IFn$_invoke$arity$variadic = G__7712__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7712;
})()
});
var cljs$core$partial__5 = (function() { 
var G__7718__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__7719__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__7719 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__7720__i = 0, G__7720__a = new Array(arguments.length -  0);
while (G__7720__i < G__7720__a.length) {G__7720__a[G__7720__i] = arguments[G__7720__i + 0]; ++G__7720__i;}
  args = new cljs.core.IndexedSeq(G__7720__a,0);
} 
return G__7719__delegate.call(this,args);};
G__7719.cljs$lang$maxFixedArity = 0;
G__7719.cljs$lang$applyTo = (function (arglist__7721){
var args = cljs.core.seq(arglist__7721);
return G__7719__delegate(args);
});
G__7719.cljs$core$IFn$_invoke$arity$variadic = G__7719__delegate;
return G__7719;
})()
;
};
var G__7718 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__7722__i = 0, G__7722__a = new Array(arguments.length -  4);
while (G__7722__i < G__7722__a.length) {G__7722__a[G__7722__i] = arguments[G__7722__i + 4]; ++G__7722__i;}
  more = new cljs.core.IndexedSeq(G__7722__a,0);
} 
return G__7718__delegate.call(this,f,arg1,arg2,arg3,more);};
G__7718.cljs$lang$maxFixedArity = 4;
G__7718.cljs$lang$applyTo = (function (arglist__7723){
var f = cljs.core.first(arglist__7723);
arglist__7723 = cljs.core.next(arglist__7723);
var arg1 = cljs.core.first(arglist__7723);
arglist__7723 = cljs.core.next(arglist__7723);
var arg2 = cljs.core.first(arglist__7723);
arglist__7723 = cljs.core.next(arglist__7723);
var arg3 = cljs.core.first(arglist__7723);
var more = cljs.core.rest(arglist__7723);
return G__7718__delegate(f,arg1,arg2,arg3,more);
});
G__7718.cljs$core$IFn$_invoke$arity$variadic = G__7718__delegate;
return G__7718;
})()
;
cljs$core$partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$partial__1.call(this,f);
case 2:
return cljs$core$partial__2.call(this,f,arg1);
case 3:
return cljs$core$partial__3.call(this,f,arg1,arg2);
case 4:
return cljs$core$partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__7724 = null;
if (arguments.length > 4) {
var G__7725__i = 0, G__7725__a = new Array(arguments.length -  4);
while (G__7725__i < G__7725__a.length) {G__7725__a[G__7725__i] = arguments[G__7725__i + 4]; ++G__7725__i;}
G__7724 = new cljs.core.IndexedSeq(G__7725__a,0);
}
return cljs$core$partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__7724);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partial.cljs$lang$maxFixedArity = 4;
cljs$core$partial.cljs$lang$applyTo = cljs$core$partial__5.cljs$lang$applyTo;
cljs$core$partial.cljs$core$IFn$_invoke$arity$1 = cljs$core$partial__1;
cljs$core$partial.cljs$core$IFn$_invoke$arity$2 = cljs$core$partial__2;
cljs$core$partial.cljs$core$IFn$_invoke$arity$3 = cljs$core$partial__3;
cljs$core$partial.cljs$core$IFn$_invoke$arity$4 = cljs$core$partial__4;
cljs$core$partial.cljs$core$IFn$_invoke$arity$variadic = cljs$core$partial__5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$partial;
})()
;
/**
 * Takes a function f, and returns a function that calls f, replacing
 * a nil first argument to f with the supplied value x. Higher arity
 * versions can replace arguments in the second and third
 * positions (y, z). Note that the function f can take any number of
 * arguments, not just the one(s) being nil-patched.
 */
cljs.core.fnil = (function() {
var cljs$core$fnil = null;
var cljs$core$fnil__2 = (function (f,x){
return (function() {
var G__7758 = null;
var G__7758__1 = (function (a){
var G__7742 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7742) : f.call(null,G__7742));
});
var G__7758__2 = (function (a,b){
var G__7743 = (((a == null))?x:a);
var G__7744 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7743,G__7744) : f.call(null,G__7743,G__7744));
});
var G__7758__3 = (function (a,b,c){
var G__7745 = (((a == null))?x:a);
var G__7746 = b;
var G__7747 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7745,G__7746,G__7747) : f.call(null,G__7745,G__7746,G__7747));
});
var G__7758__4 = (function() { 
var G__7759__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__7759 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__7760__i = 0, G__7760__a = new Array(arguments.length -  3);
while (G__7760__i < G__7760__a.length) {G__7760__a[G__7760__i] = arguments[G__7760__i + 3]; ++G__7760__i;}
  ds = new cljs.core.IndexedSeq(G__7760__a,0);
} 
return G__7759__delegate.call(this,a,b,c,ds);};
G__7759.cljs$lang$maxFixedArity = 3;
G__7759.cljs$lang$applyTo = (function (arglist__7761){
var a = cljs.core.first(arglist__7761);
arglist__7761 = cljs.core.next(arglist__7761);
var b = cljs.core.first(arglist__7761);
arglist__7761 = cljs.core.next(arglist__7761);
var c = cljs.core.first(arglist__7761);
var ds = cljs.core.rest(arglist__7761);
return G__7759__delegate(a,b,c,ds);
});
G__7759.cljs$core$IFn$_invoke$arity$variadic = G__7759__delegate;
return G__7759;
})()
;
G__7758 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__7758__1.call(this,a);
case 2:
return G__7758__2.call(this,a,b);
case 3:
return G__7758__3.call(this,a,b,c);
default:
var G__7762 = null;
if (arguments.length > 3) {
var G__7763__i = 0, G__7763__a = new Array(arguments.length -  3);
while (G__7763__i < G__7763__a.length) {G__7763__a[G__7763__i] = arguments[G__7763__i + 3]; ++G__7763__i;}
G__7762 = new cljs.core.IndexedSeq(G__7763__a,0);
}
return G__7758__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__7762);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7758.cljs$lang$maxFixedArity = 3;
G__7758.cljs$lang$applyTo = G__7758__4.cljs$lang$applyTo;
G__7758.cljs$core$IFn$_invoke$arity$1 = G__7758__1;
G__7758.cljs$core$IFn$_invoke$arity$2 = G__7758__2;
G__7758.cljs$core$IFn$_invoke$arity$3 = G__7758__3;
G__7758.cljs$core$IFn$_invoke$arity$variadic = G__7758__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7758;
})()
});
var cljs$core$fnil__3 = (function (f,x,y){
return (function() {
var G__7764 = null;
var G__7764__2 = (function (a,b){
var G__7748 = (((a == null))?x:a);
var G__7749 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7748,G__7749) : f.call(null,G__7748,G__7749));
});
var G__7764__3 = (function (a,b,c){
var G__7750 = (((a == null))?x:a);
var G__7751 = (((b == null))?y:b);
var G__7752 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7750,G__7751,G__7752) : f.call(null,G__7750,G__7751,G__7752));
});
var G__7764__4 = (function() { 
var G__7765__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__7765 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__7766__i = 0, G__7766__a = new Array(arguments.length -  3);
while (G__7766__i < G__7766__a.length) {G__7766__a[G__7766__i] = arguments[G__7766__i + 3]; ++G__7766__i;}
  ds = new cljs.core.IndexedSeq(G__7766__a,0);
} 
return G__7765__delegate.call(this,a,b,c,ds);};
G__7765.cljs$lang$maxFixedArity = 3;
G__7765.cljs$lang$applyTo = (function (arglist__7767){
var a = cljs.core.first(arglist__7767);
arglist__7767 = cljs.core.next(arglist__7767);
var b = cljs.core.first(arglist__7767);
arglist__7767 = cljs.core.next(arglist__7767);
var c = cljs.core.first(arglist__7767);
var ds = cljs.core.rest(arglist__7767);
return G__7765__delegate(a,b,c,ds);
});
G__7765.cljs$core$IFn$_invoke$arity$variadic = G__7765__delegate;
return G__7765;
})()
;
G__7764 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__7764__2.call(this,a,b);
case 3:
return G__7764__3.call(this,a,b,c);
default:
var G__7768 = null;
if (arguments.length > 3) {
var G__7769__i = 0, G__7769__a = new Array(arguments.length -  3);
while (G__7769__i < G__7769__a.length) {G__7769__a[G__7769__i] = arguments[G__7769__i + 3]; ++G__7769__i;}
G__7768 = new cljs.core.IndexedSeq(G__7769__a,0);
}
return G__7764__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__7768);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7764.cljs$lang$maxFixedArity = 3;
G__7764.cljs$lang$applyTo = G__7764__4.cljs$lang$applyTo;
G__7764.cljs$core$IFn$_invoke$arity$2 = G__7764__2;
G__7764.cljs$core$IFn$_invoke$arity$3 = G__7764__3;
G__7764.cljs$core$IFn$_invoke$arity$variadic = G__7764__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7764;
})()
});
var cljs$core$fnil__4 = (function (f,x,y,z){
return (function() {
var G__7770 = null;
var G__7770__2 = (function (a,b){
var G__7753 = (((a == null))?x:a);
var G__7754 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7753,G__7754) : f.call(null,G__7753,G__7754));
});
var G__7770__3 = (function (a,b,c){
var G__7755 = (((a == null))?x:a);
var G__7756 = (((b == null))?y:b);
var G__7757 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7755,G__7756,G__7757) : f.call(null,G__7755,G__7756,G__7757));
});
var G__7770__4 = (function() { 
var G__7771__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__7771 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__7772__i = 0, G__7772__a = new Array(arguments.length -  3);
while (G__7772__i < G__7772__a.length) {G__7772__a[G__7772__i] = arguments[G__7772__i + 3]; ++G__7772__i;}
  ds = new cljs.core.IndexedSeq(G__7772__a,0);
} 
return G__7771__delegate.call(this,a,b,c,ds);};
G__7771.cljs$lang$maxFixedArity = 3;
G__7771.cljs$lang$applyTo = (function (arglist__7773){
var a = cljs.core.first(arglist__7773);
arglist__7773 = cljs.core.next(arglist__7773);
var b = cljs.core.first(arglist__7773);
arglist__7773 = cljs.core.next(arglist__7773);
var c = cljs.core.first(arglist__7773);
var ds = cljs.core.rest(arglist__7773);
return G__7771__delegate(a,b,c,ds);
});
G__7771.cljs$core$IFn$_invoke$arity$variadic = G__7771__delegate;
return G__7771;
})()
;
G__7770 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__7770__2.call(this,a,b);
case 3:
return G__7770__3.call(this,a,b,c);
default:
var G__7774 = null;
if (arguments.length > 3) {
var G__7775__i = 0, G__7775__a = new Array(arguments.length -  3);
while (G__7775__i < G__7775__a.length) {G__7775__a[G__7775__i] = arguments[G__7775__i + 3]; ++G__7775__i;}
G__7774 = new cljs.core.IndexedSeq(G__7775__a,0);
}
return G__7770__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__7774);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7770.cljs$lang$maxFixedArity = 3;
G__7770.cljs$lang$applyTo = G__7770__4.cljs$lang$applyTo;
G__7770.cljs$core$IFn$_invoke$arity$2 = G__7770__2;
G__7770.cljs$core$IFn$_invoke$arity$3 = G__7770__3;
G__7770.cljs$core$IFn$_invoke$arity$variadic = G__7770__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7770;
})()
});
cljs$core$fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return cljs$core$fnil__2.call(this,f,x);
case 3:
return cljs$core$fnil__3.call(this,f,x,y);
case 4:
return cljs$core$fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$fnil.cljs$core$IFn$_invoke$arity$2 = cljs$core$fnil__2;
cljs$core$fnil.cljs$core$IFn$_invoke$arity$3 = cljs$core$fnil__3;
cljs$core$fnil.cljs$core$IFn$_invoke$arity$4 = cljs$core$fnil__4;
return cljs$core$fnil;
})()
;
/**
 * Returns a lazy sequence consisting of the result of applying f to 0
 * and the first item of coll, followed by applying f to 1 and the second
 * item in coll, etc, until coll is exhausted. Thus function f should
 * accept 2 arguments, index and item.
 */
cljs.core.map_indexed = (function() {
var cljs$core$map_indexed = null;
var cljs$core$map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__7806 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__7806) : cljs.core.volatile_BANG_.call(null,G__7806));
})();
return ((function (i){
return (function() {
var G__7836 = null;
var G__7836__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__7836__1 = (function (result){
var G__7807 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__7807) : rf.call(null,G__7807));
});
var G__7836__2 = (function (result,input){
var G__7808 = result;
var G__7809 = (function (){var G__7810 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__7811 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7810,G__7811) : f.call(null,G__7810,G__7811));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7808,G__7809) : rf.call(null,G__7808,G__7809));
});
G__7836 = function(result,input){
switch(arguments.length){
case 0:
return G__7836__0.call(this);
case 1:
return G__7836__1.call(this,result);
case 2:
return G__7836__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7836.cljs$core$IFn$_invoke$arity$0 = G__7836__0;
G__7836.cljs$core$IFn$_invoke$arity$1 = G__7836__1;
G__7836.cljs$core$IFn$_invoke$arity$2 = G__7836__2;
return G__7836;
})()
;})(i))
});
});
var cljs$core$map_indexed__2 = (function (f,coll){
var mapi = (function cljs$core$map_indexed_$_mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4652__auto___7837 = size;
var i_7838 = (0);
while(true){
if((i_7838 < n__4652__auto___7837)){
cljs.core.chunk_append(b,(function (){var G__7832 = (idx + i_7838);
var G__7833 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_7838);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7832,G__7833) : f.call(null,G__7832,G__7833));
})());

var G__7839 = (i_7838 + (1));
i_7838 = G__7839;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$map_indexed_$_mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__7834 = idx;
var G__7835 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7834,G__7835) : f.call(null,G__7834,G__7835));
})(),cljs$core$map_indexed_$_mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
cljs$core$map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$map_indexed__1.call(this,f);
case 2:
return cljs$core$map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$map_indexed.cljs$core$IFn$_invoke$arity$1 = cljs$core$map_indexed__1;
cljs$core$map_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$map_indexed__2;
return cljs$core$map_indexed;
})()
;
/**
 * Returns a lazy sequence of the non-nil results of (f item). Note,
 * this means false return values will be included.  f must be free of
 * side-effects.  Returns a transducer when no collection is provided.
 */
cljs.core.keep = (function() {
var cljs$core$keep = null;
var cljs$core$keep__1 = (function (f){
return (function (rf){
return (function() {
var G__7858 = null;
var G__7858__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__7858__1 = (function (result){
var G__7852 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__7852) : rf.call(null,G__7852));
});
var G__7858__2 = (function (result,input){
var v = (function (){var G__7853 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7853) : f.call(null,G__7853));
})();
if((v == null)){
return result;
} else {
var G__7854 = result;
var G__7855 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7854,G__7855) : rf.call(null,G__7854,G__7855));
}
});
G__7858 = function(result,input){
switch(arguments.length){
case 0:
return G__7858__0.call(this);
case 1:
return G__7858__1.call(this,result);
case 2:
return G__7858__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7858.cljs$core$IFn$_invoke$arity$0 = G__7858__0;
G__7858.cljs$core$IFn$_invoke$arity$1 = G__7858__1;
G__7858.cljs$core$IFn$_invoke$arity$2 = G__7858__2;
return G__7858;
})()
});
});
var cljs$core$keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4652__auto___7859 = size;
var i_7860 = (0);
while(true){
if((i_7860 < n__4652__auto___7859)){
var x_7861 = (function (){var G__7856 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_7860);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7856) : f.call(null,G__7856));
})();
if((x_7861 == null)){
} else {
cljs.core.chunk_append(b,x_7861);
}

var G__7862 = (i_7860 + (1));
i_7860 = G__7862;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__7857 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7857) : f.call(null,G__7857));
})();
if((x == null)){
return cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
cljs$core$keep = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$keep__1.call(this,f);
case 2:
return cljs$core$keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$keep.cljs$core$IFn$_invoke$arity$1 = cljs$core$keep__1;
cljs$core$keep.cljs$core$IFn$_invoke$arity$2 = cljs$core$keep__2;
return cljs$core$keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__7863 = this$__$1;
return goog.getUid(G__7863);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__7864 = cljs.core.seq(self__.watches);
var chunk__7865 = null;
var count__7866 = (0);
var i__7867 = (0);
while(true){
if((i__7867 < count__7866)){
var vec__7868 = chunk__7865.cljs$core$IIndexed$_nth$arity$2(null,i__7867);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7868,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7868,(1),null);
var G__7869_7878 = key;
var G__7870_7879 = this$__$1;
var G__7871_7880 = oldval;
var G__7872_7881 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7869_7878,G__7870_7879,G__7871_7880,G__7872_7881) : f.call(null,G__7869_7878,G__7870_7879,G__7871_7880,G__7872_7881));

var G__7882 = seq__7864;
var G__7883 = chunk__7865;
var G__7884 = count__7866;
var G__7885 = (i__7867 + (1));
seq__7864 = G__7882;
chunk__7865 = G__7883;
count__7866 = G__7884;
i__7867 = G__7885;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__7864);
if(temp__4126__auto__){
var seq__7864__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__7864__$1)){
var c__4552__auto__ = cljs.core.chunk_first(seq__7864__$1);
var G__7886 = cljs.core.chunk_rest(seq__7864__$1);
var G__7887 = c__4552__auto__;
var G__7888 = cljs.core.count(c__4552__auto__);
var G__7889 = (0);
seq__7864 = G__7886;
chunk__7865 = G__7887;
count__7866 = G__7888;
i__7867 = G__7889;
continue;
} else {
var vec__7873 = cljs.core.first(seq__7864__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7873,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7873,(1),null);
var G__7874_7890 = key;
var G__7875_7891 = this$__$1;
var G__7876_7892 = oldval;
var G__7877_7893 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7874_7890,G__7875_7891,G__7876_7892,G__7877_7893) : f.call(null,G__7874_7890,G__7875_7891,G__7876_7892,G__7877_7893));

var G__7894 = cljs.core.next(seq__7864__$1);
var G__7895 = null;
var G__7896 = (0);
var G__7897 = (0);
seq__7864 = G__7894;
chunk__7865 = G__7895;
count__7866 = G__7896;
i__7867 = G__7897;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function cljs$core$__GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
 * Creates and returns an Atom with an initial value of x and zero or
 * more options (in any order):
 * 
 * :meta metadata-map
 * 
 * :validator validate-fn
 * 
 * If metadata-map is supplied, it will be come the metadata on the
 * atom. validate-fn must be nil or a side-effect-free fn of one
 * argument, which will be passed the intended new state on any state
 * change. If the new state is unacceptable, the validate-fn should
 * return false or throw an Error.  If either of these error conditions
 * occur, then the value of the atom will not change.
 * @param {...*} var_args
 */
cljs.core.atom = (function() {
var cljs$core$atom = null;
var cljs$core$atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var cljs$core$atom__2 = (function() { 
var G__7901__delegate = function (x,p__7898){
var map__7900 = p__7898;
var map__7900__$1 = ((cljs.core.seq_QMARK_(map__7900))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__7900):map__7900);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7900__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7900__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__7901 = function (x,var_args){
var p__7898 = null;
if (arguments.length > 1) {
var G__7902__i = 0, G__7902__a = new Array(arguments.length -  1);
while (G__7902__i < G__7902__a.length) {G__7902__a[G__7902__i] = arguments[G__7902__i + 1]; ++G__7902__i;}
  p__7898 = new cljs.core.IndexedSeq(G__7902__a,0);
} 
return G__7901__delegate.call(this,x,p__7898);};
G__7901.cljs$lang$maxFixedArity = 1;
G__7901.cljs$lang$applyTo = (function (arglist__7903){
var x = cljs.core.first(arglist__7903);
var p__7898 = cljs.core.rest(arglist__7903);
return G__7901__delegate(x,p__7898);
});
G__7901.cljs$core$IFn$_invoke$arity$variadic = G__7901__delegate;
return G__7901;
})()
;
cljs$core$atom = function(x,var_args){
var p__7898 = var_args;
switch(arguments.length){
case 1:
return cljs$core$atom__1.call(this,x);
default:
var G__7904 = null;
if (arguments.length > 1) {
var G__7905__i = 0, G__7905__a = new Array(arguments.length -  1);
while (G__7905__i < G__7905__a.length) {G__7905__a[G__7905__i] = arguments[G__7905__i + 1]; ++G__7905__i;}
G__7904 = new cljs.core.IndexedSeq(G__7905__a,0);
}
return cljs$core$atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__7904);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$atom.cljs$lang$maxFixedArity = 1;
cljs$core$atom.cljs$lang$applyTo = cljs$core$atom__2.cljs$lang$applyTo;
cljs$core$atom.cljs$core$IFn$_invoke$arity$1 = cljs$core$atom__1;
cljs$core$atom.cljs$core$IFn$_invoke$arity$variadic = cljs$core$atom__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$atom;
})()
;
/**
 * Sets the value of atom to newval without regard for the
 * current value. Returns newval.
 */
cljs.core.reset_BANG_ = (function cljs$core$reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__7908 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__7908) : validate.call(null,G__7908));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__7909 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__7909) : cljs.core.pr_str.call(null,G__7909));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
 * Atomically swaps the value of atom to be:
 * (apply f current-value-of-atom args). Note that f may be called
 * multiple times, and thus should be free of side effects.  Returns
 * the value that was swapped in.
 * @param {...*} var_args
 */
cljs.core.swap_BANG_ = (function() {
var cljs$core$swap_BANG_ = null;
var cljs$core$swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__7916 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7916) : f.call(null,G__7916));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var cljs$core$swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__7917 = a.state;
var G__7918 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7917,G__7918) : f.call(null,G__7917,G__7918));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var cljs$core$swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__7919 = a.state;
var G__7920 = x;
var G__7921 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7919,G__7920,G__7921) : f.call(null,G__7919,G__7920,G__7921));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var cljs$core$swap_BANG___5 = (function() { 
var G__7922__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__7922 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__7923__i = 0, G__7923__a = new Array(arguments.length -  4);
while (G__7923__i < G__7923__a.length) {G__7923__a[G__7923__i] = arguments[G__7923__i + 4]; ++G__7923__i;}
  more = new cljs.core.IndexedSeq(G__7923__a,0);
} 
return G__7922__delegate.call(this,a,f,x,y,more);};
G__7922.cljs$lang$maxFixedArity = 4;
G__7922.cljs$lang$applyTo = (function (arglist__7924){
var a = cljs.core.first(arglist__7924);
arglist__7924 = cljs.core.next(arglist__7924);
var f = cljs.core.first(arglist__7924);
arglist__7924 = cljs.core.next(arglist__7924);
var x = cljs.core.first(arglist__7924);
arglist__7924 = cljs.core.next(arglist__7924);
var y = cljs.core.first(arglist__7924);
var more = cljs.core.rest(arglist__7924);
return G__7922__delegate(a,f,x,y,more);
});
G__7922.cljs$core$IFn$_invoke$arity$variadic = G__7922__delegate;
return G__7922;
})()
;
cljs$core$swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$swap_BANG___2.call(this,a,f);
case 3:
return cljs$core$swap_BANG___3.call(this,a,f,x);
case 4:
return cljs$core$swap_BANG___4.call(this,a,f,x,y);
default:
var G__7925 = null;
if (arguments.length > 4) {
var G__7926__i = 0, G__7926__a = new Array(arguments.length -  4);
while (G__7926__i < G__7926__a.length) {G__7926__a[G__7926__i] = arguments[G__7926__i + 4]; ++G__7926__i;}
G__7925 = new cljs.core.IndexedSeq(G__7926__a,0);
}
return cljs$core$swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__7925);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs$core$swap_BANG_.cljs$lang$applyTo = cljs$core$swap_BANG___5.cljs$lang$applyTo;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$swap_BANG___2;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$swap_BANG___3;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$4 = cljs$core$swap_BANG___4;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$swap_BANG_;
})()
;
/**
 * Atomically sets the value of atom to newval if and only if the
 * current value of the atom is equal to oldval. Returns true if
 * set happened, else false.
 */
cljs.core.compare_and_set_BANG_ = (function cljs$core$compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
 * Sets the validator-fn for an atom. validator-fn must be nil or a
 * side-effect-free fn of one argument, which will be passed the intended
 * new state on any state change. If the new state is unacceptable, the
 * validator-fn should return false or throw an Error. If the current state
 * is not acceptable to the new validator, an Error will be thrown and the
 * validator will not be changed.
 */
cljs.core.set_validator_BANG_ = (function cljs$core$set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
 * Gets the validator-fn for a var/ref/agent/atom.
 */
cljs.core.get_validator = (function cljs$core$get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function cljs$core$__GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
 * Creates and returns a Volatile with an initial value of val.
 */
cljs.core.volatile_BANG_ = (function cljs$core$volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
 * Returns true if x is a volatile.
 */
cljs.core.volatile_QMARK_ = (function cljs$core$volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
 * Sets the value of volatile to newval without regard for the
 * current value. Returns newval.
 */
cljs.core.vreset_BANG_ = (function cljs$core$vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
 * Returns a lazy sequence of the non-nil results of (f index item). Note,
 * this means false return values will be included.  f must be free of
 * side-effects.  Returns a stateful transducer when no collection is
 * provided.
 */
cljs.core.keep_indexed = (function() {
var cljs$core$keep_indexed = null;
var cljs$core$keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__7993 = null;
var G__7993__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__7993__1 = (function (result){
var G__7960 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__7960) : rf.call(null,G__7960));
});
var G__7993__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__7961 = i;
var G__7962 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7961,G__7962) : f.call(null,G__7961,G__7962));
})();
if((v == null)){
return result;
} else {
var G__7963 = result;
var G__7964 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7963,G__7964) : rf.call(null,G__7963,G__7964));
}
});
G__7993 = function(result,input){
switch(arguments.length){
case 0:
return G__7993__0.call(this);
case 1:
return G__7993__1.call(this,result);
case 2:
return G__7993__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7993.cljs$core$IFn$_invoke$arity$0 = G__7993__0;
G__7993.cljs$core$IFn$_invoke$arity$1 = G__7993__1;
G__7993.cljs$core$IFn$_invoke$arity$2 = G__7993__2;
return G__7993;
})()
;})(ia))
});
});
var cljs$core$keep_indexed__2 = (function (f,coll){
var keepi = (function cljs$core$keep_indexed_$_keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4652__auto___7994 = size;
var i_7995 = (0);
while(true){
if((i_7995 < n__4652__auto___7994)){
var x_7996 = (function (){var G__7989 = (idx + i_7995);
var G__7990 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_7995);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7989,G__7990) : f.call(null,G__7989,G__7990));
})();
if((x_7996 == null)){
} else {
cljs.core.chunk_append(b,x_7996);
}

var G__7997 = (i_7995 + (1));
i_7995 = G__7997;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$keep_indexed_$_keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__7991 = idx;
var G__7992 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7991,G__7992) : f.call(null,G__7991,G__7992));
})();
if((x == null)){
return cljs$core$keep_indexed_$_keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,cljs$core$keep_indexed_$_keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
cljs$core$keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$keep_indexed__1.call(this,f);
case 2:
return cljs$core$keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$keep_indexed.cljs$core$IFn$_invoke$arity$1 = cljs$core$keep_indexed__1;
cljs$core$keep_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$keep_indexed__2;
return cljs$core$keep_indexed;
})()
;
/**
 * Takes a set of predicates and returns a function f that returns true if all of its
 * composing predicates return a logical true value against all of its arguments, else it returns
 * false. Note that f is short-circuiting in that it will stop execution on the first
 * argument that triggers a logical false result against the original predicates.
 * @param {...*} var_args
 */
cljs.core.every_pred = (function() {
var cljs$core$every_pred = null;
var cljs$core$every_pred__1 = (function (p){
return (function() {
var cljs$core$every_pred_$_ep1 = null;
var cljs$core$every_pred_$_ep1__0 = (function (){
return true;
});
var cljs$core$every_pred_$_ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__8211 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8211) : p.call(null,G__8211));
})());
});
var cljs$core$every_pred_$_ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3755__auto__ = (function (){var G__8213 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8213) : p.call(null,G__8213));
})();
if(cljs.core.truth_(and__3755__auto__)){
var G__8214 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8214) : p.call(null,G__8214));
} else {
return and__3755__auto__;
}
})());
});
var cljs$core$every_pred_$_ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3755__auto__ = (function (){var G__8216 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8216) : p.call(null,G__8216));
})();
if(cljs.core.truth_(and__3755__auto__)){
var and__3755__auto____$1 = (function (){var G__8218 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8218) : p.call(null,G__8218));
})();
if(cljs.core.truth_(and__3755__auto____$1)){
var G__8219 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8219) : p.call(null,G__8219));
} else {
return and__3755__auto____$1;
}
} else {
return and__3755__auto__;
}
})());
});
var cljs$core$every_pred_$_ep1__4 = (function() { 
var G__8388__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__8388 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8389__i = 0, G__8389__a = new Array(arguments.length -  3);
while (G__8389__i < G__8389__a.length) {G__8389__a[G__8389__i] = arguments[G__8389__i + 3]; ++G__8389__i;}
  args = new cljs.core.IndexedSeq(G__8389__a,0);
} 
return G__8388__delegate.call(this,x,y,z,args);};
G__8388.cljs$lang$maxFixedArity = 3;
G__8388.cljs$lang$applyTo = (function (arglist__8390){
var x = cljs.core.first(arglist__8390);
arglist__8390 = cljs.core.next(arglist__8390);
var y = cljs.core.first(arglist__8390);
arglist__8390 = cljs.core.next(arglist__8390);
var z = cljs.core.first(arglist__8390);
var args = cljs.core.rest(arglist__8390);
return G__8388__delegate(x,y,z,args);
});
G__8388.cljs$core$IFn$_invoke$arity$variadic = G__8388__delegate;
return G__8388;
})()
;
cljs$core$every_pred_$_ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_ep1__0.call(this);
case 1:
return cljs$core$every_pred_$_ep1__1.call(this,x);
case 2:
return cljs$core$every_pred_$_ep1__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_ep1__3.call(this,x,y,z);
default:
var G__8391 = null;
if (arguments.length > 3) {
var G__8392__i = 0, G__8392__a = new Array(arguments.length -  3);
while (G__8392__i < G__8392__a.length) {G__8392__a[G__8392__i] = arguments[G__8392__i + 3]; ++G__8392__i;}
G__8391 = new cljs.core.IndexedSeq(G__8392__a,0);
}
return cljs$core$every_pred_$_ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8391);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_ep1.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_ep1.cljs$lang$applyTo = cljs$core$every_pred_$_ep1__4.cljs$lang$applyTo;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep1__0;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep1__1;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep1__2;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep1__3;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_ep1;
})()
});
var cljs$core$every_pred__2 = (function (p1,p2){
return (function() {
var cljs$core$every_pred_$_ep2 = null;
var cljs$core$every_pred_$_ep2__0 = (function (){
return true;
});
var cljs$core$every_pred_$_ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3755__auto__ = (function (){var G__8251 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8251) : p1.call(null,G__8251));
})();
if(cljs.core.truth_(and__3755__auto__)){
var G__8252 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8252) : p2.call(null,G__8252));
} else {
return and__3755__auto__;
}
})());
});
var cljs$core$every_pred_$_ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3755__auto__ = (function (){var G__8254 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8254) : p1.call(null,G__8254));
})();
if(cljs.core.truth_(and__3755__auto__)){
var and__3755__auto____$1 = (function (){var G__8256 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8256) : p1.call(null,G__8256));
})();
if(cljs.core.truth_(and__3755__auto____$1)){
var and__3755__auto____$2 = (function (){var G__8258 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8258) : p2.call(null,G__8258));
})();
if(cljs.core.truth_(and__3755__auto____$2)){
var G__8259 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8259) : p2.call(null,G__8259));
} else {
return and__3755__auto____$2;
}
} else {
return and__3755__auto____$1;
}
} else {
return and__3755__auto__;
}
})());
});
var cljs$core$every_pred_$_ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3755__auto__ = (function (){var G__8261 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8261) : p1.call(null,G__8261));
})();
if(cljs.core.truth_(and__3755__auto__)){
var and__3755__auto____$1 = (function (){var G__8263 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8263) : p1.call(null,G__8263));
})();
if(cljs.core.truth_(and__3755__auto____$1)){
var and__3755__auto____$2 = (function (){var G__8265 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8265) : p1.call(null,G__8265));
})();
if(cljs.core.truth_(and__3755__auto____$2)){
var and__3755__auto____$3 = (function (){var G__8267 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8267) : p2.call(null,G__8267));
})();
if(cljs.core.truth_(and__3755__auto____$3)){
var and__3755__auto____$4 = (function (){var G__8269 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8269) : p2.call(null,G__8269));
})();
if(cljs.core.truth_(and__3755__auto____$4)){
var G__8270 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8270) : p2.call(null,G__8270));
} else {
return and__3755__auto____$4;
}
} else {
return and__3755__auto____$3;
}
} else {
return and__3755__auto____$2;
}
} else {
return and__3755__auto____$1;
}
} else {
return and__3755__auto__;
}
})());
});
var cljs$core$every_pred_$_ep2__4 = (function() { 
var G__8393__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__7998_SHARP_){
var and__3755__auto__ = (function (){var G__8275 = p1__7998_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8275) : p1.call(null,G__8275));
})();
if(cljs.core.truth_(and__3755__auto__)){
var G__8276 = p1__7998_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8276) : p2.call(null,G__8276));
} else {
return and__3755__auto__;
}
}),args)));
};
var G__8393 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8394__i = 0, G__8394__a = new Array(arguments.length -  3);
while (G__8394__i < G__8394__a.length) {G__8394__a[G__8394__i] = arguments[G__8394__i + 3]; ++G__8394__i;}
  args = new cljs.core.IndexedSeq(G__8394__a,0);
} 
return G__8393__delegate.call(this,x,y,z,args);};
G__8393.cljs$lang$maxFixedArity = 3;
G__8393.cljs$lang$applyTo = (function (arglist__8395){
var x = cljs.core.first(arglist__8395);
arglist__8395 = cljs.core.next(arglist__8395);
var y = cljs.core.first(arglist__8395);
arglist__8395 = cljs.core.next(arglist__8395);
var z = cljs.core.first(arglist__8395);
var args = cljs.core.rest(arglist__8395);
return G__8393__delegate(x,y,z,args);
});
G__8393.cljs$core$IFn$_invoke$arity$variadic = G__8393__delegate;
return G__8393;
})()
;
cljs$core$every_pred_$_ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_ep2__0.call(this);
case 1:
return cljs$core$every_pred_$_ep2__1.call(this,x);
case 2:
return cljs$core$every_pred_$_ep2__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_ep2__3.call(this,x,y,z);
default:
var G__8396 = null;
if (arguments.length > 3) {
var G__8397__i = 0, G__8397__a = new Array(arguments.length -  3);
while (G__8397__i < G__8397__a.length) {G__8397__a[G__8397__i] = arguments[G__8397__i + 3]; ++G__8397__i;}
G__8396 = new cljs.core.IndexedSeq(G__8397__a,0);
}
return cljs$core$every_pred_$_ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8396);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_ep2.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_ep2.cljs$lang$applyTo = cljs$core$every_pred_$_ep2__4.cljs$lang$applyTo;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep2__0;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep2__1;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep2__2;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep2__3;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_ep2;
})()
});
var cljs$core$every_pred__3 = (function (p1,p2,p3){
return (function() {
var cljs$core$every_pred_$_ep3 = null;
var cljs$core$every_pred_$_ep3__0 = (function (){
return true;
});
var cljs$core$every_pred_$_ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3755__auto__ = (function (){var G__8322 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8322) : p1.call(null,G__8322));
})();
if(cljs.core.truth_(and__3755__auto__)){
var and__3755__auto____$1 = (function (){var G__8324 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8324) : p2.call(null,G__8324));
})();
if(cljs.core.truth_(and__3755__auto____$1)){
var G__8325 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8325) : p3.call(null,G__8325));
} else {
return and__3755__auto____$1;
}
} else {
return and__3755__auto__;
}
})());
});
var cljs$core$every_pred_$_ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3755__auto__ = (function (){var G__8327 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8327) : p1.call(null,G__8327));
})();
if(cljs.core.truth_(and__3755__auto__)){
var and__3755__auto____$1 = (function (){var G__8329 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8329) : p2.call(null,G__8329));
})();
if(cljs.core.truth_(and__3755__auto____$1)){
var and__3755__auto____$2 = (function (){var G__8331 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8331) : p3.call(null,G__8331));
})();
if(cljs.core.truth_(and__3755__auto____$2)){
var and__3755__auto____$3 = (function (){var G__8333 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8333) : p1.call(null,G__8333));
})();
if(cljs.core.truth_(and__3755__auto____$3)){
var and__3755__auto____$4 = (function (){var G__8335 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8335) : p2.call(null,G__8335));
})();
if(cljs.core.truth_(and__3755__auto____$4)){
var G__8336 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8336) : p3.call(null,G__8336));
} else {
return and__3755__auto____$4;
}
} else {
return and__3755__auto____$3;
}
} else {
return and__3755__auto____$2;
}
} else {
return and__3755__auto____$1;
}
} else {
return and__3755__auto__;
}
})());
});
var cljs$core$every_pred_$_ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3755__auto__ = (function (){var G__8338 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8338) : p1.call(null,G__8338));
})();
if(cljs.core.truth_(and__3755__auto__)){
var and__3755__auto____$1 = (function (){var G__8340 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8340) : p2.call(null,G__8340));
})();
if(cljs.core.truth_(and__3755__auto____$1)){
var and__3755__auto____$2 = (function (){var G__8342 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8342) : p3.call(null,G__8342));
})();
if(cljs.core.truth_(and__3755__auto____$2)){
var and__3755__auto____$3 = (function (){var G__8344 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8344) : p1.call(null,G__8344));
})();
if(cljs.core.truth_(and__3755__auto____$3)){
var and__3755__auto____$4 = (function (){var G__8346 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8346) : p2.call(null,G__8346));
})();
if(cljs.core.truth_(and__3755__auto____$4)){
var and__3755__auto____$5 = (function (){var G__8348 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8348) : p3.call(null,G__8348));
})();
if(cljs.core.truth_(and__3755__auto____$5)){
var and__3755__auto____$6 = (function (){var G__8350 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8350) : p1.call(null,G__8350));
})();
if(cljs.core.truth_(and__3755__auto____$6)){
var and__3755__auto____$7 = (function (){var G__8352 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8352) : p2.call(null,G__8352));
})();
if(cljs.core.truth_(and__3755__auto____$7)){
var G__8353 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8353) : p3.call(null,G__8353));
} else {
return and__3755__auto____$7;
}
} else {
return and__3755__auto____$6;
}
} else {
return and__3755__auto____$5;
}
} else {
return and__3755__auto____$4;
}
} else {
return and__3755__auto____$3;
}
} else {
return and__3755__auto____$2;
}
} else {
return and__3755__auto____$1;
}
} else {
return and__3755__auto__;
}
})());
});
var cljs$core$every_pred_$_ep3__4 = (function() { 
var G__8398__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__7999_SHARP_){
var and__3755__auto__ = (function (){var G__8360 = p1__7999_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8360) : p1.call(null,G__8360));
})();
if(cljs.core.truth_(and__3755__auto__)){
var and__3755__auto____$1 = (function (){var G__8362 = p1__7999_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8362) : p2.call(null,G__8362));
})();
if(cljs.core.truth_(and__3755__auto____$1)){
var G__8363 = p1__7999_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8363) : p3.call(null,G__8363));
} else {
return and__3755__auto____$1;
}
} else {
return and__3755__auto__;
}
}),args)));
};
var G__8398 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8399__i = 0, G__8399__a = new Array(arguments.length -  3);
while (G__8399__i < G__8399__a.length) {G__8399__a[G__8399__i] = arguments[G__8399__i + 3]; ++G__8399__i;}
  args = new cljs.core.IndexedSeq(G__8399__a,0);
} 
return G__8398__delegate.call(this,x,y,z,args);};
G__8398.cljs$lang$maxFixedArity = 3;
G__8398.cljs$lang$applyTo = (function (arglist__8400){
var x = cljs.core.first(arglist__8400);
arglist__8400 = cljs.core.next(arglist__8400);
var y = cljs.core.first(arglist__8400);
arglist__8400 = cljs.core.next(arglist__8400);
var z = cljs.core.first(arglist__8400);
var args = cljs.core.rest(arglist__8400);
return G__8398__delegate(x,y,z,args);
});
G__8398.cljs$core$IFn$_invoke$arity$variadic = G__8398__delegate;
return G__8398;
})()
;
cljs$core$every_pred_$_ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_ep3__0.call(this);
case 1:
return cljs$core$every_pred_$_ep3__1.call(this,x);
case 2:
return cljs$core$every_pred_$_ep3__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_ep3__3.call(this,x,y,z);
default:
var G__8401 = null;
if (arguments.length > 3) {
var G__8402__i = 0, G__8402__a = new Array(arguments.length -  3);
while (G__8402__i < G__8402__a.length) {G__8402__a[G__8402__i] = arguments[G__8402__i + 3]; ++G__8402__i;}
G__8401 = new cljs.core.IndexedSeq(G__8402__a,0);
}
return cljs$core$every_pred_$_ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8401);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_ep3.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_ep3.cljs$lang$applyTo = cljs$core$every_pred_$_ep3__4.cljs$lang$applyTo;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep3__0;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep3__1;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep3__2;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep3__3;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_ep3;
})()
});
var cljs$core$every_pred__4 = (function() { 
var G__8403__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var cljs$core$every_pred_$_epn = null;
var cljs$core$every_pred_$_epn__0 = (function (){
return true;
});
var cljs$core$every_pred_$_epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8000_SHARP_){
var G__8379 = x;
return (p1__8000_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8000_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8379) : p1__8000_SHARP_.call(null,G__8379));
});})(ps__$1))
,ps__$1);
});
var cljs$core$every_pred_$_epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8001_SHARP_){
var and__3755__auto__ = (function (){var G__8381 = x;
return (p1__8001_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8001_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8381) : p1__8001_SHARP_.call(null,G__8381));
})();
if(cljs.core.truth_(and__3755__auto__)){
var G__8382 = y;
return (p1__8001_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8001_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8382) : p1__8001_SHARP_.call(null,G__8382));
} else {
return and__3755__auto__;
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$every_pred_$_epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8002_SHARP_){
var and__3755__auto__ = (function (){var G__8384 = x;
return (p1__8002_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8002_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8384) : p1__8002_SHARP_.call(null,G__8384));
})();
if(cljs.core.truth_(and__3755__auto__)){
var and__3755__auto____$1 = (function (){var G__8386 = y;
return (p1__8002_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8002_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8386) : p1__8002_SHARP_.call(null,G__8386));
})();
if(cljs.core.truth_(and__3755__auto____$1)){
var G__8387 = z;
return (p1__8002_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8002_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8387) : p1__8002_SHARP_.call(null,G__8387));
} else {
return and__3755__auto____$1;
}
} else {
return and__3755__auto__;
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$every_pred_$_epn__4 = (function() { 
var G__8404__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8003_SHARP_){
return cljs.core.every_QMARK_(p1__8003_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__8404 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8405__i = 0, G__8405__a = new Array(arguments.length -  3);
while (G__8405__i < G__8405__a.length) {G__8405__a[G__8405__i] = arguments[G__8405__i + 3]; ++G__8405__i;}
  args = new cljs.core.IndexedSeq(G__8405__a,0);
} 
return G__8404__delegate.call(this,x,y,z,args);};
G__8404.cljs$lang$maxFixedArity = 3;
G__8404.cljs$lang$applyTo = (function (arglist__8406){
var x = cljs.core.first(arglist__8406);
arglist__8406 = cljs.core.next(arglist__8406);
var y = cljs.core.first(arglist__8406);
arglist__8406 = cljs.core.next(arglist__8406);
var z = cljs.core.first(arglist__8406);
var args = cljs.core.rest(arglist__8406);
return G__8404__delegate(x,y,z,args);
});
G__8404.cljs$core$IFn$_invoke$arity$variadic = G__8404__delegate;
return G__8404;
})()
;
cljs$core$every_pred_$_epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_epn__0.call(this);
case 1:
return cljs$core$every_pred_$_epn__1.call(this,x);
case 2:
return cljs$core$every_pred_$_epn__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_epn__3.call(this,x,y,z);
default:
var G__8407 = null;
if (arguments.length > 3) {
var G__8408__i = 0, G__8408__a = new Array(arguments.length -  3);
while (G__8408__i < G__8408__a.length) {G__8408__a[G__8408__i] = arguments[G__8408__i + 3]; ++G__8408__i;}
G__8407 = new cljs.core.IndexedSeq(G__8408__a,0);
}
return cljs$core$every_pred_$_epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8407);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_epn.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_epn.cljs$lang$applyTo = cljs$core$every_pred_$_epn__4.cljs$lang$applyTo;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_epn__0;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_epn__1;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_epn__2;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_epn__3;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_epn__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_epn;
})()
;})(ps__$1))
};
var G__8403 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__8409__i = 0, G__8409__a = new Array(arguments.length -  3);
while (G__8409__i < G__8409__a.length) {G__8409__a[G__8409__i] = arguments[G__8409__i + 3]; ++G__8409__i;}
  ps = new cljs.core.IndexedSeq(G__8409__a,0);
} 
return G__8403__delegate.call(this,p1,p2,p3,ps);};
G__8403.cljs$lang$maxFixedArity = 3;
G__8403.cljs$lang$applyTo = (function (arglist__8410){
var p1 = cljs.core.first(arglist__8410);
arglist__8410 = cljs.core.next(arglist__8410);
var p2 = cljs.core.first(arglist__8410);
arglist__8410 = cljs.core.next(arglist__8410);
var p3 = cljs.core.first(arglist__8410);
var ps = cljs.core.rest(arglist__8410);
return G__8403__delegate(p1,p2,p3,ps);
});
G__8403.cljs$core$IFn$_invoke$arity$variadic = G__8403__delegate;
return G__8403;
})()
;
cljs$core$every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return cljs$core$every_pred__1.call(this,p1);
case 2:
return cljs$core$every_pred__2.call(this,p1,p2);
case 3:
return cljs$core$every_pred__3.call(this,p1,p2,p3);
default:
var G__8411 = null;
if (arguments.length > 3) {
var G__8412__i = 0, G__8412__a = new Array(arguments.length -  3);
while (G__8412__i < G__8412__a.length) {G__8412__a[G__8412__i] = arguments[G__8412__i + 3]; ++G__8412__i;}
G__8411 = new cljs.core.IndexedSeq(G__8412__a,0);
}
return cljs$core$every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__8411);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred.cljs$lang$applyTo = cljs$core$every_pred__4.cljs$lang$applyTo;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred__1;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred__2;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred__3;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred;
})()
;
/**
 * Takes a set of predicates and returns a function f that returns the first logical true value
 * returned by one of its composing predicates against any of its arguments, else it returns
 * logical false. Note that f is short-circuiting in that it will stop execution on the first
 * argument that triggers a logical true result against the original predicates.
 * @param {...*} var_args
 */
cljs.core.some_fn = (function() {
var cljs$core$some_fn = null;
var cljs$core$some_fn__1 = (function (p){
return (function() {
var cljs$core$some_fn_$_sp1 = null;
var cljs$core$some_fn_$_sp1__0 = (function (){
return null;
});
var cljs$core$some_fn_$_sp1__1 = (function (x){
var G__8618 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8618) : p.call(null,G__8618));
});
var cljs$core$some_fn_$_sp1__2 = (function (x,y){
var or__3767__auto__ = (function (){var G__8620 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8620) : p.call(null,G__8620));
})();
if(cljs.core.truth_(or__3767__auto__)){
return or__3767__auto__;
} else {
var G__8621 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8621) : p.call(null,G__8621));
}
});
var cljs$core$some_fn_$_sp1__3 = (function (x,y,z){
var or__3767__auto__ = (function (){var G__8623 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8623) : p.call(null,G__8623));
})();
if(cljs.core.truth_(or__3767__auto__)){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (function (){var G__8625 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8625) : p.call(null,G__8625));
})();
if(cljs.core.truth_(or__3767__auto____$1)){
return or__3767__auto____$1;
} else {
var G__8626 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8626) : p.call(null,G__8626));
}
}
});
var cljs$core$some_fn_$_sp1__4 = (function() { 
var G__8787__delegate = function (x,y,z,args){
var or__3767__auto__ = cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3767__auto__)){
return or__3767__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__8787 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8788__i = 0, G__8788__a = new Array(arguments.length -  3);
while (G__8788__i < G__8788__a.length) {G__8788__a[G__8788__i] = arguments[G__8788__i + 3]; ++G__8788__i;}
  args = new cljs.core.IndexedSeq(G__8788__a,0);
} 
return G__8787__delegate.call(this,x,y,z,args);};
G__8787.cljs$lang$maxFixedArity = 3;
G__8787.cljs$lang$applyTo = (function (arglist__8789){
var x = cljs.core.first(arglist__8789);
arglist__8789 = cljs.core.next(arglist__8789);
var y = cljs.core.first(arglist__8789);
arglist__8789 = cljs.core.next(arglist__8789);
var z = cljs.core.first(arglist__8789);
var args = cljs.core.rest(arglist__8789);
return G__8787__delegate(x,y,z,args);
});
G__8787.cljs$core$IFn$_invoke$arity$variadic = G__8787__delegate;
return G__8787;
})()
;
cljs$core$some_fn_$_sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_sp1__0.call(this);
case 1:
return cljs$core$some_fn_$_sp1__1.call(this,x);
case 2:
return cljs$core$some_fn_$_sp1__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_sp1__3.call(this,x,y,z);
default:
var G__8790 = null;
if (arguments.length > 3) {
var G__8791__i = 0, G__8791__a = new Array(arguments.length -  3);
while (G__8791__i < G__8791__a.length) {G__8791__a[G__8791__i] = arguments[G__8791__i + 3]; ++G__8791__i;}
G__8790 = new cljs.core.IndexedSeq(G__8791__a,0);
}
return cljs$core$some_fn_$_sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8790);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_sp1.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_sp1.cljs$lang$applyTo = cljs$core$some_fn_$_sp1__4.cljs$lang$applyTo;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp1__0;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp1__1;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp1__2;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp1__3;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_sp1;
})()
});
var cljs$core$some_fn__2 = (function (p1,p2){
return (function() {
var cljs$core$some_fn_$_sp2 = null;
var cljs$core$some_fn_$_sp2__0 = (function (){
return null;
});
var cljs$core$some_fn_$_sp2__1 = (function (x){
var or__3767__auto__ = (function (){var G__8658 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8658) : p1.call(null,G__8658));
})();
if(cljs.core.truth_(or__3767__auto__)){
return or__3767__auto__;
} else {
var G__8659 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8659) : p2.call(null,G__8659));
}
});
var cljs$core$some_fn_$_sp2__2 = (function (x,y){
var or__3767__auto__ = (function (){var G__8661 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8661) : p1.call(null,G__8661));
})();
if(cljs.core.truth_(or__3767__auto__)){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (function (){var G__8663 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8663) : p1.call(null,G__8663));
})();
if(cljs.core.truth_(or__3767__auto____$1)){
return or__3767__auto____$1;
} else {
var or__3767__auto____$2 = (function (){var G__8665 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8665) : p2.call(null,G__8665));
})();
if(cljs.core.truth_(or__3767__auto____$2)){
return or__3767__auto____$2;
} else {
var G__8666 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8666) : p2.call(null,G__8666));
}
}
}
});
var cljs$core$some_fn_$_sp2__3 = (function (x,y,z){
var or__3767__auto__ = (function (){var G__8668 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8668) : p1.call(null,G__8668));
})();
if(cljs.core.truth_(or__3767__auto__)){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (function (){var G__8670 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8670) : p1.call(null,G__8670));
})();
if(cljs.core.truth_(or__3767__auto____$1)){
return or__3767__auto____$1;
} else {
var or__3767__auto____$2 = (function (){var G__8672 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8672) : p1.call(null,G__8672));
})();
if(cljs.core.truth_(or__3767__auto____$2)){
return or__3767__auto____$2;
} else {
var or__3767__auto____$3 = (function (){var G__8674 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8674) : p2.call(null,G__8674));
})();
if(cljs.core.truth_(or__3767__auto____$3)){
return or__3767__auto____$3;
} else {
var or__3767__auto____$4 = (function (){var G__8676 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8676) : p2.call(null,G__8676));
})();
if(cljs.core.truth_(or__3767__auto____$4)){
return or__3767__auto____$4;
} else {
var G__8677 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8677) : p2.call(null,G__8677));
}
}
}
}
}
});
var cljs$core$some_fn_$_sp2__4 = (function() { 
var G__8792__delegate = function (x,y,z,args){
var or__3767__auto__ = cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3767__auto__)){
return or__3767__auto__;
} else {
return cljs.core.some(((function (or__3767__auto__){
return (function (p1__8413_SHARP_){
var or__3767__auto____$1 = (function (){var G__8679 = p1__8413_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8679) : p1.call(null,G__8679));
})();
if(cljs.core.truth_(or__3767__auto____$1)){
return or__3767__auto____$1;
} else {
var G__8680 = p1__8413_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8680) : p2.call(null,G__8680));
}
});})(or__3767__auto__))
,args);
}
};
var G__8792 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8793__i = 0, G__8793__a = new Array(arguments.length -  3);
while (G__8793__i < G__8793__a.length) {G__8793__a[G__8793__i] = arguments[G__8793__i + 3]; ++G__8793__i;}
  args = new cljs.core.IndexedSeq(G__8793__a,0);
} 
return G__8792__delegate.call(this,x,y,z,args);};
G__8792.cljs$lang$maxFixedArity = 3;
G__8792.cljs$lang$applyTo = (function (arglist__8794){
var x = cljs.core.first(arglist__8794);
arglist__8794 = cljs.core.next(arglist__8794);
var y = cljs.core.first(arglist__8794);
arglist__8794 = cljs.core.next(arglist__8794);
var z = cljs.core.first(arglist__8794);
var args = cljs.core.rest(arglist__8794);
return G__8792__delegate(x,y,z,args);
});
G__8792.cljs$core$IFn$_invoke$arity$variadic = G__8792__delegate;
return G__8792;
})()
;
cljs$core$some_fn_$_sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_sp2__0.call(this);
case 1:
return cljs$core$some_fn_$_sp2__1.call(this,x);
case 2:
return cljs$core$some_fn_$_sp2__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_sp2__3.call(this,x,y,z);
default:
var G__8795 = null;
if (arguments.length > 3) {
var G__8796__i = 0, G__8796__a = new Array(arguments.length -  3);
while (G__8796__i < G__8796__a.length) {G__8796__a[G__8796__i] = arguments[G__8796__i + 3]; ++G__8796__i;}
G__8795 = new cljs.core.IndexedSeq(G__8796__a,0);
}
return cljs$core$some_fn_$_sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8795);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_sp2.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_sp2.cljs$lang$applyTo = cljs$core$some_fn_$_sp2__4.cljs$lang$applyTo;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp2__0;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp2__1;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp2__2;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp2__3;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_sp2;
})()
});
var cljs$core$some_fn__3 = (function (p1,p2,p3){
return (function() {
var cljs$core$some_fn_$_sp3 = null;
var cljs$core$some_fn_$_sp3__0 = (function (){
return null;
});
var cljs$core$some_fn_$_sp3__1 = (function (x){
var or__3767__auto__ = (function (){var G__8726 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8726) : p1.call(null,G__8726));
})();
if(cljs.core.truth_(or__3767__auto__)){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (function (){var G__8728 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8728) : p2.call(null,G__8728));
})();
if(cljs.core.truth_(or__3767__auto____$1)){
return or__3767__auto____$1;
} else {
var G__8729 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8729) : p3.call(null,G__8729));
}
}
});
var cljs$core$some_fn_$_sp3__2 = (function (x,y){
var or__3767__auto__ = (function (){var G__8731 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8731) : p1.call(null,G__8731));
})();
if(cljs.core.truth_(or__3767__auto__)){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (function (){var G__8733 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8733) : p2.call(null,G__8733));
})();
if(cljs.core.truth_(or__3767__auto____$1)){
return or__3767__auto____$1;
} else {
var or__3767__auto____$2 = (function (){var G__8735 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8735) : p3.call(null,G__8735));
})();
if(cljs.core.truth_(or__3767__auto____$2)){
return or__3767__auto____$2;
} else {
var or__3767__auto____$3 = (function (){var G__8737 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8737) : p1.call(null,G__8737));
})();
if(cljs.core.truth_(or__3767__auto____$3)){
return or__3767__auto____$3;
} else {
var or__3767__auto____$4 = (function (){var G__8739 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8739) : p2.call(null,G__8739));
})();
if(cljs.core.truth_(or__3767__auto____$4)){
return or__3767__auto____$4;
} else {
var G__8740 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8740) : p3.call(null,G__8740));
}
}
}
}
}
});
var cljs$core$some_fn_$_sp3__3 = (function (x,y,z){
var or__3767__auto__ = (function (){var G__8742 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8742) : p1.call(null,G__8742));
})();
if(cljs.core.truth_(or__3767__auto__)){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (function (){var G__8744 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8744) : p2.call(null,G__8744));
})();
if(cljs.core.truth_(or__3767__auto____$1)){
return or__3767__auto____$1;
} else {
var or__3767__auto____$2 = (function (){var G__8746 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8746) : p3.call(null,G__8746));
})();
if(cljs.core.truth_(or__3767__auto____$2)){
return or__3767__auto____$2;
} else {
var or__3767__auto____$3 = (function (){var G__8748 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8748) : p1.call(null,G__8748));
})();
if(cljs.core.truth_(or__3767__auto____$3)){
return or__3767__auto____$3;
} else {
var or__3767__auto____$4 = (function (){var G__8750 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8750) : p2.call(null,G__8750));
})();
if(cljs.core.truth_(or__3767__auto____$4)){
return or__3767__auto____$4;
} else {
var or__3767__auto____$5 = (function (){var G__8752 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8752) : p3.call(null,G__8752));
})();
if(cljs.core.truth_(or__3767__auto____$5)){
return or__3767__auto____$5;
} else {
var or__3767__auto____$6 = (function (){var G__8754 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8754) : p1.call(null,G__8754));
})();
if(cljs.core.truth_(or__3767__auto____$6)){
return or__3767__auto____$6;
} else {
var or__3767__auto____$7 = (function (){var G__8756 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8756) : p2.call(null,G__8756));
})();
if(cljs.core.truth_(or__3767__auto____$7)){
return or__3767__auto____$7;
} else {
var G__8757 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8757) : p3.call(null,G__8757));
}
}
}
}
}
}
}
}
});
var cljs$core$some_fn_$_sp3__4 = (function() { 
var G__8797__delegate = function (x,y,z,args){
var or__3767__auto__ = cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3767__auto__)){
return or__3767__auto__;
} else {
return cljs.core.some(((function (or__3767__auto__){
return (function (p1__8414_SHARP_){
var or__3767__auto____$1 = (function (){var G__8759 = p1__8414_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8759) : p1.call(null,G__8759));
})();
if(cljs.core.truth_(or__3767__auto____$1)){
return or__3767__auto____$1;
} else {
var or__3767__auto____$2 = (function (){var G__8761 = p1__8414_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8761) : p2.call(null,G__8761));
})();
if(cljs.core.truth_(or__3767__auto____$2)){
return or__3767__auto____$2;
} else {
var G__8762 = p1__8414_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8762) : p3.call(null,G__8762));
}
}
});})(or__3767__auto__))
,args);
}
};
var G__8797 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8798__i = 0, G__8798__a = new Array(arguments.length -  3);
while (G__8798__i < G__8798__a.length) {G__8798__a[G__8798__i] = arguments[G__8798__i + 3]; ++G__8798__i;}
  args = new cljs.core.IndexedSeq(G__8798__a,0);
} 
return G__8797__delegate.call(this,x,y,z,args);};
G__8797.cljs$lang$maxFixedArity = 3;
G__8797.cljs$lang$applyTo = (function (arglist__8799){
var x = cljs.core.first(arglist__8799);
arglist__8799 = cljs.core.next(arglist__8799);
var y = cljs.core.first(arglist__8799);
arglist__8799 = cljs.core.next(arglist__8799);
var z = cljs.core.first(arglist__8799);
var args = cljs.core.rest(arglist__8799);
return G__8797__delegate(x,y,z,args);
});
G__8797.cljs$core$IFn$_invoke$arity$variadic = G__8797__delegate;
return G__8797;
})()
;
cljs$core$some_fn_$_sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_sp3__0.call(this);
case 1:
return cljs$core$some_fn_$_sp3__1.call(this,x);
case 2:
return cljs$core$some_fn_$_sp3__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_sp3__3.call(this,x,y,z);
default:
var G__8800 = null;
if (arguments.length > 3) {
var G__8801__i = 0, G__8801__a = new Array(arguments.length -  3);
while (G__8801__i < G__8801__a.length) {G__8801__a[G__8801__i] = arguments[G__8801__i + 3]; ++G__8801__i;}
G__8800 = new cljs.core.IndexedSeq(G__8801__a,0);
}
return cljs$core$some_fn_$_sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8800);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_sp3.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_sp3.cljs$lang$applyTo = cljs$core$some_fn_$_sp3__4.cljs$lang$applyTo;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp3__0;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp3__1;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp3__2;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp3__3;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_sp3;
})()
});
var cljs$core$some_fn__4 = (function() { 
var G__8802__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var cljs$core$some_fn_$_spn = null;
var cljs$core$some_fn_$_spn__0 = (function (){
return null;
});
var cljs$core$some_fn_$_spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__8415_SHARP_){
var G__8778 = x;
return (p1__8415_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8415_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8778) : p1__8415_SHARP_.call(null,G__8778));
});})(ps__$1))
,ps__$1);
});
var cljs$core$some_fn_$_spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__8416_SHARP_){
var or__3767__auto__ = (function (){var G__8780 = x;
return (p1__8416_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8416_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8780) : p1__8416_SHARP_.call(null,G__8780));
})();
if(cljs.core.truth_(or__3767__auto__)){
return or__3767__auto__;
} else {
var G__8781 = y;
return (p1__8416_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8416_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8781) : p1__8416_SHARP_.call(null,G__8781));
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$some_fn_$_spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__8417_SHARP_){
var or__3767__auto__ = (function (){var G__8783 = x;
return (p1__8417_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8417_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8783) : p1__8417_SHARP_.call(null,G__8783));
})();
if(cljs.core.truth_(or__3767__auto__)){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (function (){var G__8785 = y;
return (p1__8417_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8417_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8785) : p1__8417_SHARP_.call(null,G__8785));
})();
if(cljs.core.truth_(or__3767__auto____$1)){
return or__3767__auto____$1;
} else {
var G__8786 = z;
return (p1__8417_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8417_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8786) : p1__8417_SHARP_.call(null,G__8786));
}
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$some_fn_$_spn__4 = (function() { 
var G__8803__delegate = function (x,y,z,args){
var or__3767__auto__ = cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3767__auto__)){
return or__3767__auto__;
} else {
return cljs.core.some(((function (or__3767__auto__,ps__$1){
return (function (p1__8418_SHARP_){
return cljs.core.some(p1__8418_SHARP_,args);
});})(or__3767__auto__,ps__$1))
,ps__$1);
}
};
var G__8803 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8804__i = 0, G__8804__a = new Array(arguments.length -  3);
while (G__8804__i < G__8804__a.length) {G__8804__a[G__8804__i] = arguments[G__8804__i + 3]; ++G__8804__i;}
  args = new cljs.core.IndexedSeq(G__8804__a,0);
} 
return G__8803__delegate.call(this,x,y,z,args);};
G__8803.cljs$lang$maxFixedArity = 3;
G__8803.cljs$lang$applyTo = (function (arglist__8805){
var x = cljs.core.first(arglist__8805);
arglist__8805 = cljs.core.next(arglist__8805);
var y = cljs.core.first(arglist__8805);
arglist__8805 = cljs.core.next(arglist__8805);
var z = cljs.core.first(arglist__8805);
var args = cljs.core.rest(arglist__8805);
return G__8803__delegate(x,y,z,args);
});
G__8803.cljs$core$IFn$_invoke$arity$variadic = G__8803__delegate;
return G__8803;
})()
;
cljs$core$some_fn_$_spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_spn__0.call(this);
case 1:
return cljs$core$some_fn_$_spn__1.call(this,x);
case 2:
return cljs$core$some_fn_$_spn__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_spn__3.call(this,x,y,z);
default:
var G__8806 = null;
if (arguments.length > 3) {
var G__8807__i = 0, G__8807__a = new Array(arguments.length -  3);
while (G__8807__i < G__8807__a.length) {G__8807__a[G__8807__i] = arguments[G__8807__i + 3]; ++G__8807__i;}
G__8806 = new cljs.core.IndexedSeq(G__8807__a,0);
}
return cljs$core$some_fn_$_spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8806);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_spn.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_spn.cljs$lang$applyTo = cljs$core$some_fn_$_spn__4.cljs$lang$applyTo;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_spn__0;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_spn__1;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_spn__2;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_spn__3;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_spn__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_spn;
})()
;})(ps__$1))
};
var G__8802 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__8808__i = 0, G__8808__a = new Array(arguments.length -  3);
while (G__8808__i < G__8808__a.length) {G__8808__a[G__8808__i] = arguments[G__8808__i + 3]; ++G__8808__i;}
  ps = new cljs.core.IndexedSeq(G__8808__a,0);
} 
return G__8802__delegate.call(this,p1,p2,p3,ps);};
G__8802.cljs$lang$maxFixedArity = 3;
G__8802.cljs$lang$applyTo = (function (arglist__8809){
var p1 = cljs.core.first(arglist__8809);
arglist__8809 = cljs.core.next(arglist__8809);
var p2 = cljs.core.first(arglist__8809);
arglist__8809 = cljs.core.next(arglist__8809);
var p3 = cljs.core.first(arglist__8809);
var ps = cljs.core.rest(arglist__8809);
return G__8802__delegate(p1,p2,p3,ps);
});
G__8802.cljs$core$IFn$_invoke$arity$variadic = G__8802__delegate;
return G__8802;
})()
;
cljs$core$some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return cljs$core$some_fn__1.call(this,p1);
case 2:
return cljs$core$some_fn__2.call(this,p1,p2);
case 3:
return cljs$core$some_fn__3.call(this,p1,p2,p3);
default:
var G__8810 = null;
if (arguments.length > 3) {
var G__8811__i = 0, G__8811__a = new Array(arguments.length -  3);
while (G__8811__i < G__8811__a.length) {G__8811__a[G__8811__i] = arguments[G__8811__i + 3]; ++G__8811__i;}
G__8810 = new cljs.core.IndexedSeq(G__8811__a,0);
}
return cljs$core$some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__8810);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn.cljs$lang$applyTo = cljs$core$some_fn__4.cljs$lang$applyTo;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn__1;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn__2;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn__3;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn;
})()
;
/**
 * Returns a lazy sequence consisting of the result of applying f to
 * the set of first items of each coll, followed by applying f to the
 * set of second items in each coll, until any one of the colls is
 * exhausted.  Any remaining items in other colls are ignored. Function
 * f should accept number-of-colls arguments. Returns a transducer when
 * no collection is provided.
 * @param {...*} var_args
 */
cljs.core.map = (function() {
var cljs$core$map = null;
var cljs$core$map__1 = (function (f){
return (function (rf){
return (function() {
var G__8866 = null;
var G__8866__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8866__1 = (function (result){
var G__8852 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8852) : rf.call(null,G__8852));
});
var G__8866__2 = (function (result,input){
var G__8853 = result;
var G__8854 = (function (){var G__8855 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8855) : f.call(null,G__8855));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8853,G__8854) : rf.call(null,G__8853,G__8854));
});
var G__8866__3 = (function() { 
var G__8867__delegate = function (result,input,inputs){
var G__8856 = result;
var G__8857 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8856,G__8857) : rf.call(null,G__8856,G__8857));
};
var G__8867 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__8868__i = 0, G__8868__a = new Array(arguments.length -  2);
while (G__8868__i < G__8868__a.length) {G__8868__a[G__8868__i] = arguments[G__8868__i + 2]; ++G__8868__i;}
  inputs = new cljs.core.IndexedSeq(G__8868__a,0);
} 
return G__8867__delegate.call(this,result,input,inputs);};
G__8867.cljs$lang$maxFixedArity = 2;
G__8867.cljs$lang$applyTo = (function (arglist__8869){
var result = cljs.core.first(arglist__8869);
arglist__8869 = cljs.core.next(arglist__8869);
var input = cljs.core.first(arglist__8869);
var inputs = cljs.core.rest(arglist__8869);
return G__8867__delegate(result,input,inputs);
});
G__8867.cljs$core$IFn$_invoke$arity$variadic = G__8867__delegate;
return G__8867;
})()
;
G__8866 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__8866__0.call(this);
case 1:
return G__8866__1.call(this,result);
case 2:
return G__8866__2.call(this,result,input);
default:
var G__8870 = null;
if (arguments.length > 2) {
var G__8871__i = 0, G__8871__a = new Array(arguments.length -  2);
while (G__8871__i < G__8871__a.length) {G__8871__a[G__8871__i] = arguments[G__8871__i + 2]; ++G__8871__i;}
G__8870 = new cljs.core.IndexedSeq(G__8871__a,0);
}
return G__8866__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__8870);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8866.cljs$lang$maxFixedArity = 2;
G__8866.cljs$lang$applyTo = G__8866__3.cljs$lang$applyTo;
G__8866.cljs$core$IFn$_invoke$arity$0 = G__8866__0;
G__8866.cljs$core$IFn$_invoke$arity$1 = G__8866__1;
G__8866.cljs$core$IFn$_invoke$arity$2 = G__8866__2;
G__8866.cljs$core$IFn$_invoke$arity$variadic = G__8866__3.cljs$core$IFn$_invoke$arity$variadic;
return G__8866;
})()
});
});
var cljs$core$map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4652__auto___8872 = size;
var i_8873 = (0);
while(true){
if((i_8873 < n__4652__auto___8872)){
cljs.core.chunk_append(b,(function (){var G__8858 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8873);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8858) : f.call(null,G__8858));
})());

var G__8874 = (i_8873 + (1));
i_8873 = G__8874;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__8859 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8859) : f.call(null,G__8859));
})(),cljs$core$map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var cljs$core$map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__8860 = cljs.core.first(s1);
var G__8861 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8860,G__8861) : f.call(null,G__8860,G__8861));
})(),cljs$core$map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var cljs$core$map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__8862 = cljs.core.first(s1);
var G__8863 = cljs.core.first(s2);
var G__8864 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8862,G__8863,G__8864) : f.call(null,G__8862,G__8863,G__8864));
})(),cljs$core$map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var cljs$core$map__5 = (function() { 
var G__8875__delegate = function (f,c1,c2,c3,colls){
var step = (function cljs$core$map_$_step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs$core$map_$_step(cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return cljs$core$map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__8812_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__8812_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__8875 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__8876__i = 0, G__8876__a = new Array(arguments.length -  4);
while (G__8876__i < G__8876__a.length) {G__8876__a[G__8876__i] = arguments[G__8876__i + 4]; ++G__8876__i;}
  colls = new cljs.core.IndexedSeq(G__8876__a,0);
} 
return G__8875__delegate.call(this,f,c1,c2,c3,colls);};
G__8875.cljs$lang$maxFixedArity = 4;
G__8875.cljs$lang$applyTo = (function (arglist__8877){
var f = cljs.core.first(arglist__8877);
arglist__8877 = cljs.core.next(arglist__8877);
var c1 = cljs.core.first(arglist__8877);
arglist__8877 = cljs.core.next(arglist__8877);
var c2 = cljs.core.first(arglist__8877);
arglist__8877 = cljs.core.next(arglist__8877);
var c3 = cljs.core.first(arglist__8877);
var colls = cljs.core.rest(arglist__8877);
return G__8875__delegate(f,c1,c2,c3,colls);
});
G__8875.cljs$core$IFn$_invoke$arity$variadic = G__8875__delegate;
return G__8875;
})()
;
cljs$core$map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return cljs$core$map__1.call(this,f);
case 2:
return cljs$core$map__2.call(this,f,c1);
case 3:
return cljs$core$map__3.call(this,f,c1,c2);
case 4:
return cljs$core$map__4.call(this,f,c1,c2,c3);
default:
var G__8878 = null;
if (arguments.length > 4) {
var G__8879__i = 0, G__8879__a = new Array(arguments.length -  4);
while (G__8879__i < G__8879__a.length) {G__8879__a[G__8879__i] = arguments[G__8879__i + 4]; ++G__8879__i;}
G__8878 = new cljs.core.IndexedSeq(G__8879__a,0);
}
return cljs$core$map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__8878);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$map.cljs$lang$maxFixedArity = 4;
cljs$core$map.cljs$lang$applyTo = cljs$core$map__5.cljs$lang$applyTo;
cljs$core$map.cljs$core$IFn$_invoke$arity$1 = cljs$core$map__1;
cljs$core$map.cljs$core$IFn$_invoke$arity$2 = cljs$core$map__2;
cljs$core$map.cljs$core$IFn$_invoke$arity$3 = cljs$core$map__3;
cljs$core$map.cljs$core$IFn$_invoke$arity$4 = cljs$core$map__4;
cljs$core$map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$map__5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$map;
})()
;
/**
 * Returns a lazy sequence of the first n items in coll, or all items if
 * there are fewer than n.  Returns a stateful transducer when
 * no collection is provided.
 */
cljs.core.take = (function() {
var cljs$core$take = null;
var cljs$core$take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__8888 = null;
var G__8888__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8888__1 = (function (result){
var G__8885 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8885) : rf.call(null,G__8885));
});
var G__8888__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__8886 = result;
var G__8887 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8886,G__8887) : rf.call(null,G__8886,G__8887));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__8888 = function(result,input){
switch(arguments.length){
case 0:
return G__8888__0.call(this);
case 1:
return G__8888__1.call(this,result);
case 2:
return G__8888__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8888.cljs$core$IFn$_invoke$arity$0 = G__8888__0;
G__8888.cljs$core$IFn$_invoke$arity$1 = G__8888__1;
G__8888.cljs$core$IFn$_invoke$arity$2 = G__8888__2;
return G__8888;
})()
;})(na))
});
});
var cljs$core$take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),cljs$core$take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
cljs$core$take = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$take__1.call(this,n);
case 2:
return cljs$core$take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$take.cljs$core$IFn$_invoke$arity$1 = cljs$core$take__1;
cljs$core$take.cljs$core$IFn$_invoke$arity$2 = cljs$core$take__2;
return cljs$core$take;
})()
;
/**
 * Returns a lazy sequence of all but the first n items in coll.
 * Returns a stateful transducer when no collection is provided.
 */
cljs.core.drop = (function() {
var cljs$core$drop = null;
var cljs$core$drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__8895 = null;
var G__8895__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8895__1 = (function (result){
var G__8892 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8892) : rf.call(null,G__8892));
});
var G__8895__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__8893 = result;
var G__8894 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8893,G__8894) : rf.call(null,G__8893,G__8894));
}
});
G__8895 = function(result,input){
switch(arguments.length){
case 0:
return G__8895__0.call(this);
case 1:
return G__8895__1.call(this,result);
case 2:
return G__8895__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8895.cljs$core$IFn$_invoke$arity$0 = G__8895__0;
G__8895.cljs$core$IFn$_invoke$arity$1 = G__8895__1;
G__8895.cljs$core$IFn$_invoke$arity$2 = G__8895__2;
return G__8895;
})()
;})(na))
});
});
var cljs$core$drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__8896 = (n__$1 - (1));
var G__8897 = cljs.core.rest(s);
n__$1 = G__8896;
coll__$1 = G__8897;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
cljs$core$drop = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$drop__1.call(this,n);
case 2:
return cljs$core$drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$drop.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop__1;
cljs$core$drop.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop__2;
return cljs$core$drop;
})()
;
/**
 * Return a lazy sequence of all but the last n (default 1) items in coll
 */
cljs.core.drop_last = (function() {
var cljs$core$drop_last = null;
var cljs$core$drop_last__1 = (function (s){
return cljs$core$drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var cljs$core$drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
cljs$core$drop_last = function(n,s){
switch(arguments.length){
case 1:
return cljs$core$drop_last__1.call(this,n);
case 2:
return cljs$core$drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$drop_last.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop_last__1;
cljs$core$drop_last.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop_last__2;
return cljs$core$drop_last;
})()
;
/**
 * Returns a seq of the last n items in coll.  Depending on the type
 * of coll may be no better than linear time.  For vectors, see also subvec.
 */
cljs.core.take_last = (function cljs$core$take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__8900 = cljs.core.next(s);
var G__8901 = cljs.core.next(lead);
s = G__8900;
lead = G__8901;
continue;
} else {
return s;
}
break;
}
});
/**
 * Returns a lazy sequence of the items in coll starting from the
 * first item for which (pred item) returns logical false.  Returns a
 * stateful transducer when no collection is provided.
 */
cljs.core.drop_while = (function() {
var cljs$core$drop_while = null;
var cljs$core$drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__8914 = null;
var G__8914__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8914__1 = (function (result){
var G__8908 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8908) : rf.call(null,G__8908));
});
var G__8914__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3755__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3755__auto__)){
var G__8909 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8909) : pred.call(null,G__8909));
} else {
return and__3755__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__8910 = result;
var G__8911 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8910,G__8911) : rf.call(null,G__8910,G__8911));
}
});
G__8914 = function(result,input){
switch(arguments.length){
case 0:
return G__8914__0.call(this);
case 1:
return G__8914__1.call(this,result);
case 2:
return G__8914__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8914.cljs$core$IFn$_invoke$arity$0 = G__8914__0;
G__8914.cljs$core$IFn$_invoke$arity$1 = G__8914__1;
G__8914.cljs$core$IFn$_invoke$arity$2 = G__8914__2;
return G__8914;
})()
;})(da))
});
});
var cljs$core$drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3755__auto__ = s;
if(and__3755__auto__){
var G__8913 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__8913) : pred__$1.call(null,G__8913));
} else {
return and__3755__auto__;
}
})())){
var G__8915 = pred__$1;
var G__8916 = cljs.core.rest(s);
pred__$1 = G__8915;
coll__$1 = G__8916;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
cljs$core$drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$drop_while__1.call(this,pred);
case 2:
return cljs$core$drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$drop_while.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop_while__1;
cljs$core$drop_while.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop_while__2;
return cljs$core$drop_while;
})()
;
/**
 * Returns a lazy (infinite!) sequence of repetitions of the items in coll.
 */
cljs.core.cycle = (function cljs$core$cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cljs$core$cycle(s));
} else {
return null;
}
}),null,null));
});
/**
 * Returns a vector of [(take n coll) (drop n coll)]
 */
cljs.core.split_at = (function cljs$core$split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
 * Returns a lazy (infinite!, or length n if supplied) sequence of xs.
 */
cljs.core.repeat = (function() {
var cljs$core$repeat = null;
var cljs$core$repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,cljs$core$repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var cljs$core$repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs$core$repeat.cljs$core$IFn$_invoke$arity$1(x));
});
cljs$core$repeat = function(n,x){
switch(arguments.length){
case 1:
return cljs$core$repeat__1.call(this,n);
case 2:
return cljs$core$repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$repeat.cljs$core$IFn$_invoke$arity$1 = cljs$core$repeat__1;
cljs$core$repeat.cljs$core$IFn$_invoke$arity$2 = cljs$core$repeat__2;
return cljs$core$repeat;
})()
;
/**
 * Returns a lazy seq of n xs.
 */
cljs.core.replicate = (function cljs$core$replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
 * Takes a function of no args, presumably with side effects, and
 * returns an infinite (or length n if supplied) lazy sequence of calls
 * to it
 */
cljs.core.repeatedly = (function() {
var cljs$core$repeatedly = null;
var cljs$core$repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var cljs$core$repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
cljs$core$repeatedly = function(n,f){
switch(arguments.length){
case 1:
return cljs$core$repeatedly__1.call(this,n);
case 2:
return cljs$core$repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1 = cljs$core$repeatedly__1;
cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$2 = cljs$core$repeatedly__2;
return cljs$core$repeatedly;
})()
;
/**
 * Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
 */
cljs.core.iterate = (function cljs$core$iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return cljs$core$iterate(f,(function (){var G__8925 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8925) : f.call(null,G__8925));
})());
}),null,null)));
});
/**
 * Returns a lazy seq of the first item in each coll, then the second etc.
 * @param {...*} var_args
 */
cljs.core.interleave = (function() {
var cljs$core$interleave = null;
var cljs$core$interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),cljs$core$interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var cljs$core$interleave__3 = (function() { 
var G__8928__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs$core$interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__8928 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__8929__i = 0, G__8929__a = new Array(arguments.length -  2);
while (G__8929__i < G__8929__a.length) {G__8929__a[G__8929__i] = arguments[G__8929__i + 2]; ++G__8929__i;}
  colls = new cljs.core.IndexedSeq(G__8929__a,0);
} 
return G__8928__delegate.call(this,c1,c2,colls);};
G__8928.cljs$lang$maxFixedArity = 2;
G__8928.cljs$lang$applyTo = (function (arglist__8930){
var c1 = cljs.core.first(arglist__8930);
arglist__8930 = cljs.core.next(arglist__8930);
var c2 = cljs.core.first(arglist__8930);
var colls = cljs.core.rest(arglist__8930);
return G__8928__delegate(c1,c2,colls);
});
G__8928.cljs$core$IFn$_invoke$arity$variadic = G__8928__delegate;
return G__8928;
})()
;
cljs$core$interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return cljs$core$interleave__2.call(this,c1,c2);
default:
var G__8931 = null;
if (arguments.length > 2) {
var G__8932__i = 0, G__8932__a = new Array(arguments.length -  2);
while (G__8932__i < G__8932__a.length) {G__8932__a[G__8932__i] = arguments[G__8932__i + 2]; ++G__8932__i;}
G__8931 = new cljs.core.IndexedSeq(G__8932__a,0);
}
return cljs$core$interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__8931);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$interleave.cljs$lang$maxFixedArity = 2;
cljs$core$interleave.cljs$lang$applyTo = cljs$core$interleave__3.cljs$lang$applyTo;
cljs$core$interleave.cljs$core$IFn$_invoke$arity$2 = cljs$core$interleave__2;
cljs$core$interleave.cljs$core$IFn$_invoke$arity$variadic = cljs$core$interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$interleave;
})()
;
/**
 * Returns a lazy seq of the elements of coll separated by sep
 */
cljs.core.interpose = (function() {
var cljs$core$interpose = null;
var cljs$core$interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__8947 = null;
var G__8947__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8947__1 = (function (result){
var G__8940 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8940) : rf.call(null,G__8940));
});
var G__8947__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__8941 = result;
var G__8942 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8941,G__8942) : rf.call(null,G__8941,G__8942));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__8943 = sepr;
var G__8944 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8943,G__8944) : rf.call(null,G__8943,G__8944));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__8945 = result;
var G__8946 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8945,G__8946) : rf.call(null,G__8945,G__8946));
}
});
G__8947 = function(result,input){
switch(arguments.length){
case 0:
return G__8947__0.call(this);
case 1:
return G__8947__1.call(this,result);
case 2:
return G__8947__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8947.cljs$core$IFn$_invoke$arity$0 = G__8947__0;
G__8947.cljs$core$IFn$_invoke$arity$1 = G__8947__1;
G__8947.cljs$core$IFn$_invoke$arity$2 = G__8947__2;
return G__8947;
})()
;})(started))
});
});
var cljs$core$interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
cljs$core$interpose = function(sep,coll){
switch(arguments.length){
case 1:
return cljs$core$interpose__1.call(this,sep);
case 2:
return cljs$core$interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$interpose.cljs$core$IFn$_invoke$arity$1 = cljs$core$interpose__1;
cljs$core$interpose.cljs$core$IFn$_invoke$arity$2 = cljs$core$interpose__2;
return cljs$core$interpose;
})()
;
/**
 * Take a collection of collections, and return a lazy seq
 * of items from the inner collection
 */
cljs.core.flatten1 = (function cljs$core$flatten1(colls){
var cat = (function cljs$core$flatten1_$_cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
 * Returns the result of applying concat to the result of applying map
 * to f and colls.  Thus function f should return a collection. Returns
 * a transducer when no collections are provided
 * @param {...*} var_args
 */
cljs.core.mapcat = (function() {
var cljs$core$mapcat = null;
var cljs$core$mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var cljs$core$mapcat__2 = (function() { 
var G__8956__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__8956 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__8957__i = 0, G__8957__a = new Array(arguments.length -  1);
while (G__8957__i < G__8957__a.length) {G__8957__a[G__8957__i] = arguments[G__8957__i + 1]; ++G__8957__i;}
  colls = new cljs.core.IndexedSeq(G__8957__a,0);
} 
return G__8956__delegate.call(this,f,colls);};
G__8956.cljs$lang$maxFixedArity = 1;
G__8956.cljs$lang$applyTo = (function (arglist__8958){
var f = cljs.core.first(arglist__8958);
var colls = cljs.core.rest(arglist__8958);
return G__8956__delegate(f,colls);
});
G__8956.cljs$core$IFn$_invoke$arity$variadic = G__8956__delegate;
return G__8956;
})()
;
cljs$core$mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return cljs$core$mapcat__1.call(this,f);
default:
var G__8959 = null;
if (arguments.length > 1) {
var G__8960__i = 0, G__8960__a = new Array(arguments.length -  1);
while (G__8960__i < G__8960__a.length) {G__8960__a[G__8960__i] = arguments[G__8960__i + 1]; ++G__8960__i;}
G__8959 = new cljs.core.IndexedSeq(G__8960__a,0);
}
return cljs$core$mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__8959);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$mapcat.cljs$lang$maxFixedArity = 1;
cljs$core$mapcat.cljs$lang$applyTo = cljs$core$mapcat__2.cljs$lang$applyTo;
cljs$core$mapcat.cljs$core$IFn$_invoke$arity$1 = cljs$core$mapcat__1;
cljs$core$mapcat.cljs$core$IFn$_invoke$arity$variadic = cljs$core$mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$mapcat;
})()
;
/**
 * Returns a lazy sequence of the items in coll for which
 * (pred item) returns true. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.filter = (function() {
var cljs$core$filter = null;
var cljs$core$filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__8979 = null;
var G__8979__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8979__1 = (function (result){
var G__8973 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8973) : rf.call(null,G__8973));
});
var G__8979__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__8974 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8974) : pred.call(null,G__8974));
})())){
var G__8975 = result;
var G__8976 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8975,G__8976) : rf.call(null,G__8975,G__8976));
} else {
return result;
}
});
G__8979 = function(result,input){
switch(arguments.length){
case 0:
return G__8979__0.call(this);
case 1:
return G__8979__1.call(this,result);
case 2:
return G__8979__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8979.cljs$core$IFn$_invoke$arity$0 = G__8979__0;
G__8979.cljs$core$IFn$_invoke$arity$1 = G__8979__1;
G__8979.cljs$core$IFn$_invoke$arity$2 = G__8979__2;
return G__8979;
})()
});
});
var cljs$core$filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4652__auto___8980 = size;
var i_8981 = (0);
while(true){
if((i_8981 < n__4652__auto___8980)){
if(cljs.core.truth_((function (){var G__8977 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8981);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8977) : pred.call(null,G__8977));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8981));
} else {
}

var G__8982 = (i_8981 + (1));
i_8981 = G__8982;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__8978 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8978) : pred.call(null,G__8978));
})())){
return cljs.core.cons(f,cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
cljs$core$filter = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$filter__1.call(this,pred);
case 2:
return cljs$core$filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$filter.cljs$core$IFn$_invoke$arity$1 = cljs$core$filter__1;
cljs$core$filter.cljs$core$IFn$_invoke$arity$2 = cljs$core$filter__2;
return cljs$core$filter;
})()
;
/**
 * Returns a lazy sequence of the items in coll for which
 * (pred item) returns false. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.remove = (function() {
var cljs$core$remove = null;
var cljs$core$remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var cljs$core$remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
cljs$core$remove = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$remove__1.call(this,pred);
case 2:
return cljs$core$remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$remove.cljs$core$IFn$_invoke$arity$1 = cljs$core$remove__1;
cljs$core$remove.cljs$core$IFn$_invoke$arity$2 = cljs$core$remove__2;
return cljs$core$remove;
})()
;
/**
 * Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
 * branch? must be a fn of one arg that returns true if passed a node
 * that can have children (but may not).  children must be a fn of one
 * arg that returns a sequence of the children. Will only be called on
 * nodes for which branch? returns true. Root is the root node of the
 * tree.
 */
cljs.core.tree_seq = (function cljs$core$tree_seq(branch_QMARK_,children,root){
var walk = (function cljs$core$tree_seq_$_walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__8989 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__8989) : branch_QMARK_.call(null,G__8989));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk,cljs.core.array_seq([(function (){var G__8990 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__8990) : children.call(null,G__8990));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
 * Takes any nested combination of sequential things (lists, vectors,
 * etc.) and returns their contents as a single, flat sequence.
 * (flatten nil) returns nil.
 */
cljs.core.flatten = (function cljs$core$flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__8991_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__8991_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
 * Returns a new coll consisting of to-coll with all of the items of
 * from-coll conjoined. A transducer may be supplied.
 */
cljs.core.into = (function() {
var cljs$core$into = null;
var cljs$core$into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__8994 = to;
if(G__8994){
var bit__4434__auto__ = (G__8994.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4434__auto__) || (G__8994.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var cljs$core$into__3 = (function (to,xform,from){
if((function (){var G__8995 = to;
if(G__8995){
var bit__4434__auto__ = (G__8995.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4434__auto__) || (G__8995.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
cljs$core$into = function(to,xform,from){
switch(arguments.length){
case 2:
return cljs$core$into__2.call(this,to,xform);
case 3:
return cljs$core$into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$into.cljs$core$IFn$_invoke$arity$2 = cljs$core$into__2;
cljs$core$into.cljs$core$IFn$_invoke$arity$3 = cljs$core$into__3;
return cljs$core$into;
})()
;
/**
 * Returns a vector consisting of the result of applying f to the
 * set of first items of each coll, followed by applying f to the set
 * of second items in each coll, until any one of the colls is
 * exhausted.  Any remaining items in other colls are ignored. Function
 * f should accept number-of-colls arguments.
 * @param {...*} var_args
 */
cljs.core.mapv = (function() {
var cljs$core$mapv = null;
var cljs$core$mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__8997 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8997) : f.call(null,G__8997));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var cljs$core$mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var cljs$core$mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var cljs$core$mapv__5 = (function() { 
var G__8998__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__8998 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__8999__i = 0, G__8999__a = new Array(arguments.length -  4);
while (G__8999__i < G__8999__a.length) {G__8999__a[G__8999__i] = arguments[G__8999__i + 4]; ++G__8999__i;}
  colls = new cljs.core.IndexedSeq(G__8999__a,0);
} 
return G__8998__delegate.call(this,f,c1,c2,c3,colls);};
G__8998.cljs$lang$maxFixedArity = 4;
G__8998.cljs$lang$applyTo = (function (arglist__9000){
var f = cljs.core.first(arglist__9000);
arglist__9000 = cljs.core.next(arglist__9000);
var c1 = cljs.core.first(arglist__9000);
arglist__9000 = cljs.core.next(arglist__9000);
var c2 = cljs.core.first(arglist__9000);
arglist__9000 = cljs.core.next(arglist__9000);
var c3 = cljs.core.first(arglist__9000);
var colls = cljs.core.rest(arglist__9000);
return G__8998__delegate(f,c1,c2,c3,colls);
});
G__8998.cljs$core$IFn$_invoke$arity$variadic = G__8998__delegate;
return G__8998;
})()
;
cljs$core$mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return cljs$core$mapv__2.call(this,f,c1);
case 3:
return cljs$core$mapv__3.call(this,f,c1,c2);
case 4:
return cljs$core$mapv__4.call(this,f,c1,c2,c3);
default:
var G__9001 = null;
if (arguments.length > 4) {
var G__9002__i = 0, G__9002__a = new Array(arguments.length -  4);
while (G__9002__i < G__9002__a.length) {G__9002__a[G__9002__i] = arguments[G__9002__i + 4]; ++G__9002__i;}
G__9001 = new cljs.core.IndexedSeq(G__9002__a,0);
}
return cljs$core$mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__9001);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$mapv.cljs$lang$maxFixedArity = 4;
cljs$core$mapv.cljs$lang$applyTo = cljs$core$mapv__5.cljs$lang$applyTo;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$2 = cljs$core$mapv__2;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$3 = cljs$core$mapv__3;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$4 = cljs$core$mapv__4;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$variadic = cljs$core$mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$mapv;
})()
;
/**
 * Returns a vector of the items in coll for which
 * (pred item) returns true. pred must be free of side-effects.
 */
cljs.core.filterv = (function cljs$core$filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__9004 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9004) : pred.call(null,G__9004));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
 * Returns a lazy sequence of lists of n items each, at offsets step
 * apart. If step is not supplied, defaults to n, i.e. the partitions
 * do not overlap. If a pad collection is supplied, use its elements as
 * necessary to complete last partition up to n items. In case there are
 * not enough padding elements, return a partition with less than n items.
 */
cljs.core.partition = (function() {
var cljs$core$partition = null;
var cljs$core$partition__2 = (function (n,coll){
return cljs$core$partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var cljs$core$partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,cljs$core$partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var cljs$core$partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,cljs$core$partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
cljs$core$partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return cljs$core$partition__2.call(this,n,step);
case 3:
return cljs$core$partition__3.call(this,n,step,pad);
case 4:
return cljs$core$partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partition.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition__2;
cljs$core$partition.cljs$core$IFn$_invoke$arity$3 = cljs$core$partition__3;
cljs$core$partition.cljs$core$IFn$_invoke$arity$4 = cljs$core$partition__4;
return cljs$core$partition;
})()
;
/**
 * Returns the value in a nested associative structure,
 * where ks is a sequence of keys. Returns nil if the key is not present,
 * or the not-found value if supplied.
 */
cljs.core.get_in = (function() {
var cljs$core$get_in = null;
var cljs$core$get_in__2 = (function (m,ks){
return cljs$core$get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var cljs$core$get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__9019 = m__$1;
if(G__9019){
var bit__4441__auto__ = (G__9019.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4441__auto__) || (G__9019.cljs$core$ILookup$)){
return true;
} else {
if((!G__9019.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__9019);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__9019);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__9020 = sentinel;
var G__9021 = m__$2;
var G__9022 = cljs.core.next(ks__$1);
sentinel = G__9020;
m__$1 = G__9021;
ks__$1 = G__9022;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
cljs$core$get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return cljs$core$get_in__2.call(this,m,ks);
case 3:
return cljs$core$get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$get_in.cljs$core$IFn$_invoke$arity$2 = cljs$core$get_in__2;
cljs$core$get_in.cljs$core$IFn$_invoke$arity$3 = cljs$core$get_in__3;
return cljs$core$get_in;
})()
;
/**
 * Associates a value in a nested associative structure, where ks is a
 * sequence of keys and v is the new value and returns a new nested structure.
 * If any levels do not exist, hash-maps will be created.
 */
cljs.core.assoc_in = (function cljs$core$assoc_in(m,p__9023,v){
var vec__9028 = p__9023;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9028,(0),null);
var ks = cljs.core.nthnext(vec__9028,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
 * 'Updates' a value in a nested associative structure, where ks is a
 * sequence of keys and f is a function that will take the old value
 * and any supplied args and return the new value, and returns a new
 * nested structure.  If any levels do not exist, hash-maps will be
 * created.
 * @param {...*} var_args
 */
cljs.core.update_in = (function() {
var cljs$core$update_in = null;
var cljs$core$update_in__3 = (function (m,p__9029,f){
var vec__9067 = p__9029;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9067,(0),null);
var ks = cljs.core.nthnext(vec__9067,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9068 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9068) : f.call(null,G__9068));
})());
}
});
var cljs$core$update_in__4 = (function (m,p__9030,f,a){
var vec__9069 = p__9030;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9069,(0),null);
var ks = cljs.core.nthnext(vec__9069,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9070 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9071 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9070,G__9071) : f.call(null,G__9070,G__9071));
})());
}
});
var cljs$core$update_in__5 = (function (m,p__9031,f,a,b){
var vec__9072 = p__9031;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9072,(0),null);
var ks = cljs.core.nthnext(vec__9072,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9073 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9074 = a;
var G__9075 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9073,G__9074,G__9075) : f.call(null,G__9073,G__9074,G__9075));
})());
}
});
var cljs$core$update_in__6 = (function (m,p__9032,f,a,b,c){
var vec__9076 = p__9032;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9076,(0),null);
var ks = cljs.core.nthnext(vec__9076,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9077 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9078 = a;
var G__9079 = b;
var G__9080 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9077,G__9078,G__9079,G__9080) : f.call(null,G__9077,G__9078,G__9079,G__9080));
})());
}
});
var cljs$core$update_in__7 = (function() { 
var G__9082__delegate = function (m,p__9033,f,a,b,c,args){
var vec__9081 = p__9033;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9081,(0),null);
var ks = cljs.core.nthnext(vec__9081,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs$core$update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__9082 = function (m,p__9033,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__9083__i = 0, G__9083__a = new Array(arguments.length -  6);
while (G__9083__i < G__9083__a.length) {G__9083__a[G__9083__i] = arguments[G__9083__i + 6]; ++G__9083__i;}
  args = new cljs.core.IndexedSeq(G__9083__a,0);
} 
return G__9082__delegate.call(this,m,p__9033,f,a,b,c,args);};
G__9082.cljs$lang$maxFixedArity = 6;
G__9082.cljs$lang$applyTo = (function (arglist__9084){
var m = cljs.core.first(arglist__9084);
arglist__9084 = cljs.core.next(arglist__9084);
var p__9033 = cljs.core.first(arglist__9084);
arglist__9084 = cljs.core.next(arglist__9084);
var f = cljs.core.first(arglist__9084);
arglist__9084 = cljs.core.next(arglist__9084);
var a = cljs.core.first(arglist__9084);
arglist__9084 = cljs.core.next(arglist__9084);
var b = cljs.core.first(arglist__9084);
arglist__9084 = cljs.core.next(arglist__9084);
var c = cljs.core.first(arglist__9084);
var args = cljs.core.rest(arglist__9084);
return G__9082__delegate(m,p__9033,f,a,b,c,args);
});
G__9082.cljs$core$IFn$_invoke$arity$variadic = G__9082__delegate;
return G__9082;
})()
;
cljs$core$update_in = function(m,p__9033,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return cljs$core$update_in__3.call(this,m,p__9033,f);
case 4:
return cljs$core$update_in__4.call(this,m,p__9033,f,a);
case 5:
return cljs$core$update_in__5.call(this,m,p__9033,f,a,b);
case 6:
return cljs$core$update_in__6.call(this,m,p__9033,f,a,b,c);
default:
var G__9085 = null;
if (arguments.length > 6) {
var G__9086__i = 0, G__9086__a = new Array(arguments.length -  6);
while (G__9086__i < G__9086__a.length) {G__9086__a[G__9086__i] = arguments[G__9086__i + 6]; ++G__9086__i;}
G__9085 = new cljs.core.IndexedSeq(G__9086__a,0);
}
return cljs$core$update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__9033,f,a,b,c, G__9085);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$update_in.cljs$lang$maxFixedArity = 6;
cljs$core$update_in.cljs$lang$applyTo = cljs$core$update_in__7.cljs$lang$applyTo;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$3 = cljs$core$update_in__3;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$4 = cljs$core$update_in__4;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$5 = cljs$core$update_in__5;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$6 = cljs$core$update_in__6;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$variadic = cljs$core$update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$update_in;
})()
;
/**
 * 'Updates' a value in an associative structure, where k is a
 * key and f is a function that will take the old value
 * and any supplied args and return the new value, and returns a new
 * structure.  If the key does not exist, nil is passed as the old value.
 * @param {...*} var_args
 */
cljs.core.update = (function() {
var cljs$core$update = null;
var cljs$core$update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9097 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9097) : f.call(null,G__9097));
})());
});
var cljs$core$update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9098 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9099 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9098,G__9099) : f.call(null,G__9098,G__9099));
})());
});
var cljs$core$update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9100 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9101 = x;
var G__9102 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9100,G__9101,G__9102) : f.call(null,G__9100,G__9101,G__9102));
})());
});
var cljs$core$update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9103 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9104 = x;
var G__9105 = y;
var G__9106 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9103,G__9104,G__9105,G__9106) : f.call(null,G__9103,G__9104,G__9105,G__9106));
})());
});
var cljs$core$update__7 = (function() { 
var G__9107__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__9107 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__9108__i = 0, G__9108__a = new Array(arguments.length -  6);
while (G__9108__i < G__9108__a.length) {G__9108__a[G__9108__i] = arguments[G__9108__i + 6]; ++G__9108__i;}
  more = new cljs.core.IndexedSeq(G__9108__a,0);
} 
return G__9107__delegate.call(this,m,k,f,x,y,z,more);};
G__9107.cljs$lang$maxFixedArity = 6;
G__9107.cljs$lang$applyTo = (function (arglist__9109){
var m = cljs.core.first(arglist__9109);
arglist__9109 = cljs.core.next(arglist__9109);
var k = cljs.core.first(arglist__9109);
arglist__9109 = cljs.core.next(arglist__9109);
var f = cljs.core.first(arglist__9109);
arglist__9109 = cljs.core.next(arglist__9109);
var x = cljs.core.first(arglist__9109);
arglist__9109 = cljs.core.next(arglist__9109);
var y = cljs.core.first(arglist__9109);
arglist__9109 = cljs.core.next(arglist__9109);
var z = cljs.core.first(arglist__9109);
var more = cljs.core.rest(arglist__9109);
return G__9107__delegate(m,k,f,x,y,z,more);
});
G__9107.cljs$core$IFn$_invoke$arity$variadic = G__9107__delegate;
return G__9107;
})()
;
cljs$core$update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return cljs$core$update__3.call(this,m,k,f);
case 4:
return cljs$core$update__4.call(this,m,k,f,x);
case 5:
return cljs$core$update__5.call(this,m,k,f,x,y);
case 6:
return cljs$core$update__6.call(this,m,k,f,x,y,z);
default:
var G__9110 = null;
if (arguments.length > 6) {
var G__9111__i = 0, G__9111__a = new Array(arguments.length -  6);
while (G__9111__i < G__9111__a.length) {G__9111__a[G__9111__i] = arguments[G__9111__i + 6]; ++G__9111__i;}
G__9110 = new cljs.core.IndexedSeq(G__9111__a,0);
}
return cljs$core$update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__9110);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$update.cljs$lang$maxFixedArity = 6;
cljs$core$update.cljs$lang$applyTo = cljs$core$update__7.cljs$lang$applyTo;
cljs$core$update.cljs$core$IFn$_invoke$arity$3 = cljs$core$update__3;
cljs$core$update.cljs$core$IFn$_invoke$arity$4 = cljs$core$update__4;
cljs$core$update.cljs$core$IFn$_invoke$arity$5 = cljs$core$update__5;
cljs$core$update.cljs$core$IFn$_invoke$arity$6 = cljs$core$update__6;
cljs$core$update.cljs$core$IFn$_invoke$arity$variadic = cljs$core$update__7.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function cljs$core$__GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function cljs$core$pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function cljs$core$pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function cljs$core$pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function cljs$core$pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function cljs$core$tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function cljs$core$new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__9112 = (ll - (5));
var G__9113 = r;
ll = G__9112;
ret = G__9113;
continue;
}
break;
}
});
cljs.core.push_tail = (function cljs$core$push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = cljs$core$push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function cljs$core$vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function cljs$core$first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__9118 = cljs.core.pv_aget(node,(0));
var G__9119 = (level - (5));
node = G__9118;
level = G__9119;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function cljs$core$unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__9120 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__9121 = (level - (5));
node = G__9120;
level = G__9121;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function cljs$core$array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function cljs$core$do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,cljs$core$do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function cljs$core$pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = cljs$core$pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function cljs$core$__GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function cljs$core$ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__9131 = init__$2;
var G__9132 = (j + i);
var G__9133 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9131,G__9132,G__9133) : f.call(null,G__9131,G__9132,G__9133));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__9144 = (j + (1));
var G__9145 = init__$3;
j = G__9144;
init__$2 = G__9145;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9134 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9134) : cljs.core.deref.call(null,G__9134));
} else {
var G__9146 = (i + len);
var G__9147 = init__$2;
i = G__9146;
init__$1 = G__9147;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4183__auto__ = self__.__hash;
if(!((h__4183__auto__ == null))){
return h__4183__auto__;
} else {
var h__4183__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4183__auto____$1;

return h__4183__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__9135 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__9135) : cljs.core.tv_editable_root.call(null,G__9135));
})(),(function (){var G__9136 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__9136) : cljs.core.tv_editable_tail.call(null,G__9136));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__9137 = init__$2;
var G__9138 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9137,G__9138) : f.call(null,G__9137,G__9138));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__9148 = (j + (1));
var G__9149 = init__$3;
j = G__9148;
init__$2 = G__9149;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9139 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9139) : cljs.core.deref.call(null,G__9139));
} else {
var G__9150 = (i + len);
var G__9151 = init__$2;
i = G__9150;
init__$1 = G__9151;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__9140 = coll__$1;
var G__9141 = cljs.core.first_array_for_longvec(coll__$1);
var G__9142 = (0);
var G__9143 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9140,G__9141,G__9142,G__9143) : cljs.core.chunked_seq.call(null,G__9140,G__9141,G__9142,G__9143));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4652__auto___9152 = len;
var i_9153 = (0);
while(true){
if((i_9153 < n__4652__auto___9152)){
(new_tail[i_9153] = (self__.tail[i_9153]));

var G__9154 = (i_9153 + (1));
i_9153 = G__9154;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__9155 = null;
var G__9155__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__9155__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__9155 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9155__2.call(this,self__,k);
case 3:
return G__9155__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9155.cljs$core$IFn$_invoke$arity$2 = G__9155__2;
G__9155.cljs$core$IFn$_invoke$arity$3 = G__9155__3;
return G__9155;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args9130){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9130)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function cljs$core$__GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__9156 = (i + (1));
var G__9157 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__9156;
out = G__9157;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
/**
 * Creates a new vector containing the contents of coll. JavaScript arrays
 * will be aliased and should not be modified.
 */
cljs.core.vec = (function cljs$core$vec(coll){
if(cljs.core.array_QMARK_(coll)){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
 * Creates a new vector containing the args.
 * @param {...*} var_args
 */
cljs.core.vector = (function() { 
var cljs$core$vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var cljs$core$vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__9158__i = 0, G__9158__a = new Array(arguments.length -  0);
while (G__9158__i < G__9158__a.length) {G__9158__a[G__9158__i] = arguments[G__9158__i + 0]; ++G__9158__i;}
  args = new cljs.core.IndexedSeq(G__9158__a,0);
} 
return cljs$core$vector__delegate.call(this,args);};
cljs$core$vector.cljs$lang$maxFixedArity = 0;
cljs$core$vector.cljs$lang$applyTo = (function (arglist__9159){
var args = cljs.core.seq(arglist__9159);
return cljs$core$vector__delegate(args);
});
cljs$core$vector.cljs$core$IFn$_invoke$arity$variadic = cljs$core$vector__delegate;
return cljs$core$vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__9160 = self__.vec;
var G__9161 = self__.node;
var G__9162 = self__.i;
var G__9163 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9160,G__9161,G__9162,G__9163) : cljs.core.chunked_seq.call(null,G__9160,G__9161,G__9162,G__9163));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4183__auto__ = self__.__hash;
if(!((h__4183__auto__ == null))){
return h__4183__auto__;
} else {
var h__4183__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4183__auto____$1;

return h__4183__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__9164 = self__.vec;
var G__9165 = (self__.i + self__.off);
var G__9166 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__9164,G__9165,G__9166) : cljs.core.subvec.call(null,G__9164,G__9165,G__9166));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__9167 = self__.vec;
var G__9168 = (self__.i + self__.off);
var G__9169 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__9167,G__9168,G__9169) : cljs.core.subvec.call(null,G__9167,G__9168,G__9169));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__9170 = self__.vec;
var G__9171 = self__.node;
var G__9172 = self__.i;
var G__9173 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9170,G__9171,G__9172,G__9173) : cljs.core.chunked_seq.call(null,G__9170,G__9171,G__9172,G__9173));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__9174 = self__.vec;
var G__9175 = cljs.core.unchecked_array_for(self__.vec,end);
var G__9176 = end;
var G__9177 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9174,G__9175,G__9176,G__9177) : cljs.core.chunked_seq.call(null,G__9174,G__9175,G__9176,G__9177));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__9178 = self__.vec;
var G__9179 = self__.node;
var G__9180 = self__.i;
var G__9181 = self__.off;
var G__9182 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__9178,G__9179,G__9180,G__9181,G__9182) : cljs.core.chunked_seq.call(null,G__9178,G__9179,G__9180,G__9181,G__9182));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__9183 = self__.vec;
var G__9184 = cljs.core.unchecked_array_for(self__.vec,end);
var G__9185 = end;
var G__9186 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9183,G__9184,G__9185,G__9186) : cljs.core.chunked_seq.call(null,G__9183,G__9184,G__9185,G__9186));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function cljs$core$__GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
cljs.core.chunked_seq = (function() {
var cljs$core$chunked_seq = null;
var cljs$core$chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var cljs$core$chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var cljs$core$chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
cljs$core$chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return cljs$core$chunked_seq__3.call(this,vec,node,i);
case 4:
return cljs$core$chunked_seq__4.call(this,vec,node,i,off);
case 5:
return cljs$core$chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$3 = cljs$core$chunked_seq__3;
cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$4 = cljs$core$chunked_seq__4;
cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$5 = cljs$core$chunked_seq__5;
return cljs$core$chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167666463;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var i = self__.start;
var j = (0);
var init__$1 = init;
while(true){
if((i < self__.end)){
var init__$2 = (function (){var G__9188 = init__$1;
var G__9189 = j;
var G__9190 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9188,G__9189,G__9190) : f.call(null,G__9188,G__9189,G__9190));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9191 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9191) : cljs.core.deref.call(null,G__9191));
} else {
var G__9213 = (i + (1));
var G__9214 = (j + (1));
var G__9215 = init__$2;
i = G__9213;
j = G__9214;
init__$1 = G__9215;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__9192 = self__.meta;
var G__9193 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__9194 = self__.start;
var G__9195 = (function (){var x__4079__auto__ = self__.end;
var y__4080__auto__ = (v_pos + (1));
return ((x__4079__auto__ > y__4080__auto__) ? x__4079__auto__ : y__4080__auto__);
})();
var G__9196 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9192,G__9193,G__9194,G__9195,G__9196) : cljs.core.build_subvec.call(null,G__9192,G__9193,G__9194,G__9195,G__9196));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__9197 = self__.meta;
var G__9198 = self__.v;
var G__9199 = self__.start;
var G__9200 = (self__.end - (1));
var G__9201 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9197,G__9198,G__9199,G__9200,G__9201) : cljs.core.build_subvec.call(null,G__9197,G__9198,G__9199,G__9200,G__9201));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4183__auto__ = self__.__hash;
if(!((h__4183__auto__ == null))){
return h__4183__auto__;
} else {
var h__4183__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4183__auto____$1;

return h__4183__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function cljs$core$subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return cljs$core$subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__9203 = meta__$1;
var G__9204 = self__.v;
var G__9205 = self__.start;
var G__9206 = self__.end;
var G__9207 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9203,G__9204,G__9205,G__9206,G__9207) : cljs.core.build_subvec.call(null,G__9203,G__9204,G__9205,G__9206,G__9207));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__9208 = self__.meta;
var G__9209 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__9210 = self__.start;
var G__9211 = (self__.end + (1));
var G__9212 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9208,G__9209,G__9210,G__9211,G__9212) : cljs.core.build_subvec.call(null,G__9208,G__9209,G__9210,G__9211,G__9212));
});

cljs.core.Subvec.prototype.call = (function() {
var G__9216 = null;
var G__9216__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__9216__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__9216 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9216__2.call(this,self__,k);
case 3:
return G__9216__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9216.cljs$core$IFn$_invoke$arity$2 = G__9216__2;
G__9216.cljs$core$IFn$_invoke$arity$3 = G__9216__3;
return G__9216;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args9187){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9187)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function cljs$core$__GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
cljs.core.build_subvec = (function cljs$core$build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__9217 = meta;
var G__9218 = v.v;
var G__9219 = (v.start + start);
var G__9220 = (v.start + end);
var G__9221 = __hash;
meta = G__9217;
v = G__9218;
start = G__9219;
end = G__9220;
__hash = G__9221;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
 * Returns a persistent vector of the items in vector from
 * start (inclusive) to end (exclusive).  If end is not supplied,
 * defaults to (count vector). This operation is O(1) and very fast, as
 * the resulting vector shares structure with the original and no
 * trimming is done.
 */
cljs.core.subvec = (function() {
var cljs$core$subvec = null;
var cljs$core$subvec__2 = (function (v,start){
return cljs$core$subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var cljs$core$subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
cljs$core$subvec = function(v,start,end){
switch(arguments.length){
case 2:
return cljs$core$subvec__2.call(this,v,start);
case 3:
return cljs$core$subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$subvec.cljs$core$IFn$_invoke$arity$2 = cljs$core$subvec__2;
cljs$core$subvec.cljs$core$IFn$_invoke$arity$3 = cljs$core$subvec__3;
return cljs$core$subvec;
})()
;
cljs.core.tv_ensure_editable = (function cljs$core$tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function cljs$core$tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj9228 = {};
return obj9228;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function cljs$core$tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function cljs$core$tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return cljs$core$tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function cljs$core$tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = cljs$core$tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function cljs$core$unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__9236 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__9237 = (level - (5));
node = G__9236;
level = G__9237;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__9241 = null;
var G__9241__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9241__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9241 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9241__2.call(this,self__,k);
case 3:
return G__9241__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9241.cljs$core$IFn$_invoke$arity$2 = G__9241__2;
G__9241.cljs$core$IFn$_invoke$arity$3 = G__9241__3;
return G__9241;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args9238){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9238)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function cljs$core$go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,cljs$core$go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function cljs$core$__GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4183__auto__ = self__.__hash;
if(!((h__4183__auto__ == null))){
return h__4183__auto__;
} else {
var h__4183__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4183__auto____$1;

return h__4183__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function cljs$core$__GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4183__auto__ = self__.__hash;
if(!((h__4183__auto__ == null))){
return h__4183__auto__;
} else {
var h__4183__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4183__auto____$1;

return h__4183__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3767__auto__ = self__.front;
if(cljs.core.truth_(or__3767__auto__)){
return or__3767__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3767__auto__ = self__.rear;
if(cljs.core.truth_(or__3767__auto__)){
return or__3767__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function cljs$core$__GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function cljs$core$__GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
 * Assumes y is a map. Returns true if x equals y, otherwise returns
 * false.
 */
cljs.core.equiv_map = (function cljs$core$equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function cljs$core$scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__9242 = (i + incr);
i = G__9242;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function cljs$core$obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function cljs$core$obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__9243 = (i + (1));
var G__9244 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__9243;
out = G__9244;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function cljs$core$obj_clone(obj,ks){
var new_obj = (function (){var obj9248 = {};
return obj9248;
})();
var l = ks.length;
var i_9249 = (0);
while(true){
if((i_9249 < l)){
var k_9250 = (ks[i_9249]);
(new_obj[k_9250] = (obj[k_9250]));

var G__9251 = (i_9249 + (1));
i_9249 = G__9251;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3755__auto__ = (function (){var G__9255 = k;
return goog.isString(G__9255);
})();
if(cljs.core.truth_(and__3755__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3755__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__9256 = init__$1;
var G__9257 = k;
var G__9258 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9256,G__9257,G__9258) : f.call(null,G__9256,G__9257,G__9258));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9259 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9259) : cljs.core.deref.call(null,G__9259));
} else {
var G__9265 = cljs.core.rest(keys__$1);
var G__9266 = init__$2;
keys__$1 = G__9265;
init__$1 = G__9266;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4183__auto__ = self__.__hash;
if(!((h__4183__auto__ == null))){
return h__4183__auto__;
} else {
var h__4183__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4183__auto____$1;

return h__4183__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3755__auto__ = (function (){var G__9261 = k;
return goog.isString(G__9261);
})();
if(cljs.core.truth_(and__3755__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3755__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__9262 = k;
return goog.isString(G__9262);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3755__auto__ = (function (){var G__9264 = k;
return goog.isString(G__9264);
})();
if(cljs.core.truth_(and__3755__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3755__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__9252_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__9252_SHARP_,(self__.strobj[p1__9252_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__9267 = null;
var G__9267__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9267__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9267 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9267__2.call(this,self__,k);
case 3:
return G__9267__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9267.cljs$core$IFn$_invoke$arity$2 = G__9267__2;
G__9267.cljs$core$IFn$_invoke$arity$3 = G__9267__3;
return G__9267;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args9253){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9253)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function cljs$core$__GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj9269 = {};
return obj9269;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__9270 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9270,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9270,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function cljs$core$__GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function cljs$core$es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function cljs$core$__GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function cljs$core$es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function cljs$core$array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__9271 = (i + (2));
i = G__9271;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function cljs$core$array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__9272 = (i + (2));
i = G__9272;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function cljs$core$array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__9273 = (i + (2));
i = G__9273;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function cljs$core$array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__9274 = (i + (2));
i = G__9274;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function cljs$core$array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__9275 = (i + (2));
i = G__9275;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function cljs$core$array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3767__auto__ = (function (){var G__9279 = k;
return goog.isString(G__9279);
})();
if(cljs.core.truth_(or__3767__auto__)){
return or__3767__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function cljs$core$array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_9280 = (0);
while(true){
if((i_9280 < l)){
(narr[i_9280] = (arr[i_9280]));

var G__9281 = (i_9280 + (1));
i_9280 = G__9281;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function cljs$core$__GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
cljs.core.persistent_array_map_seq = (function cljs$core$persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function cljs$core$__GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9283 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__9283) : cljs.core.keys.call(null,G__9283));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9284 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__9284) : cljs.core.vals.call(null,G__9284));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__9285 = cljs.core.seq(coll);
var chunk__9286 = null;
var count__9287 = (0);
var i__9288 = (0);
while(true){
if((i__9288 < count__9287)){
var vec__9289 = chunk__9286.cljs$core$IIndexed$_nth$arity$2(null,i__9288);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9289,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9289,(1),null);
var G__9290_9303 = v;
var G__9291_9304 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9290_9303,G__9291_9304) : f.call(null,G__9290_9303,G__9291_9304));

var G__9305 = seq__9285;
var G__9306 = chunk__9286;
var G__9307 = count__9287;
var G__9308 = (i__9288 + (1));
seq__9285 = G__9305;
chunk__9286 = G__9306;
count__9287 = G__9307;
i__9288 = G__9308;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__9285);
if(temp__4126__auto__){
var seq__9285__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9285__$1)){
var c__4552__auto__ = cljs.core.chunk_first(seq__9285__$1);
var G__9309 = cljs.core.chunk_rest(seq__9285__$1);
var G__9310 = c__4552__auto__;
var G__9311 = cljs.core.count(c__4552__auto__);
var G__9312 = (0);
seq__9285 = G__9309;
chunk__9286 = G__9310;
count__9287 = G__9311;
i__9288 = G__9312;
continue;
} else {
var vec__9292 = cljs.core.first(seq__9285__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9292,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9292,(1),null);
var G__9293_9313 = v;
var G__9294_9314 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9293_9313,G__9294_9314) : f.call(null,G__9293_9313,G__9294_9314));

var G__9315 = cljs.core.next(seq__9285__$1);
var G__9316 = null;
var G__9317 = (0);
var G__9318 = (0);
seq__9285 = G__9315;
chunk__9286 = G__9316;
count__9287 = G__9317;
i__9288 = G__9318;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__9295 = init__$1;
var G__9296 = (self__.arr[i]);
var G__9297 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9295,G__9296,G__9297) : f.call(null,G__9295,G__9296,G__9297));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9298 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9298) : cljs.core.deref.call(null,G__9298));
} else {
var G__9319 = (i + (2));
var G__9320 = init__$2;
i = G__9319;
init__$1 = G__9320;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4183__auto__ = self__.__hash;
if(!((h__4183__auto__ == null))){
return h__4183__auto__;
} else {
var h__4183__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4183__auto____$1;

return h__4183__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__9299 = other;
if(G__9299){
var bit__4434__auto__ = (G__9299.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4434__auto__) || (G__9299.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__9321 = (i + (2));
i = G__9321;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj9301 = {};
return obj9301;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__9322 = (s + (2));
var G__9323 = d;
s = G__9322;
d = G__9323;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__9324 = (s + (2));
var G__9325 = (d + (2));
s = G__9324;
d = G__9325;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__9302 = cljs.core.aclone(self__.arr);
(G__9302[(idx + (1))] = v);

return G__9302;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__9326 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__9327 = cljs.core.next(es);
ret = G__9326;
es = G__9327;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__9328 = null;
var G__9328__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9328__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9328 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9328__2.call(this,self__,k);
case 3:
return G__9328__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9328.cljs$core$IFn$_invoke$arity$2 = G__9328__2;
G__9328.cljs$core$IFn$_invoke$arity$3 = G__9328__3;
return G__9328;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args9282){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9282)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function cljs$core$__GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__9329 = (i + (2));
var G__9330 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__9329;
ret = G__9330;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__9331_9339 = self__.arr;
G__9331_9339.pop();

G__9331_9339.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__9332 = self__.len;
var G__9333 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__9332,G__9333) : cljs.core.array__GT_transient_hash_map.call(null,G__9332,G__9333));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__9334 = o;
if(G__9334){
var bit__4441__auto__ = (G__9334.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4441__auto__) || (G__9334.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__9334.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__9334);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__9334);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__9335 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9335) : cljs.core.key.call(null,G__9335));
})(),(function (){var G__9336 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9336) : cljs.core.val.call(null,G__9336));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__9340 = cljs.core.next(es);
var G__9341 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__9337 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9337) : cljs.core.key.call(null,G__9337));
})(),(function (){var G__9338 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9338) : cljs.core.val.call(null,G__9338));
})());
es = G__9340;
tcoll__$2 = G__9341;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function cljs$core$__GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function cljs$core$array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__9342 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__9343 = (i + (2));
out = G__9342;
i = G__9343;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function cljs$core$__GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function cljs$core$key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function cljs$core$mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var cljs$core$clone_and_set = null;
var cljs$core$clone_and_set__3 = (function (arr,i,a){
var G__9346 = cljs.core.aclone(arr);
(G__9346[i] = a);

return G__9346;
});
var cljs$core$clone_and_set__5 = (function (arr,i,a,j,b){
var G__9347 = cljs.core.aclone(arr);
(G__9347[i] = a);

(G__9347[j] = b);

return G__9347;
});
cljs$core$clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return cljs$core$clone_and_set__3.call(this,arr,i,a);
case 5:
return cljs$core$clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$clone_and_set.cljs$core$IFn$_invoke$arity$3 = cljs$core$clone_and_set__3;
cljs$core$clone_and_set.cljs$core$IFn$_invoke$arity$5 = cljs$core$clone_and_set__5;
return cljs$core$clone_and_set;
})()
;
cljs.core.remove_pair = (function cljs$core$remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function cljs$core$bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function cljs$core$bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var cljs$core$edit_and_set = null;
var cljs$core$edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var cljs$core$edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
cljs$core$edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return cljs$core$edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return cljs$core$edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$edit_and_set.cljs$core$IFn$_invoke$arity$4 = cljs$core$edit_and_set__4;
cljs$core$edit_and_set.cljs$core$IFn$_invoke$arity$6 = cljs$core$edit_and_set__6;
return cljs$core$edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function cljs$core$inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__9352 = init__$1;
var G__9353 = k;
var G__9354 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9352,G__9353,G__9354) : f.call(null,G__9352,G__9353,G__9354));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9355 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9355) : cljs.core.deref.call(null,G__9355));
} else {
var G__9356 = (i + (2));
var G__9357 = init__$2;
i = G__9356;
init__$1 = G__9357;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__9358 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__9358) : cljs.core.create_inode_seq.call(null,G__9358));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_9372 = (0);
var j_9373 = (0);
while(true){
if((i_9372 < (32))){
if((((self__.bitmap >>> i_9372) & (1)) === (0))){
var G__9374 = (i_9372 + (1));
var G__9375 = j_9373;
i_9372 = G__9374;
j_9373 = G__9375;
continue;
} else {
(nodes[i_9372] = ((!(((self__.arr[j_9373]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_9373])),(self__.arr[j_9373]),(self__.arr[(j_9373 + (1))]),added_leaf_QMARK_):(self__.arr[(j_9373 + (1))])));

var G__9376 = (i_9372 + (1));
var G__9377 = (j_9373 + (2));
i_9372 = G__9376;
j_9373 = G__9377;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__9359 = edit__$1;
var G__9360 = (shift + (5));
var G__9361 = key_or_nil;
var G__9362 = val_or_node;
var G__9363 = hash;
var G__9364 = key;
var G__9365 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__9359,G__9360,G__9361,G__9362,G__9363,G__9364,G__9365) : cljs.core.create_node.call(null,G__9359,G__9360,G__9361,G__9362,G__9363,G__9364,G__9365));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_9378 = (0);
var j_9379 = (0);
while(true){
if((i_9378 < (32))){
if((((self__.bitmap >>> i_9378) & (1)) === (0))){
var G__9380 = (i_9378 + (1));
var G__9381 = j_9379;
i_9378 = G__9380;
j_9379 = G__9381;
continue;
} else {
(nodes[i_9378] = ((!(((self__.arr[j_9379]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_9379])),(self__.arr[j_9379]),(self__.arr[(j_9379 + (1))]),added_leaf_QMARK_):(self__.arr[(j_9379 + (1))])));

var G__9382 = (i_9378 + (1));
var G__9383 = (j_9379 + (2));
i_9378 = G__9382;
j_9379 = G__9383;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__9366 = (shift + (5));
var G__9367 = key_or_nil;
var G__9368 = val_or_node;
var G__9369 = hash;
var G__9370 = key;
var G__9371 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__9366,G__9367,G__9368,G__9369,G__9370,G__9371) : cljs.core.create_node.call(null,G__9366,G__9367,G__9368,G__9369,G__9370,G__9371));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function cljs$core$__GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function cljs$core$pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__9384 = (i + (1));
var G__9385 = (j + (2));
var G__9386 = (bitmap | ((1) << i));
i = G__9384;
j = G__9385;
bitmap = G__9386;
continue;
} else {
var G__9387 = (i + (1));
var G__9388 = j;
var G__9389 = bitmap;
i = G__9387;
j = G__9388;
bitmap = G__9389;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__9390 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__9390) : cljs.core.create_array_node_seq.call(null,G__9390));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9391 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9391) : cljs.core.deref.call(null,G__9391));
} else {
var G__9392 = (i + (1));
var G__9393 = init__$2;
i = G__9392;
init__$1 = G__9393;
continue;
}
} else {
var G__9394 = (i + (1));
var G__9395 = init__$1;
i = G__9394;
init__$1 = G__9395;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function cljs$core$__GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function cljs$core$hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__9396 = (i + (2));
i = G__9396;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__9397 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__9397) : cljs.core.create_inode_seq.call(null,G__9397));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function cljs$core$__GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var cljs$core$create_node = null;
var cljs$core$create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var cljs$core$create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
cljs$core$create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return cljs$core$create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return cljs$core$create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$create_node.cljs$core$IFn$_invoke$arity$6 = cljs$core$create_node__6;
cljs$core$create_node.cljs$core$IFn$_invoke$arity$7 = cljs$core$create_node__7;
return cljs$core$create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4183__auto__ = self__.__hash;
if(!((h__4183__auto__ == null))){
return h__4183__auto__;
} else {
var h__4183__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4183__auto____$1;

return h__4183__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__9398 = self__.nodes;
var G__9399 = (self__.i + (2));
var G__9400 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__9398,G__9399,G__9400) : cljs.core.create_inode_seq.call(null,G__9398,G__9399,G__9400));
} else {
var G__9401 = self__.nodes;
var G__9402 = self__.i;
var G__9403 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__9401,G__9402,G__9403) : cljs.core.create_inode_seq.call(null,G__9401,G__9402,G__9403));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function cljs$core$__GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
cljs.core.create_inode_seq = (function() {
var cljs$core$create_inode_seq = null;
var cljs$core$create_inode_seq__1 = (function (nodes){
return cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var cljs$core$create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__9407 = (j + (2));
j = G__9407;
continue;
}
} else {
var G__9408 = (j + (2));
j = G__9408;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
cljs$core$create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return cljs$core$create_inode_seq__1.call(this,nodes);
case 3:
return cljs$core$create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$create_inode_seq__1;
cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$3 = cljs$core$create_inode_seq__3;
return cljs$core$create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4183__auto__ = self__.__hash;
if(!((h__4183__auto__ == null))){
return h__4183__auto__;
} else {
var h__4183__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4183__auto____$1;

return h__4183__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__9409 = null;
var G__9410 = self__.nodes;
var G__9411 = self__.i;
var G__9412 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__9409,G__9410,G__9411,G__9412) : cljs.core.create_array_node_seq.call(null,G__9409,G__9410,G__9411,G__9412));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function cljs$core$__GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var cljs$core$create_array_node_seq = null;
var cljs$core$create_array_node_seq__1 = (function (nodes){
return cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var cljs$core$create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__9417 = (j + (1));
j = G__9417;
continue;
}
} else {
var G__9418 = (j + (1));
j = G__9418;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
cljs$core$create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return cljs$core$create_array_node_seq__1.call(this,meta);
case 4:
return cljs$core$create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$create_array_node_seq__1;
cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = cljs$core$create_array_node_seq__4;
return cljs$core$create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9420 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__9420) : cljs.core.keys.call(null,G__9420));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9421 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__9421) : cljs.core.vals.call(null,G__9421));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__9422 = cljs.core.seq(coll);
var chunk__9423 = null;
var count__9424 = (0);
var i__9425 = (0);
while(true){
if((i__9425 < count__9424)){
var vec__9426 = chunk__9423.cljs$core$IIndexed$_nth$arity$2(null,i__9425);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9426,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9426,(1),null);
var G__9427_9438 = v;
var G__9428_9439 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9427_9438,G__9428_9439) : f.call(null,G__9427_9438,G__9428_9439));

var G__9440 = seq__9422;
var G__9441 = chunk__9423;
var G__9442 = count__9424;
var G__9443 = (i__9425 + (1));
seq__9422 = G__9440;
chunk__9423 = G__9441;
count__9424 = G__9442;
i__9425 = G__9443;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__9422);
if(temp__4126__auto__){
var seq__9422__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9422__$1)){
var c__4552__auto__ = cljs.core.chunk_first(seq__9422__$1);
var G__9444 = cljs.core.chunk_rest(seq__9422__$1);
var G__9445 = c__4552__auto__;
var G__9446 = cljs.core.count(c__4552__auto__);
var G__9447 = (0);
seq__9422 = G__9444;
chunk__9423 = G__9445;
count__9424 = G__9446;
i__9425 = G__9447;
continue;
} else {
var vec__9429 = cljs.core.first(seq__9422__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9429,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9429,(1),null);
var G__9430_9448 = v;
var G__9431_9449 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9430_9448,G__9431_9449) : f.call(null,G__9430_9448,G__9431_9449));

var G__9450 = cljs.core.next(seq__9422__$1);
var G__9451 = null;
var G__9452 = (0);
var G__9453 = (0);
seq__9422 = G__9450;
chunk__9423 = G__9451;
count__9424 = G__9452;
i__9425 = G__9453;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__9432 = init;
var G__9433 = null;
var G__9434 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9432,G__9433,G__9434) : f.call(null,G__9432,G__9433,G__9434));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__9435 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9435) : cljs.core.deref.call(null,G__9435));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4183__auto__ = self__.__hash;
if(!((h__4183__auto__ == null))){
return h__4183__auto__;
} else {
var h__4183__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4183__auto____$1;

return h__4183__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj9437 = {};
return obj9437;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__9454 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__9455 = cljs.core.next(es);
ret = G__9454;
es = G__9455;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__9456 = null;
var G__9456__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9456__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9456 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9456__2.call(this,self__,k);
case 3:
return G__9456__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9456.cljs$core$IFn$_invoke$arity$2 = G__9456__2;
G__9456.cljs$core$IFn$_invoke$arity$3 = G__9456__3;
return G__9456;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args9419){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9419)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function cljs$core$__GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__9457 = (i + (2));
var G__9458 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__9457;
ret = G__9458;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__9459 = (i + (1));
var G__9460 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__9459;
out = G__9460;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__9461 = o;
if(G__9461){
var bit__4441__auto__ = (G__9461.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4441__auto__) || (G__9461.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__9461.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__9461);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__9461);
}
})()){
return tcoll.assoc_BANG_((function (){var G__9462 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9462) : cljs.core.key.call(null,G__9462));
})(),(function (){var G__9463 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9463) : cljs.core.val.call(null,G__9463));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__9466 = cljs.core.next(es);
var G__9467 = tcoll__$1.assoc_BANG_((function (){var G__9464 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9464) : cljs.core.key.call(null,G__9464));
})(),(function (){var G__9465 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9465) : cljs.core.val.call(null,G__9465));
})());
es = G__9466;
tcoll__$1 = G__9467;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function cljs$core$__GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function cljs$core$tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__9468 = ((ascending_QMARK_)?t.left:t.right);
var G__9469 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__9468;
stack__$1 = G__9469;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4183__auto__ = self__.__hash;
if(!((h__4183__auto__ == null))){
return h__4183__auto__;
} else {
var h__4183__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4183__auto____$1;

return h__4183__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function cljs$core$__GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
cljs.core.create_tree_map_seq = (function cljs$core$create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function cljs$core$balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function cljs$core$balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function cljs$core$balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function cljs$core$balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function cljs$core$tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?cljs$core$tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__9482 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9482) : cljs.core.deref.call(null,G__9482));
} else {
var init__$2 = (function (){var G__9483 = init__$1;
var G__9484 = node.key;
var G__9485 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9483,G__9484,G__9485) : f.call(null,G__9483,G__9484,G__9485));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9486 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9486) : cljs.core.deref.call(null,G__9486));
} else {
var init__$3 = ((!((node.right == null)))?cljs$core$tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__9487 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9487) : cljs.core.deref.call(null,G__9487));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4183__auto__ = self__.__hash;
if(!((h__4183__auto__ == null))){
return h__4183__auto__;
} else {
var h__4183__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4183__auto____$1;

return h__4183__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__9489 = null;
var G__9489__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9489__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9489 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9489__2.call(this,self__,k);
case 3:
return G__9489__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9489.cljs$core$IFn$_invoke$arity$2 = G__9489__2;
G__9489.cljs$core$IFn$_invoke$arity$3 = G__9489__3;
return G__9489;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args9488){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9488)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function cljs$core$__GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4183__auto__ = self__.__hash;
if(!((h__4183__auto__ == null))){
return h__4183__auto__;
} else {
var h__4183__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4183__auto____$1;

return h__4183__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__9491 = null;
var G__9491__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9491__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9491 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9491__2.call(this,self__,k);
case 3:
return G__9491__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9491.cljs$core$IFn$_invoke$arity$2 = G__9491__2;
G__9491.cljs$core$IFn$_invoke$arity$3 = G__9491__3;
return G__9491;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args9490){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9490)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function cljs$core$__GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
cljs.core.tree_map_add = (function cljs$core$tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__9504 = k;
var G__9505 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9504,G__9505) : comp.call(null,G__9504,G__9505));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = cljs$core$tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = cljs$core$tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function cljs$core$tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = cljs$core$tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,cljs$core$tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,cljs$core$tree_map_append(left,right.left),right.right,null));
} else {
var app = cljs$core$tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function cljs$core$tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__9524 = k;
var G__9525 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9524,G__9525) : comp.call(null,G__9524,G__9525));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = cljs$core$tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = cljs$core$tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function cljs$core$tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__9536 = k;
var G__9537 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9536,G__9537) : comp.call(null,G__9536,G__9537));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,cljs$core$tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,cljs$core$tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__9539 = cljs.core.seq(coll);
var chunk__9540 = null;
var count__9541 = (0);
var i__9542 = (0);
while(true){
if((i__9542 < count__9541)){
var vec__9543 = chunk__9540.cljs$core$IIndexed$_nth$arity$2(null,i__9542);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9543,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9543,(1),null);
var G__9544_9556 = v;
var G__9545_9557 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9544_9556,G__9545_9557) : f.call(null,G__9544_9556,G__9545_9557));

var G__9558 = seq__9539;
var G__9559 = chunk__9540;
var G__9560 = count__9541;
var G__9561 = (i__9542 + (1));
seq__9539 = G__9558;
chunk__9540 = G__9559;
count__9541 = G__9560;
i__9542 = G__9561;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__9539);
if(temp__4126__auto__){
var seq__9539__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9539__$1)){
var c__4552__auto__ = cljs.core.chunk_first(seq__9539__$1);
var G__9562 = cljs.core.chunk_rest(seq__9539__$1);
var G__9563 = c__4552__auto__;
var G__9564 = cljs.core.count(c__4552__auto__);
var G__9565 = (0);
seq__9539 = G__9562;
chunk__9540 = G__9563;
count__9541 = G__9564;
i__9542 = G__9565;
continue;
} else {
var vec__9546 = cljs.core.first(seq__9539__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9546,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9546,(1),null);
var G__9547_9566 = v;
var G__9548_9567 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9547_9566,G__9548_9567) : f.call(null,G__9547_9566,G__9548_9567));

var G__9568 = cljs.core.next(seq__9539__$1);
var G__9569 = null;
var G__9570 = (0);
var G__9571 = (0);
seq__9539 = G__9568;
chunk__9540 = G__9569;
count__9541 = G__9570;
i__9542 = G__9571;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9549 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__9549) : cljs.core.keys.call(null,G__9549));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9550 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__9550) : cljs.core.vals.call(null,G__9550));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__9551 = k;
var G__9552 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__9551,G__9552) : self__.comp.call(null,G__9551,G__9552));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__9572 = t.left;
t = G__9572;
continue;
} else {
var G__9573 = t.right;
t = G__9573;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4183__auto__ = self__.__hash;
if(!((h__4183__auto__ == null))){
return h__4183__auto__;
} else {
var h__4183__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4183__auto____$1;

return h__4183__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__9574 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__9575 = cljs.core.next(es);
ret = G__9574;
es = G__9575;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__9576 = null;
var G__9576__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9576__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9576 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9576__2.call(this,self__,k);
case 3:
return G__9576__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9576.cljs$core$IFn$_invoke$arity$2 = G__9576__2;
G__9576.cljs$core$IFn$_invoke$arity$3 = G__9576__3;
return G__9576;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args9538){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9538)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__9553 = k;
var G__9554 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__9553,G__9554) : self__.comp.call(null,G__9553,G__9554));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__9577 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__9578 = t.left;
stack = G__9577;
t = G__9578;
continue;
} else {
var G__9579 = stack;
var G__9580 = t.right;
stack = G__9579;
t = G__9580;
continue;
}
} else {
if((c > (0))){
var G__9581 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__9582 = t.right;
stack = G__9581;
t = G__9582;
continue;
} else {
var G__9583 = stack;
var G__9584 = t.left;
stack = G__9583;
t = G__9584;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__9555 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9555) : cljs.core.key.call(null,G__9555));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function cljs$core$__GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
/**
 * keyval => key val
 * Returns a new hash map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.hash_map = (function() { 
var cljs$core$hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__9585 = cljs.core.nnext(in$);
var G__9586 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__9585;
out = G__9586;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var cljs$core$hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__9587__i = 0, G__9587__a = new Array(arguments.length -  0);
while (G__9587__i < G__9587__a.length) {G__9587__a[G__9587__i] = arguments[G__9587__i + 0]; ++G__9587__i;}
  keyvals = new cljs.core.IndexedSeq(G__9587__a,0);
} 
return cljs$core$hash_map__delegate.call(this,keyvals);};
cljs$core$hash_map.cljs$lang$maxFixedArity = 0;
cljs$core$hash_map.cljs$lang$applyTo = (function (arglist__9588){
var keyvals = cljs.core.seq(arglist__9588);
return cljs$core$hash_map__delegate(keyvals);
});
cljs$core$hash_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$hash_map__delegate;
return cljs$core$hash_map;
})()
;
/**
 * keyval => key val
 * Returns a new array map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.array_map = (function() { 
var cljs$core$array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var cljs$core$array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__9589__i = 0, G__9589__a = new Array(arguments.length -  0);
while (G__9589__i < G__9589__a.length) {G__9589__a[G__9589__i] = arguments[G__9589__i + 0]; ++G__9589__i;}
  keyvals = new cljs.core.IndexedSeq(G__9589__a,0);
} 
return cljs$core$array_map__delegate.call(this,keyvals);};
cljs$core$array_map.cljs$lang$maxFixedArity = 0;
cljs$core$array_map.cljs$lang$applyTo = (function (arglist__9590){
var keyvals = cljs.core.seq(arglist__9590);
return cljs$core$array_map__delegate(keyvals);
});
cljs$core$array_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$array_map__delegate;
return cljs$core$array_map;
})()
;
/**
 * keyval => key val
 * Returns a new object map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.obj_map = (function() { 
var cljs$core$obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj9594 = {};
return obj9594;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__9595 = cljs.core.nnext(kvs);
kvs = G__9595;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var cljs$core$obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__9596__i = 0, G__9596__a = new Array(arguments.length -  0);
while (G__9596__i < G__9596__a.length) {G__9596__a[G__9596__i] = arguments[G__9596__i + 0]; ++G__9596__i;}
  keyvals = new cljs.core.IndexedSeq(G__9596__a,0);
} 
return cljs$core$obj_map__delegate.call(this,keyvals);};
cljs$core$obj_map.cljs$lang$maxFixedArity = 0;
cljs$core$obj_map.cljs$lang$applyTo = (function (arglist__9597){
var keyvals = cljs.core.seq(arglist__9597);
return cljs$core$obj_map__delegate(keyvals);
});
cljs$core$obj_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$obj_map__delegate;
return cljs$core$obj_map;
})()
;
/**
 * keyval => key val
 * Returns a new sorted map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.sorted_map = (function() { 
var cljs$core$sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__9598 = cljs.core.nnext(in$);
var G__9599 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__9598;
out = G__9599;
continue;
} else {
return out;
}
break;
}
};
var cljs$core$sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__9600__i = 0, G__9600__a = new Array(arguments.length -  0);
while (G__9600__i < G__9600__a.length) {G__9600__a[G__9600__i] = arguments[G__9600__i + 0]; ++G__9600__i;}
  keyvals = new cljs.core.IndexedSeq(G__9600__a,0);
} 
return cljs$core$sorted_map__delegate.call(this,keyvals);};
cljs$core$sorted_map.cljs$lang$maxFixedArity = 0;
cljs$core$sorted_map.cljs$lang$applyTo = (function (arglist__9601){
var keyvals = cljs.core.seq(arglist__9601);
return cljs$core$sorted_map__delegate(keyvals);
});
cljs$core$sorted_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_map__delegate;
return cljs$core$sorted_map;
})()
;
/**
 * keyval => key val
 * Returns a new sorted map with supplied mappings, using the supplied comparator.
 * @param {...*} var_args
 */
cljs.core.sorted_map_by = (function() { 
var cljs$core$sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__9602 = cljs.core.nnext(in$);
var G__9603 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__9602;
out = G__9603;
continue;
} else {
return out;
}
break;
}
};
var cljs$core$sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__9604__i = 0, G__9604__a = new Array(arguments.length -  1);
while (G__9604__i < G__9604__a.length) {G__9604__a[G__9604__i] = arguments[G__9604__i + 1]; ++G__9604__i;}
  keyvals = new cljs.core.IndexedSeq(G__9604__a,0);
} 
return cljs$core$sorted_map_by__delegate.call(this,comparator,keyvals);};
cljs$core$sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs$core$sorted_map_by.cljs$lang$applyTo = (function (arglist__9605){
var comparator = cljs.core.first(arglist__9605);
var keyvals = cljs.core.rest(arglist__9605);
return cljs$core$sorted_map_by__delegate(comparator,keyvals);
});
cljs$core$sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_map_by__delegate;
return cljs$core$sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__9606 = self__.mseq;
if(G__9606){
var bit__4441__auto__ = (G__9606.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4441__auto__) || (G__9606.cljs$core$INext$)){
return true;
} else {
if((!G__9606.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9606);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9606);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__9607 = self__.mseq;
if(G__9607){
var bit__4441__auto__ = (G__9607.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4441__auto__) || (G__9607.cljs$core$INext$)){
return true;
} else {
if((!G__9607.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9607);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9607);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function cljs$core$__GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
/**
 * Returns a sequence of the map's keys.
 */
cljs.core.keys = (function cljs$core$keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
 * Returns the key of the map entry.
 */
cljs.core.key = (function cljs$core$key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__9608 = self__.mseq;
if(G__9608){
var bit__4441__auto__ = (G__9608.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4441__auto__) || (G__9608.cljs$core$INext$)){
return true;
} else {
if((!G__9608.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9608);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9608);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__9609 = self__.mseq;
if(G__9609){
var bit__4441__auto__ = (G__9609.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4441__auto__) || (G__9609.cljs$core$INext$)){
return true;
} else {
if((!G__9609.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9609);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9609);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function cljs$core$__GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
/**
 * Returns a sequence of the map's values.
 */
cljs.core.vals = (function cljs$core$vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
 * Returns the value in the map entry.
 */
cljs.core.val = (function cljs$core$val(map_entry){
return cljs.core._val(map_entry);
});
/**
 * Returns a map that consists of the rest of the maps conj-ed onto
 * the first.  If a key occurs in more than one map, the mapping from
 * the latter (left-to-right) will be the mapping in the result.
 * @param {...*} var_args
 */
cljs.core.merge = (function() { 
var cljs$core$merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__9610_SHARP_,p2__9611_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3767__auto__ = p1__9610_SHARP_;
if(cljs.core.truth_(or__3767__auto__)){
return or__3767__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__9611_SHARP_);
}),maps);
} else {
return null;
}
};
var cljs$core$merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__9612__i = 0, G__9612__a = new Array(arguments.length -  0);
while (G__9612__i < G__9612__a.length) {G__9612__a[G__9612__i] = arguments[G__9612__i + 0]; ++G__9612__i;}
  maps = new cljs.core.IndexedSeq(G__9612__a,0);
} 
return cljs$core$merge__delegate.call(this,maps);};
cljs$core$merge.cljs$lang$maxFixedArity = 0;
cljs$core$merge.cljs$lang$applyTo = (function (arglist__9613){
var maps = cljs.core.seq(arglist__9613);
return cljs$core$merge__delegate(maps);
});
cljs$core$merge.cljs$core$IFn$_invoke$arity$variadic = cljs$core$merge__delegate;
return cljs$core$merge;
})()
;
/**
 * Returns a map that consists of the rest of the maps conj-ed onto
 * the first.  If a key occurs in more than one map, the mapping(s)
 * from the latter (left-to-right) will be combined with the mapping in
 * the result by calling (f val-in-result val-in-latter).
 * @param {...*} var_args
 */
cljs.core.merge_with = (function() { 
var cljs$core$merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9616 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9617 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9616,G__9617) : f.call(null,G__9616,G__9617));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3767__auto__ = m1;
if(cljs.core.truth_(or__3767__auto__)){
return or__3767__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var cljs$core$merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__9618__i = 0, G__9618__a = new Array(arguments.length -  1);
while (G__9618__i < G__9618__a.length) {G__9618__a[G__9618__i] = arguments[G__9618__i + 1]; ++G__9618__i;}
  maps = new cljs.core.IndexedSeq(G__9618__a,0);
} 
return cljs$core$merge_with__delegate.call(this,f,maps);};
cljs$core$merge_with.cljs$lang$maxFixedArity = 1;
cljs$core$merge_with.cljs$lang$applyTo = (function (arglist__9619){
var f = cljs.core.first(arglist__9619);
var maps = cljs.core.rest(arglist__9619);
return cljs$core$merge_with__delegate(f,maps);
});
cljs$core$merge_with.cljs$core$IFn$_invoke$arity$variadic = cljs$core$merge_with__delegate;
return cljs$core$merge_with;
})()
;
/**
 * Returns a map containing only those entries in map whose key is in keys
 */
cljs.core.select_keys = (function cljs$core$select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__9620 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__9621 = cljs.core.next(keys);
ret = G__9620;
keys = G__9621;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__9624 = cljs.core.seq(coll);
var chunk__9625 = null;
var count__9626 = (0);
var i__9627 = (0);
while(true){
if((i__9627 < count__9626)){
var vec__9628 = chunk__9625.cljs$core$IIndexed$_nth$arity$2(null,i__9627);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9628,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9628,(1),null);
var G__9629_9634 = v;
var G__9630_9635 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9629_9634,G__9630_9635) : f.call(null,G__9629_9634,G__9630_9635));

var G__9636 = seq__9624;
var G__9637 = chunk__9625;
var G__9638 = count__9626;
var G__9639 = (i__9627 + (1));
seq__9624 = G__9636;
chunk__9625 = G__9637;
count__9626 = G__9638;
i__9627 = G__9639;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__9624);
if(temp__4126__auto__){
var seq__9624__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9624__$1)){
var c__4552__auto__ = cljs.core.chunk_first(seq__9624__$1);
var G__9640 = cljs.core.chunk_rest(seq__9624__$1);
var G__9641 = c__4552__auto__;
var G__9642 = cljs.core.count(c__4552__auto__);
var G__9643 = (0);
seq__9624 = G__9640;
chunk__9625 = G__9641;
count__9626 = G__9642;
i__9627 = G__9643;
continue;
} else {
var vec__9631 = cljs.core.first(seq__9624__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9631,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9631,(1),null);
var G__9632_9644 = v;
var G__9633_9645 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9632_9644,G__9633_9645) : f.call(null,G__9632_9644,G__9633_9645));

var G__9646 = cljs.core.next(seq__9624__$1);
var G__9647 = null;
var G__9648 = (0);
var G__9649 = (0);
seq__9624 = G__9646;
chunk__9625 = G__9647;
count__9626 = G__9648;
i__9627 = G__9649;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4183__auto__ = self__.__hash;
if(!((h__4183__auto__ == null))){
return h__4183__auto__;
} else {
var h__4183__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4183__auto____$1;

return h__4183__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__9622_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__9622_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__9650 = null;
var G__9650__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9650__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9650 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9650__2.call(this,self__,k);
case 3:
return G__9650__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9650.cljs$core$IFn$_invoke$arity$2 = G__9650__2;
G__9650.cljs$core$IFn$_invoke$arity$3 = G__9650__3;
return G__9650;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args9623){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9623)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function cljs$core$__GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__9651 = (i + (1));
var G__9652 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__9651;
out = G__9652;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__9653 = (i + (1));
var G__9654 = cljs.core._conj_BANG_(out,(items[i]));
i = G__9653;
out = G__9654;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__9656 = null;
var G__9656__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__9656__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__9656 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9656__2.call(this,self__,k);
case 3:
return G__9656__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9656.cljs$core$IFn$_invoke$arity$2 = G__9656__2;
G__9656.cljs$core$IFn$_invoke$arity$3 = G__9656__3;
return G__9656;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args9655){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9655)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function cljs$core$__GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__9659 = cljs.core.seq(coll);
var chunk__9660 = null;
var count__9661 = (0);
var i__9662 = (0);
while(true){
if((i__9662 < count__9661)){
var vec__9663 = chunk__9660.cljs$core$IIndexed$_nth$arity$2(null,i__9662);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9663,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9663,(1),null);
var G__9664_9669 = v;
var G__9665_9670 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9664_9669,G__9665_9670) : f.call(null,G__9664_9669,G__9665_9670));

var G__9671 = seq__9659;
var G__9672 = chunk__9660;
var G__9673 = count__9661;
var G__9674 = (i__9662 + (1));
seq__9659 = G__9671;
chunk__9660 = G__9672;
count__9661 = G__9673;
i__9662 = G__9674;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__9659);
if(temp__4126__auto__){
var seq__9659__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9659__$1)){
var c__4552__auto__ = cljs.core.chunk_first(seq__9659__$1);
var G__9675 = cljs.core.chunk_rest(seq__9659__$1);
var G__9676 = c__4552__auto__;
var G__9677 = cljs.core.count(c__4552__auto__);
var G__9678 = (0);
seq__9659 = G__9675;
chunk__9660 = G__9676;
count__9661 = G__9677;
i__9662 = G__9678;
continue;
} else {
var vec__9666 = cljs.core.first(seq__9659__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9666,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9666,(1),null);
var G__9667_9679 = v;
var G__9668_9680 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9667_9679,G__9668_9680) : f.call(null,G__9667_9679,G__9668_9680));

var G__9681 = cljs.core.next(seq__9659__$1);
var G__9682 = null;
var G__9683 = (0);
var G__9684 = (0);
seq__9659 = G__9681;
chunk__9660 = G__9682;
count__9661 = G__9683;
i__9662 = G__9684;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4183__auto__ = self__.__hash;
if(!((h__4183__auto__ == null))){
return h__4183__auto__;
} else {
var h__4183__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4183__auto____$1;

return h__4183__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__9657_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__9657_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__9685 = null;
var G__9685__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9685__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9685 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9685__2.call(this,self__,k);
case 3:
return G__9685__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9685.cljs$core$IFn$_invoke$arity$2 = G__9685__2;
G__9685.cljs$core$IFn$_invoke$arity$3 = G__9685__3;
return G__9685;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args9658){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9658)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function cljs$core$__GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
cljs.core.set_from_indexed_seq = (function cljs$core$set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4646__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4646__auto__.length)){
var G__9686 = (i + (1));
var G__9687 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__9686;
res = G__9687;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
 * Returns a set of the distinct elements of coll.
 */
cljs.core.set = (function cljs$core$set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__9688 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__9689 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__9688;
out = G__9689;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
 * Returns a new hash set with supplied keys.  Any equal keys are
 * handled as if by repeated uses of conj.
 * @param {...*} var_args
 */
cljs.core.hash_set = (function() {
var cljs$core$hash_set = null;
var cljs$core$hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var cljs$core$hash_set__1 = (function() { 
var G__9690__delegate = function (keys){
return cljs.core.set(keys);
};
var G__9690 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__9691__i = 0, G__9691__a = new Array(arguments.length -  0);
while (G__9691__i < G__9691__a.length) {G__9691__a[G__9691__i] = arguments[G__9691__i + 0]; ++G__9691__i;}
  keys = new cljs.core.IndexedSeq(G__9691__a,0);
} 
return G__9690__delegate.call(this,keys);};
G__9690.cljs$lang$maxFixedArity = 0;
G__9690.cljs$lang$applyTo = (function (arglist__9692){
var keys = cljs.core.seq(arglist__9692);
return G__9690__delegate(keys);
});
G__9690.cljs$core$IFn$_invoke$arity$variadic = G__9690__delegate;
return G__9690;
})()
;
cljs$core$hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return cljs$core$hash_set__0.call(this);
default:
var G__9693 = null;
if (arguments.length > 0) {
var G__9694__i = 0, G__9694__a = new Array(arguments.length -  0);
while (G__9694__i < G__9694__a.length) {G__9694__a[G__9694__i] = arguments[G__9694__i + 0]; ++G__9694__i;}
G__9693 = new cljs.core.IndexedSeq(G__9694__a,0);
}
return cljs$core$hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__9693);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$hash_set.cljs$lang$maxFixedArity = 0;
cljs$core$hash_set.cljs$lang$applyTo = cljs$core$hash_set__1.cljs$lang$applyTo;
cljs$core$hash_set.cljs$core$IFn$_invoke$arity$0 = cljs$core$hash_set__0;
cljs$core$hash_set.cljs$core$IFn$_invoke$arity$variadic = cljs$core$hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$hash_set;
})()
;
/**
 * Returns a new sorted set with supplied keys.
 * @param {...*} var_args
 */
cljs.core.sorted_set = (function() { 
var cljs$core$sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var cljs$core$sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__9695__i = 0, G__9695__a = new Array(arguments.length -  0);
while (G__9695__i < G__9695__a.length) {G__9695__a[G__9695__i] = arguments[G__9695__i + 0]; ++G__9695__i;}
  keys = new cljs.core.IndexedSeq(G__9695__a,0);
} 
return cljs$core$sorted_set__delegate.call(this,keys);};
cljs$core$sorted_set.cljs$lang$maxFixedArity = 0;
cljs$core$sorted_set.cljs$lang$applyTo = (function (arglist__9696){
var keys = cljs.core.seq(arglist__9696);
return cljs$core$sorted_set__delegate(keys);
});
cljs$core$sorted_set.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_set__delegate;
return cljs$core$sorted_set;
})()
;
/**
 * Returns a new sorted set with supplied keys, using the supplied comparator.
 * @param {...*} var_args
 */
cljs.core.sorted_set_by = (function() { 
var cljs$core$sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var cljs$core$sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__9697__i = 0, G__9697__a = new Array(arguments.length -  1);
while (G__9697__i < G__9697__a.length) {G__9697__a[G__9697__i] = arguments[G__9697__i + 1]; ++G__9697__i;}
  keys = new cljs.core.IndexedSeq(G__9697__a,0);
} 
return cljs$core$sorted_set_by__delegate.call(this,comparator,keys);};
cljs$core$sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs$core$sorted_set_by.cljs$lang$applyTo = (function (arglist__9698){
var comparator = cljs.core.first(arglist__9698);
var keys = cljs.core.rest(arglist__9698);
return cljs$core$sorted_set_by__delegate(comparator,keys);
});
cljs$core$sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_set_by__delegate;
return cljs$core$sorted_set_by;
})()
;
/**
 * Given a map of replacement pairs and a vector/collection, returns a
 * vector/seq with any elements = a key in smap replaced with the
 * corresponding val in smap.  Returns a transducer when no collection
 * is provided.
 */
cljs.core.replace = (function() {
var cljs$core$replace = null;
var cljs$core$replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__9699_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__9699_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__9699_SHARP_;
}
}));
});
var cljs$core$replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__9700_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__9700_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__9700_SHARP_;
}
}),coll);
}
});
cljs$core$replace = function(smap,coll){
switch(arguments.length){
case 1:
return cljs$core$replace__1.call(this,smap);
case 2:
return cljs$core$replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$replace.cljs$core$IFn$_invoke$arity$1 = cljs$core$replace__1;
cljs$core$replace.cljs$core$IFn$_invoke$arity$2 = cljs$core$replace__2;
return cljs$core$replace;
})()
;
/**
 * Returns a lazy sequence of the elements of coll with duplicates removed
 */
cljs.core.distinct = (function() {
var cljs$core$distinct = null;
var cljs$core$distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__9721 = null;
var G__9721__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9721__1 = (function (result){
var G__9711 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9711) : rf.call(null,G__9711));
});
var G__9721__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__9712 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9712) : cljs.core.deref.call(null,G__9712));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__9713 = result;
var G__9714 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9713,G__9714) : rf.call(null,G__9713,G__9714));
}
});
G__9721 = function(result,input){
switch(arguments.length){
case 0:
return G__9721__0.call(this);
case 1:
return G__9721__1.call(this,result);
case 2:
return G__9721__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9721.cljs$core$IFn$_invoke$arity$0 = G__9721__0;
G__9721.cljs$core$IFn$_invoke$arity$1 = G__9721__1;
G__9721.cljs$core$IFn$_invoke$arity$2 = G__9721__2;
return G__9721;
})()
;})(seen))
});
});
var cljs$core$distinct__1 = (function (coll){
var step = (function cljs$core$distinct_$_step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__9719,seen__$1){
while(true){
var vec__9720 = p__9719;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9720,(0),null);
var xs__$1 = vec__9720;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__9722 = cljs.core.rest(s);
var G__9723 = seen__$1;
p__9719 = G__9722;
seen__$1 = G__9723;
continue;
} else {
return cljs.core.cons(f,cljs$core$distinct_$_step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
cljs$core$distinct = function(coll){
switch(arguments.length){
case 0:
return cljs$core$distinct__0.call(this);
case 1:
return cljs$core$distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$distinct.cljs$core$IFn$_invoke$arity$0 = cljs$core$distinct__0;
cljs$core$distinct.cljs$core$IFn$_invoke$arity$1 = cljs$core$distinct__1;
return cljs$core$distinct;
})()
;
/**
 * Return a seq of all but the last item in coll, in linear time
 */
cljs.core.butlast = (function cljs$core$butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__9724 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__9725 = cljs.core.next(s__$1);
ret = G__9724;
s__$1 = G__9725;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
 * Returns the name String of a string, symbol or keyword.
 */
cljs.core.name = (function cljs$core$name(x){
if((function (){var G__9727 = x;
if(G__9727){
var bit__4434__auto__ = (G__9727.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4434__auto__) || (G__9727.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
 * Returns a map with the keys mapped to the corresponding vals.
 */
cljs.core.zipmap = (function cljs$core$zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__9728 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__9729 = cljs.core.next(ks);
var G__9730 = cljs.core.next(vs);
map = G__9728;
ks = G__9729;
vs = G__9730;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
 * Returns the x for which (k x), a number, is greatest.
 * @param {...*} var_args
 */
cljs.core.max_key = (function() {
var cljs$core$max_key = null;
var cljs$core$max_key__2 = (function (k,x){
return x;
});
var cljs$core$max_key__3 = (function (k,x,y){
if(((function (){var G__9741 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9741) : k.call(null,G__9741));
})() > (function (){var G__9742 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9742) : k.call(null,G__9742));
})())){
return x;
} else {
return y;
}
});
var cljs$core$max_key__4 = (function() { 
var G__9743__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__9731_SHARP_,p2__9732_SHARP_){
return cljs$core$max_key.cljs$core$IFn$_invoke$arity$3(k,p1__9731_SHARP_,p2__9732_SHARP_);
}),cljs$core$max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__9743 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__9744__i = 0, G__9744__a = new Array(arguments.length -  3);
while (G__9744__i < G__9744__a.length) {G__9744__a[G__9744__i] = arguments[G__9744__i + 3]; ++G__9744__i;}
  more = new cljs.core.IndexedSeq(G__9744__a,0);
} 
return G__9743__delegate.call(this,k,x,y,more);};
G__9743.cljs$lang$maxFixedArity = 3;
G__9743.cljs$lang$applyTo = (function (arglist__9745){
var k = cljs.core.first(arglist__9745);
arglist__9745 = cljs.core.next(arglist__9745);
var x = cljs.core.first(arglist__9745);
arglist__9745 = cljs.core.next(arglist__9745);
var y = cljs.core.first(arglist__9745);
var more = cljs.core.rest(arglist__9745);
return G__9743__delegate(k,x,y,more);
});
G__9743.cljs$core$IFn$_invoke$arity$variadic = G__9743__delegate;
return G__9743;
})()
;
cljs$core$max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$max_key__2.call(this,k,x);
case 3:
return cljs$core$max_key__3.call(this,k,x,y);
default:
var G__9746 = null;
if (arguments.length > 3) {
var G__9747__i = 0, G__9747__a = new Array(arguments.length -  3);
while (G__9747__i < G__9747__a.length) {G__9747__a[G__9747__i] = arguments[G__9747__i + 3]; ++G__9747__i;}
G__9746 = new cljs.core.IndexedSeq(G__9747__a,0);
}
return cljs$core$max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__9746);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$max_key.cljs$lang$maxFixedArity = 3;
cljs$core$max_key.cljs$lang$applyTo = cljs$core$max_key__4.cljs$lang$applyTo;
cljs$core$max_key.cljs$core$IFn$_invoke$arity$2 = cljs$core$max_key__2;
cljs$core$max_key.cljs$core$IFn$_invoke$arity$3 = cljs$core$max_key__3;
cljs$core$max_key.cljs$core$IFn$_invoke$arity$variadic = cljs$core$max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$max_key;
})()
;
/**
 * Returns the x for which (k x), a number, is least.
 * @param {...*} var_args
 */
cljs.core.min_key = (function() {
var cljs$core$min_key = null;
var cljs$core$min_key__2 = (function (k,x){
return x;
});
var cljs$core$min_key__3 = (function (k,x,y){
if(((function (){var G__9758 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9758) : k.call(null,G__9758));
})() < (function (){var G__9759 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9759) : k.call(null,G__9759));
})())){
return x;
} else {
return y;
}
});
var cljs$core$min_key__4 = (function() { 
var G__9760__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__9748_SHARP_,p2__9749_SHARP_){
return cljs$core$min_key.cljs$core$IFn$_invoke$arity$3(k,p1__9748_SHARP_,p2__9749_SHARP_);
}),cljs$core$min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__9760 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__9761__i = 0, G__9761__a = new Array(arguments.length -  3);
while (G__9761__i < G__9761__a.length) {G__9761__a[G__9761__i] = arguments[G__9761__i + 3]; ++G__9761__i;}
  more = new cljs.core.IndexedSeq(G__9761__a,0);
} 
return G__9760__delegate.call(this,k,x,y,more);};
G__9760.cljs$lang$maxFixedArity = 3;
G__9760.cljs$lang$applyTo = (function (arglist__9762){
var k = cljs.core.first(arglist__9762);
arglist__9762 = cljs.core.next(arglist__9762);
var x = cljs.core.first(arglist__9762);
arglist__9762 = cljs.core.next(arglist__9762);
var y = cljs.core.first(arglist__9762);
var more = cljs.core.rest(arglist__9762);
return G__9760__delegate(k,x,y,more);
});
G__9760.cljs$core$IFn$_invoke$arity$variadic = G__9760__delegate;
return G__9760;
})()
;
cljs$core$min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$min_key__2.call(this,k,x);
case 3:
return cljs$core$min_key__3.call(this,k,x,y);
default:
var G__9763 = null;
if (arguments.length > 3) {
var G__9764__i = 0, G__9764__a = new Array(arguments.length -  3);
while (G__9764__i < G__9764__a.length) {G__9764__a[G__9764__i] = arguments[G__9764__i + 3]; ++G__9764__i;}
G__9763 = new cljs.core.IndexedSeq(G__9764__a,0);
}
return cljs$core$min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__9763);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$min_key.cljs$lang$maxFixedArity = 3;
cljs$core$min_key.cljs$lang$applyTo = cljs$core$min_key__4.cljs$lang$applyTo;
cljs$core$min_key.cljs$core$IFn$_invoke$arity$2 = cljs$core$min_key__2;
cljs$core$min_key.cljs$core$IFn$_invoke$arity$3 = cljs$core$min_key__3;
cljs$core$min_key.cljs$core$IFn$_invoke$arity$variadic = cljs$core$min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function cljs$core$__GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function cljs$core$array_list(){
return (new cljs.core.ArrayList([]));
});
/**
 * Returns a lazy sequence of lists like partition, but may include
 * partitions with fewer than n items at the end.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.partition_all = (function() {
var cljs$core$partition_all = null;
var cljs$core$partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__9781 = null;
var G__9781__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9781__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__9776 = result;
var G__9777 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9776,G__9777) : rf.call(null,G__9776,G__9777));
})());
})());
var G__9778 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9778) : rf.call(null,G__9778));
});
var G__9781__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__9779 = result;
var G__9780 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9779,G__9780) : rf.call(null,G__9779,G__9780));
} else {
return result;
}
});
G__9781 = function(result,input){
switch(arguments.length){
case 0:
return G__9781__0.call(this);
case 1:
return G__9781__1.call(this,result);
case 2:
return G__9781__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9781.cljs$core$IFn$_invoke$arity$0 = G__9781__0;
G__9781.cljs$core$IFn$_invoke$arity$1 = G__9781__1;
G__9781.cljs$core$IFn$_invoke$arity$2 = G__9781__2;
return G__9781;
})()
;})(a))
});
});
var cljs$core$partition_all__2 = (function (n,coll){
return cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var cljs$core$partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
cljs$core$partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return cljs$core$partition_all__1.call(this,n);
case 2:
return cljs$core$partition_all__2.call(this,n,step);
case 3:
return cljs$core$partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partition_all.cljs$core$IFn$_invoke$arity$1 = cljs$core$partition_all__1;
cljs$core$partition_all.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition_all__2;
cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3 = cljs$core$partition_all__3;
return cljs$core$partition_all;
})()
;
/**
 * Returns a lazy sequence of successive items from coll while
 * (pred item) returns true. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.take_while = (function() {
var cljs$core$take_while = null;
var cljs$core$take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__9794 = null;
var G__9794__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9794__1 = (function (result){
var G__9789 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9789) : rf.call(null,G__9789));
});
var G__9794__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__9790 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9790) : pred.call(null,G__9790));
})())){
var G__9791 = result;
var G__9792 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9791,G__9792) : rf.call(null,G__9791,G__9792));
} else {
return cljs.core.reduced(result);
}
});
G__9794 = function(result,input){
switch(arguments.length){
case 0:
return G__9794__0.call(this);
case 1:
return G__9794__1.call(this,result);
case 2:
return G__9794__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9794.cljs$core$IFn$_invoke$arity$0 = G__9794__0;
G__9794.cljs$core$IFn$_invoke$arity$1 = G__9794__1;
G__9794.cljs$core$IFn$_invoke$arity$2 = G__9794__2;
return G__9794;
})()
});
});
var cljs$core$take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__9793 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9793) : pred.call(null,G__9793));
})())){
return cljs.core.cons(cljs.core.first(s),cljs$core$take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
cljs$core$take_while = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$take_while__1.call(this,pred);
case 2:
return cljs$core$take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$take_while.cljs$core$IFn$_invoke$arity$1 = cljs$core$take_while__1;
cljs$core$take_while.cljs$core$IFn$_invoke$arity$2 = cljs$core$take_while__2;
return cljs$core$take_while;
})()
;
cljs.core.mk_bound_fn = (function cljs$core$mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__9799 = (function (){var G__9801 = cljs.core._entry_key(sc,e);
var G__9802 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9801,G__9802) : comp.call(null,G__9801,G__9802));
})();
var G__9800 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__9799,G__9800) : test.call(null,G__9799,G__9800));
});
});
/**
 * sc must be a sorted collection, test(s) one of <, <=, > or
 * >=. Returns a seq of those entries with keys ek for
 * which (test (.. sc comparator (compare ek key)) 0) is true
 */
cljs.core.subseq = (function() {
var cljs$core$subseq = null;
var cljs$core$subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__9806 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9806,(0),null);
var s = vec__9806;
if(cljs.core.truth_((function (){var G__9807 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__9807) : include.call(null,G__9807));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var cljs$core$subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__9808 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9808,(0),null);
var s = vec__9808;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
cljs$core$subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return cljs$core$subseq__3.call(this,sc,start_test,start_key);
case 5:
return cljs$core$subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$subseq.cljs$core$IFn$_invoke$arity$3 = cljs$core$subseq__3;
cljs$core$subseq.cljs$core$IFn$_invoke$arity$5 = cljs$core$subseq__5;
return cljs$core$subseq;
})()
;
/**
 * sc must be a sorted collection, test(s) one of <, <=, > or
 * >=. Returns a reverse seq of those entries with keys ek for
 * which (test (.. sc comparator (compare ek key)) 0) is true
 */
cljs.core.rsubseq = (function() {
var cljs$core$rsubseq = null;
var cljs$core$rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__9812 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9812,(0),null);
var s = vec__9812;
if(cljs.core.truth_((function (){var G__9813 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__9813) : include.call(null,G__9813));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var cljs$core$rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__9814 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9814,(0),null);
var s = vec__9814;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
cljs$core$rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return cljs$core$rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return cljs$core$rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$rsubseq.cljs$core$IFn$_invoke$arity$3 = cljs$core$rsubseq__3;
cljs$core$rsubseq.cljs$core$IFn$_invoke$arity$5 = cljs$core$rsubseq__5;
return cljs$core$rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function cljs$core$__GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__9815 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__9815) : Math.ceil.call(null,G__9815));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4183__auto__ = self__.__hash;
if(!((h__4183__auto__ == null))){
return h__4183__auto__;
} else {
var h__4183__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4183__auto____$1;

return h__4183__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__9816 = ret;
var G__9817 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9816,G__9817) : f.call(null,G__9816,G__9817));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__9818 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9818) : cljs.core.deref.call(null,G__9818));
} else {
var G__9819 = (i + self__.step);
var G__9820 = ret__$1;
i = G__9819;
ret = G__9820;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function cljs$core$__GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
/**
 * Returns a lazy seq of nums from start (inclusive) to end
 * (exclusive), by step, where start defaults to 0, step to 1,
 * and end to infinity.
 */
cljs.core.range = (function() {
var cljs$core$range = null;
var cljs$core$range__0 = (function (){
return cljs$core$range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var cljs$core$range__1 = (function (end){
return cljs$core$range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var cljs$core$range__2 = (function (start,end){
return cljs$core$range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var cljs$core$range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
cljs$core$range = function(start,end,step){
switch(arguments.length){
case 0:
return cljs$core$range__0.call(this);
case 1:
return cljs$core$range__1.call(this,start);
case 2:
return cljs$core$range__2.call(this,start,end);
case 3:
return cljs$core$range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$range.cljs$core$IFn$_invoke$arity$0 = cljs$core$range__0;
cljs$core$range.cljs$core$IFn$_invoke$arity$1 = cljs$core$range__1;
cljs$core$range.cljs$core$IFn$_invoke$arity$2 = cljs$core$range__2;
cljs$core$range.cljs$core$IFn$_invoke$arity$3 = cljs$core$range__3;
return cljs$core$range;
})()
;
/**
 * Returns a lazy seq of every nth item in coll.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.take_nth = (function() {
var cljs$core$take_nth = null;
var cljs$core$take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__9838 = null;
var G__9838__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9838__1 = (function (result){
var G__9835 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9835) : rf.call(null,G__9835));
});
var G__9838__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__9836 = result;
var G__9837 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9836,G__9837) : rf.call(null,G__9836,G__9837));
} else {
return result;
}
});
G__9838 = function(result,input){
switch(arguments.length){
case 0:
return G__9838__0.call(this);
case 1:
return G__9838__1.call(this,result);
case 2:
return G__9838__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9838.cljs$core$IFn$_invoke$arity$0 = G__9838__0;
G__9838.cljs$core$IFn$_invoke$arity$1 = G__9838__1;
G__9838.cljs$core$IFn$_invoke$arity$2 = G__9838__2;
return G__9838;
})()
;})(ia))
});
});
var cljs$core$take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),cljs$core$take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
cljs$core$take_nth = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$take_nth__1.call(this,n);
case 2:
return cljs$core$take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$take_nth.cljs$core$IFn$_invoke$arity$1 = cljs$core$take_nth__1;
cljs$core$take_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$take_nth__2;
return cljs$core$take_nth;
})()
;
/**
 * Returns a vector of [(take-while pred coll) (drop-while pred coll)]
 */
cljs.core.split_with = (function cljs$core$split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
 * Applies f to each value in coll, splitting it each time f returns a
 * new value.  Returns a lazy seq of partitions.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.partition_by = (function() {
var cljs$core$partition_by = null;
var cljs$core$partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__9860 = null;
var G__9860__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9860__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__9851 = result;
var G__9852 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9851,G__9852) : rf.call(null,G__9851,G__9852));
})());
})());
var G__9853 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9853) : rf.call(null,G__9853));
});
var G__9860__2 = (function (result,input){
var pval = (function (){var G__9854 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9854) : cljs.core.deref.call(null,G__9854));
})();
var val = (function (){var G__9855 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9855) : f.call(null,G__9855));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__9856 = result;
var G__9857 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9856,G__9857) : rf.call(null,G__9856,G__9857));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__9860 = function(result,input){
switch(arguments.length){
case 0:
return G__9860__0.call(this);
case 1:
return G__9860__1.call(this,result);
case 2:
return G__9860__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9860.cljs$core$IFn$_invoke$arity$0 = G__9860__0;
G__9860.cljs$core$IFn$_invoke$arity$1 = G__9860__1;
G__9860.cljs$core$IFn$_invoke$arity$2 = G__9860__2;
return G__9860;
})()
;})(a,pa))
});
});
var cljs$core$partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__9858 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9858) : f.call(null,G__9858));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__9839_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__9859 = p1__9839_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9859) : f.call(null,G__9859));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,cljs$core$partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
cljs$core$partition_by = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$partition_by__1.call(this,f);
case 2:
return cljs$core$partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partition_by.cljs$core$IFn$_invoke$arity$1 = cljs$core$partition_by__1;
cljs$core$partition_by.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition_by__2;
return cljs$core$partition_by;
})()
;
/**
 * Returns a map from distinct items in coll to the number of times
 * they appear.
 */
cljs.core.frequencies = (function cljs$core$frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
 * Returns a lazy seq of the intermediate values of the reduction (as
 * per reduce) of coll by f, starting with init.
 */
cljs.core.reductions = (function() {
var cljs$core$reductions = null;
var cljs$core$reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return cljs$core$reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var cljs$core$reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs$core$reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__9869 = init;
var G__9870 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9869,G__9870) : f.call(null,G__9869,G__9870));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
cljs$core$reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return cljs$core$reductions__2.call(this,f,init);
case 3:
return cljs$core$reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$reductions.cljs$core$IFn$_invoke$arity$2 = cljs$core$reductions__2;
cljs$core$reductions.cljs$core$IFn$_invoke$arity$3 = cljs$core$reductions__3;
return cljs$core$reductions;
})()
;
/**
 * Takes a set of functions and returns a fn that is the juxtaposition
 * of those fns.  The returned fn takes a variable number of args, and
 * returns a vector containing the result of applying each fn to the
 * args (left-to-right).
 * ((juxt a b c) x) => [(a x) (b x) (c x)]
 * @param {...*} var_args
 */
cljs.core.juxt = (function() {
var cljs$core$juxt = null;
var cljs$core$juxt__1 = (function (f){
return (function() {
var G__9965 = null;
var G__9965__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__9965__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9923 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9923) : f.call(null,G__9923));
})()],null));
});
var G__9965__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9924 = x;
var G__9925 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9924,G__9925) : f.call(null,G__9924,G__9925));
})()],null));
});
var G__9965__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9926 = x;
var G__9927 = y;
var G__9928 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9926,G__9927,G__9928) : f.call(null,G__9926,G__9927,G__9928));
})()],null));
});
var G__9965__4 = (function() { 
var G__9966__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__9966 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9967__i = 0, G__9967__a = new Array(arguments.length -  3);
while (G__9967__i < G__9967__a.length) {G__9967__a[G__9967__i] = arguments[G__9967__i + 3]; ++G__9967__i;}
  args = new cljs.core.IndexedSeq(G__9967__a,0);
} 
return G__9966__delegate.call(this,x,y,z,args);};
G__9966.cljs$lang$maxFixedArity = 3;
G__9966.cljs$lang$applyTo = (function (arglist__9968){
var x = cljs.core.first(arglist__9968);
arglist__9968 = cljs.core.next(arglist__9968);
var y = cljs.core.first(arglist__9968);
arglist__9968 = cljs.core.next(arglist__9968);
var z = cljs.core.first(arglist__9968);
var args = cljs.core.rest(arglist__9968);
return G__9966__delegate(x,y,z,args);
});
G__9966.cljs$core$IFn$_invoke$arity$variadic = G__9966__delegate;
return G__9966;
})()
;
G__9965 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9965__0.call(this);
case 1:
return G__9965__1.call(this,x);
case 2:
return G__9965__2.call(this,x,y);
case 3:
return G__9965__3.call(this,x,y,z);
default:
var G__9969 = null;
if (arguments.length > 3) {
var G__9970__i = 0, G__9970__a = new Array(arguments.length -  3);
while (G__9970__i < G__9970__a.length) {G__9970__a[G__9970__i] = arguments[G__9970__i + 3]; ++G__9970__i;}
G__9969 = new cljs.core.IndexedSeq(G__9970__a,0);
}
return G__9965__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9969);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9965.cljs$lang$maxFixedArity = 3;
G__9965.cljs$lang$applyTo = G__9965__4.cljs$lang$applyTo;
G__9965.cljs$core$IFn$_invoke$arity$0 = G__9965__0;
G__9965.cljs$core$IFn$_invoke$arity$1 = G__9965__1;
G__9965.cljs$core$IFn$_invoke$arity$2 = G__9965__2;
G__9965.cljs$core$IFn$_invoke$arity$3 = G__9965__3;
G__9965.cljs$core$IFn$_invoke$arity$variadic = G__9965__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9965;
})()
});
var cljs$core$juxt__2 = (function (f,g){
return (function() {
var G__9971 = null;
var G__9971__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__9971__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9929 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9929) : f.call(null,G__9929));
})(),(function (){var G__9930 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9930) : g.call(null,G__9930));
})()],null));
});
var G__9971__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9931 = x;
var G__9932 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9931,G__9932) : f.call(null,G__9931,G__9932));
})(),(function (){var G__9933 = x;
var G__9934 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__9933,G__9934) : g.call(null,G__9933,G__9934));
})()],null));
});
var G__9971__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9935 = x;
var G__9936 = y;
var G__9937 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9935,G__9936,G__9937) : f.call(null,G__9935,G__9936,G__9937));
})(),(function (){var G__9938 = x;
var G__9939 = y;
var G__9940 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__9938,G__9939,G__9940) : g.call(null,G__9938,G__9939,G__9940));
})()],null));
});
var G__9971__4 = (function() { 
var G__9972__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__9972 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9973__i = 0, G__9973__a = new Array(arguments.length -  3);
while (G__9973__i < G__9973__a.length) {G__9973__a[G__9973__i] = arguments[G__9973__i + 3]; ++G__9973__i;}
  args = new cljs.core.IndexedSeq(G__9973__a,0);
} 
return G__9972__delegate.call(this,x,y,z,args);};
G__9972.cljs$lang$maxFixedArity = 3;
G__9972.cljs$lang$applyTo = (function (arglist__9974){
var x = cljs.core.first(arglist__9974);
arglist__9974 = cljs.core.next(arglist__9974);
var y = cljs.core.first(arglist__9974);
arglist__9974 = cljs.core.next(arglist__9974);
var z = cljs.core.first(arglist__9974);
var args = cljs.core.rest(arglist__9974);
return G__9972__delegate(x,y,z,args);
});
G__9972.cljs$core$IFn$_invoke$arity$variadic = G__9972__delegate;
return G__9972;
})()
;
G__9971 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9971__0.call(this);
case 1:
return G__9971__1.call(this,x);
case 2:
return G__9971__2.call(this,x,y);
case 3:
return G__9971__3.call(this,x,y,z);
default:
var G__9975 = null;
if (arguments.length > 3) {
var G__9976__i = 0, G__9976__a = new Array(arguments.length -  3);
while (G__9976__i < G__9976__a.length) {G__9976__a[G__9976__i] = arguments[G__9976__i + 3]; ++G__9976__i;}
G__9975 = new cljs.core.IndexedSeq(G__9976__a,0);
}
return G__9971__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9975);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9971.cljs$lang$maxFixedArity = 3;
G__9971.cljs$lang$applyTo = G__9971__4.cljs$lang$applyTo;
G__9971.cljs$core$IFn$_invoke$arity$0 = G__9971__0;
G__9971.cljs$core$IFn$_invoke$arity$1 = G__9971__1;
G__9971.cljs$core$IFn$_invoke$arity$2 = G__9971__2;
G__9971.cljs$core$IFn$_invoke$arity$3 = G__9971__3;
G__9971.cljs$core$IFn$_invoke$arity$variadic = G__9971__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9971;
})()
});
var cljs$core$juxt__3 = (function (f,g,h){
return (function() {
var G__9977 = null;
var G__9977__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__9977__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9941 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9941) : f.call(null,G__9941));
})(),(function (){var G__9942 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9942) : g.call(null,G__9942));
})(),(function (){var G__9943 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__9943) : h.call(null,G__9943));
})()],null));
});
var G__9977__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9944 = x;
var G__9945 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9944,G__9945) : f.call(null,G__9944,G__9945));
})(),(function (){var G__9946 = x;
var G__9947 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__9946,G__9947) : g.call(null,G__9946,G__9947));
})(),(function (){var G__9948 = x;
var G__9949 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__9948,G__9949) : h.call(null,G__9948,G__9949));
})()],null));
});
var G__9977__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9950 = x;
var G__9951 = y;
var G__9952 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9950,G__9951,G__9952) : f.call(null,G__9950,G__9951,G__9952));
})(),(function (){var G__9953 = x;
var G__9954 = y;
var G__9955 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__9953,G__9954,G__9955) : g.call(null,G__9953,G__9954,G__9955));
})(),(function (){var G__9956 = x;
var G__9957 = y;
var G__9958 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__9956,G__9957,G__9958) : h.call(null,G__9956,G__9957,G__9958));
})()],null));
});
var G__9977__4 = (function() { 
var G__9978__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__9978 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9979__i = 0, G__9979__a = new Array(arguments.length -  3);
while (G__9979__i < G__9979__a.length) {G__9979__a[G__9979__i] = arguments[G__9979__i + 3]; ++G__9979__i;}
  args = new cljs.core.IndexedSeq(G__9979__a,0);
} 
return G__9978__delegate.call(this,x,y,z,args);};
G__9978.cljs$lang$maxFixedArity = 3;
G__9978.cljs$lang$applyTo = (function (arglist__9980){
var x = cljs.core.first(arglist__9980);
arglist__9980 = cljs.core.next(arglist__9980);
var y = cljs.core.first(arglist__9980);
arglist__9980 = cljs.core.next(arglist__9980);
var z = cljs.core.first(arglist__9980);
var args = cljs.core.rest(arglist__9980);
return G__9978__delegate(x,y,z,args);
});
G__9978.cljs$core$IFn$_invoke$arity$variadic = G__9978__delegate;
return G__9978;
})()
;
G__9977 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9977__0.call(this);
case 1:
return G__9977__1.call(this,x);
case 2:
return G__9977__2.call(this,x,y);
case 3:
return G__9977__3.call(this,x,y,z);
default:
var G__9981 = null;
if (arguments.length > 3) {
var G__9982__i = 0, G__9982__a = new Array(arguments.length -  3);
while (G__9982__i < G__9982__a.length) {G__9982__a[G__9982__i] = arguments[G__9982__i + 3]; ++G__9982__i;}
G__9981 = new cljs.core.IndexedSeq(G__9982__a,0);
}
return G__9977__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9981);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9977.cljs$lang$maxFixedArity = 3;
G__9977.cljs$lang$applyTo = G__9977__4.cljs$lang$applyTo;
G__9977.cljs$core$IFn$_invoke$arity$0 = G__9977__0;
G__9977.cljs$core$IFn$_invoke$arity$1 = G__9977__1;
G__9977.cljs$core$IFn$_invoke$arity$2 = G__9977__2;
G__9977.cljs$core$IFn$_invoke$arity$3 = G__9977__3;
G__9977.cljs$core$IFn$_invoke$arity$variadic = G__9977__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9977;
})()
});
var cljs$core$juxt__4 = (function() { 
var G__9983__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__9984 = null;
var G__9984__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__9871_SHARP_,p2__9872_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9871_SHARP_,(function (){return (p2__9872_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__9872_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__9872_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__9984__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__9873_SHARP_,p2__9874_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9873_SHARP_,(function (){var G__9959 = x;
return (p2__9874_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__9874_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9959) : p2__9874_SHARP_.call(null,G__9959));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__9984__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__9875_SHARP_,p2__9876_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9875_SHARP_,(function (){var G__9960 = x;
var G__9961 = y;
return (p2__9876_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__9876_SHARP_.cljs$core$IFn$_invoke$arity$2(G__9960,G__9961) : p2__9876_SHARP_.call(null,G__9960,G__9961));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__9984__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__9877_SHARP_,p2__9878_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9877_SHARP_,(function (){var G__9962 = x;
var G__9963 = y;
var G__9964 = z;
return (p2__9878_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__9878_SHARP_.cljs$core$IFn$_invoke$arity$3(G__9962,G__9963,G__9964) : p2__9878_SHARP_.call(null,G__9962,G__9963,G__9964));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__9984__4 = (function() { 
var G__9985__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__9879_SHARP_,p2__9880_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9879_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__9880_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__9985 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9986__i = 0, G__9986__a = new Array(arguments.length -  3);
while (G__9986__i < G__9986__a.length) {G__9986__a[G__9986__i] = arguments[G__9986__i + 3]; ++G__9986__i;}
  args = new cljs.core.IndexedSeq(G__9986__a,0);
} 
return G__9985__delegate.call(this,x,y,z,args);};
G__9985.cljs$lang$maxFixedArity = 3;
G__9985.cljs$lang$applyTo = (function (arglist__9987){
var x = cljs.core.first(arglist__9987);
arglist__9987 = cljs.core.next(arglist__9987);
var y = cljs.core.first(arglist__9987);
arglist__9987 = cljs.core.next(arglist__9987);
var z = cljs.core.first(arglist__9987);
var args = cljs.core.rest(arglist__9987);
return G__9985__delegate(x,y,z,args);
});
G__9985.cljs$core$IFn$_invoke$arity$variadic = G__9985__delegate;
return G__9985;
})()
;
G__9984 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9984__0.call(this);
case 1:
return G__9984__1.call(this,x);
case 2:
return G__9984__2.call(this,x,y);
case 3:
return G__9984__3.call(this,x,y,z);
default:
var G__9988 = null;
if (arguments.length > 3) {
var G__9989__i = 0, G__9989__a = new Array(arguments.length -  3);
while (G__9989__i < G__9989__a.length) {G__9989__a[G__9989__i] = arguments[G__9989__i + 3]; ++G__9989__i;}
G__9988 = new cljs.core.IndexedSeq(G__9989__a,0);
}
return G__9984__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9988);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9984.cljs$lang$maxFixedArity = 3;
G__9984.cljs$lang$applyTo = G__9984__4.cljs$lang$applyTo;
G__9984.cljs$core$IFn$_invoke$arity$0 = G__9984__0;
G__9984.cljs$core$IFn$_invoke$arity$1 = G__9984__1;
G__9984.cljs$core$IFn$_invoke$arity$2 = G__9984__2;
G__9984.cljs$core$IFn$_invoke$arity$3 = G__9984__3;
G__9984.cljs$core$IFn$_invoke$arity$variadic = G__9984__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9984;
})()
;})(fs__$1))
};
var G__9983 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__9990__i = 0, G__9990__a = new Array(arguments.length -  3);
while (G__9990__i < G__9990__a.length) {G__9990__a[G__9990__i] = arguments[G__9990__i + 3]; ++G__9990__i;}
  fs = new cljs.core.IndexedSeq(G__9990__a,0);
} 
return G__9983__delegate.call(this,f,g,h,fs);};
G__9983.cljs$lang$maxFixedArity = 3;
G__9983.cljs$lang$applyTo = (function (arglist__9991){
var f = cljs.core.first(arglist__9991);
arglist__9991 = cljs.core.next(arglist__9991);
var g = cljs.core.first(arglist__9991);
arglist__9991 = cljs.core.next(arglist__9991);
var h = cljs.core.first(arglist__9991);
var fs = cljs.core.rest(arglist__9991);
return G__9983__delegate(f,g,h,fs);
});
G__9983.cljs$core$IFn$_invoke$arity$variadic = G__9983__delegate;
return G__9983;
})()
;
cljs$core$juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return cljs$core$juxt__1.call(this,f);
case 2:
return cljs$core$juxt__2.call(this,f,g);
case 3:
return cljs$core$juxt__3.call(this,f,g,h);
default:
var G__9992 = null;
if (arguments.length > 3) {
var G__9993__i = 0, G__9993__a = new Array(arguments.length -  3);
while (G__9993__i < G__9993__a.length) {G__9993__a[G__9993__i] = arguments[G__9993__i + 3]; ++G__9993__i;}
G__9992 = new cljs.core.IndexedSeq(G__9993__a,0);
}
return cljs$core$juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__9992);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$juxt.cljs$lang$maxFixedArity = 3;
cljs$core$juxt.cljs$lang$applyTo = cljs$core$juxt__4.cljs$lang$applyTo;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$1 = cljs$core$juxt__1;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$2 = cljs$core$juxt__2;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$3 = cljs$core$juxt__3;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$variadic = cljs$core$juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$juxt;
})()
;
/**
 * When lazy sequences are produced via functions that have side
 * effects, any effects other than those needed to produce the first
 * element in the seq do not occur until the seq is consumed. dorun can
 * be used to force any effects. Walks through the successive nexts of
 * the seq, does not retain the head and returns nil.
 */
cljs.core.dorun = (function() {
var cljs$core$dorun = null;
var cljs$core$dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__9994 = cljs.core.next(coll);
coll = G__9994;
continue;
} else {
return null;
}
break;
}
});
var cljs$core$dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__9995 = (n - (1));
var G__9996 = cljs.core.next(coll);
n = G__9995;
coll = G__9996;
continue;
} else {
return null;
}
break;
}
});
cljs$core$dorun = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$dorun__1.call(this,n);
case 2:
return cljs$core$dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dorun.cljs$core$IFn$_invoke$arity$1 = cljs$core$dorun__1;
cljs$core$dorun.cljs$core$IFn$_invoke$arity$2 = cljs$core$dorun__2;
return cljs$core$dorun;
})()
;
/**
 * When lazy sequences are produced via functions that have side
 * effects, any effects other than those needed to produce the first
 * element in the seq do not occur until the seq is consumed. doall can
 * be used to force any effects. Walks through the successive nexts of
 * the seq, retains the head and returns it, thus causing the entire
 * seq to reside in memory at one time.
 */
cljs.core.doall = (function() {
var cljs$core$doall = null;
var cljs$core$doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var cljs$core$doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
cljs$core$doall = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$doall__1.call(this,n);
case 2:
return cljs$core$doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$doall.cljs$core$IFn$_invoke$arity$1 = cljs$core$doall__1;
cljs$core$doall.cljs$core$IFn$_invoke$arity$2 = cljs$core$doall__2;
return cljs$core$doall;
})()
;
/**
 * Returns true if x is a JavaScript RegExp instance.
 */
cljs.core.regexp_QMARK_ = (function cljs$core$regexp_QMARK_(x){
return (x instanceof RegExp);
});
/**
 * Returns the result of (re-find re s) if re fully matches s.
 */
cljs.core.re_matches = (function cljs$core$re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
 * Returns the first regex match, if any, of s to re, using
 * re.exec(s). Returns a vector, containing first the matching
 * substring, then any capturing groups if the regular expression contains
 * capturing groups.
 */
cljs.core.re_find = (function cljs$core$re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
 * Returns a lazy sequence of successive matches of re in s.
 */
cljs.core.re_seq = (function cljs$core$re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?cljs$core$re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
 * Returns an instance of RegExp which has compiled the provided string.
 */
cljs.core.re_pattern = (function cljs$core$re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__10000 = cljs.core.re_find(/^\(\?([idmsux]*)\)/,s);
var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10000,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10000,(1),null);
var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,cljs.core.count(prefix));
return (new RegExp(pattern,(function (){var or__3767__auto__ = flags;
if(cljs.core.truth_(or__3767__auto__)){
return or__3767__auto__;
} else {
return "";
}
})()));
}
});
cljs.core.pr_sequential_writer = (function cljs$core$pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_10008 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__3767__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3767__auto__)){
return or__3767__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__10009_10015 = cljs.core.first(coll);
var G__10010_10016 = writer;
var G__10011_10017 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10009_10015,G__10010_10016,G__10011_10017) : print_one.call(null,G__10009_10015,G__10010_10016,G__10011_10017));
} else {
}

var coll_10018__$1 = cljs.core.next(coll);
var n_10019 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_10018__$1) && (((n_10019 == null)) || (!((n_10019 === (0)))))){
cljs.core._write(writer,sep);

var G__10012_10020 = cljs.core.first(coll_10018__$1);
var G__10013_10021 = writer;
var G__10014_10022 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10012_10020,G__10013_10021,G__10014_10022) : print_one.call(null,G__10012_10020,G__10013_10021,G__10014_10022));

var G__10023 = cljs.core.next(coll_10018__$1);
var G__10024 = (n_10019 - (1));
coll_10018__$1 = G__10023;
n_10019 = G__10024;
continue;
} else {
if((cljs.core.seq(coll_10018__$1)) && ((n_10019 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__3767__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3767__auto__)){
return or__3767__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_10008;
}});
/**
 * @param {...*} var_args
 */
cljs.core.write_all = (function() { 
var cljs$core$write_all__delegate = function (writer,ss){
var seq__10029 = cljs.core.seq(ss);
var chunk__10030 = null;
var count__10031 = (0);
var i__10032 = (0);
while(true){
if((i__10032 < count__10031)){
var s = chunk__10030.cljs$core$IIndexed$_nth$arity$2(null,i__10032);
cljs.core._write(writer,s);

var G__10033 = seq__10029;
var G__10034 = chunk__10030;
var G__10035 = count__10031;
var G__10036 = (i__10032 + (1));
seq__10029 = G__10033;
chunk__10030 = G__10034;
count__10031 = G__10035;
i__10032 = G__10036;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10029);
if(temp__4126__auto__){
var seq__10029__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10029__$1)){
var c__4552__auto__ = cljs.core.chunk_first(seq__10029__$1);
var G__10037 = cljs.core.chunk_rest(seq__10029__$1);
var G__10038 = c__4552__auto__;
var G__10039 = cljs.core.count(c__4552__auto__);
var G__10040 = (0);
seq__10029 = G__10037;
chunk__10030 = G__10038;
count__10031 = G__10039;
i__10032 = G__10040;
continue;
} else {
var s = cljs.core.first(seq__10029__$1);
cljs.core._write(writer,s);

var G__10041 = cljs.core.next(seq__10029__$1);
var G__10042 = null;
var G__10043 = (0);
var G__10044 = (0);
seq__10029 = G__10041;
chunk__10030 = G__10042;
count__10031 = G__10043;
i__10032 = G__10044;
continue;
}
} else {
return null;
}
}
break;
}
};
var cljs$core$write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__10045__i = 0, G__10045__a = new Array(arguments.length -  1);
while (G__10045__i < G__10045__a.length) {G__10045__a[G__10045__i] = arguments[G__10045__i + 1]; ++G__10045__i;}
  ss = new cljs.core.IndexedSeq(G__10045__a,0);
} 
return cljs$core$write_all__delegate.call(this,writer,ss);};
cljs$core$write_all.cljs$lang$maxFixedArity = 1;
cljs$core$write_all.cljs$lang$applyTo = (function (arglist__10046){
var writer = cljs.core.first(arglist__10046);
var ss = cljs.core.rest(arglist__10046);
return cljs$core$write_all__delegate(writer,ss);
});
cljs$core$write_all.cljs$core$IFn$_invoke$arity$variadic = cljs$core$write_all__delegate;
return cljs$core$write_all;
})()
;
cljs.core.string_print = (function cljs$core$string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function cljs$core$flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj10048 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj10048;
})();
cljs.core.quote_string = (function cljs$core$quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__10051 = "[\\\\\"\b\f\n\r\t]";
var G__10052 = "g";
return RegExp(G__10051,G__10052);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function cljs$core$pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3755__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__3755__auto__)){
var and__3755__auto____$1 = (function (){var G__10066 = obj;
if(G__10066){
var bit__4441__auto__ = (G__10066.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4441__auto__) || (G__10066.cljs$core$IMeta$)){
return true;
} else {
if((!G__10066.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__10066);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__10066);
}
})();
if(and__3755__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3755__auto____$1;
}
} else {
return and__3755__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__10067_10077 = cljs.core.meta(obj);
var G__10068_10078 = writer;
var G__10069_10079 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__10067_10077,G__10068_10078,G__10069_10079) : cljs.core.pr_writer.call(null,G__10067_10077,G__10068_10078,G__10069_10079));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__10070 = obj;
if(G__10070){
var bit__4434__auto__ = (G__10070.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4434__auto__) || (G__10070.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__10071 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__10072 = cljs.core.pr_writer;
var G__10073 = writer;
var G__10074 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__10071,G__10072,G__10073,G__10074) : cljs.core.print_map.call(null,G__10071,G__10072,G__10073,G__10074));
} else {
if(cljs.core.array_QMARK_(obj)){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__10075 = obj;
return goog.isString(G__10075);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__10080 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__10080;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__10076 = obj;
if(G__10076){
var bit__4441__auto__ = (G__10076.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4441__auto__) || (G__10076.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__10076.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__10076);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__10076);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
 * Prefer this to pr-seq, because it makes the printing function
 * configurable, allowing efficient implementations such as appending
 * to a StringBuffer.
 */
cljs.core.pr_writer = (function cljs$core$pr_writer(obj,writer,opts){
var temp__4124__auto__ = new cljs.core.Keyword(null,"alt-impl","alt-impl",670969595).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__10084 = obj;
var G__10085 = writer;
var G__10086 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,"fallback-impl","fallback-impl",-1501286995),cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__10084,G__10085,G__10086) : alt_impl.call(null,G__10084,G__10085,G__10086));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function cljs$core$pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__10091 = cljs.core.seq(cljs.core.next(objs));
var chunk__10092 = null;
var count__10093 = (0);
var i__10094 = (0);
while(true){
if((i__10094 < count__10093)){
var obj = chunk__10092.cljs$core$IIndexed$_nth$arity$2(null,i__10094);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__10095 = seq__10091;
var G__10096 = chunk__10092;
var G__10097 = count__10093;
var G__10098 = (i__10094 + (1));
seq__10091 = G__10095;
chunk__10092 = G__10096;
count__10093 = G__10097;
i__10094 = G__10098;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10091);
if(temp__4126__auto__){
var seq__10091__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10091__$1)){
var c__4552__auto__ = cljs.core.chunk_first(seq__10091__$1);
var G__10099 = cljs.core.chunk_rest(seq__10091__$1);
var G__10100 = c__4552__auto__;
var G__10101 = cljs.core.count(c__4552__auto__);
var G__10102 = (0);
seq__10091 = G__10099;
chunk__10092 = G__10100;
count__10093 = G__10101;
i__10094 = G__10102;
continue;
} else {
var obj = cljs.core.first(seq__10091__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__10103 = cljs.core.next(seq__10091__$1);
var G__10104 = null;
var G__10105 = (0);
var G__10106 = (0);
seq__10091 = G__10103;
chunk__10092 = G__10104;
count__10093 = G__10105;
i__10094 = G__10106;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function cljs$core$pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
 * Prints a sequence of objects to a string, observing all the
 * options given in opts
 */
cljs.core.pr_str_with_opts = (function cljs$core$pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
 * Same as pr-str-with-opts followed by (newline)
 */
cljs.core.prn_str_with_opts = (function cljs$core$prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
 * Prints a sequence of objects using string-print, observing all
 * the options given in opts
 */
cljs.core.pr_with_opts = (function cljs$core$pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function cljs$core$newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
 * pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
 * @param {...*} var_args
 */
cljs.core.pr_str = (function() { 
var cljs$core$pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var cljs$core$pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10107__i = 0, G__10107__a = new Array(arguments.length -  0);
while (G__10107__i < G__10107__a.length) {G__10107__a[G__10107__i] = arguments[G__10107__i + 0]; ++G__10107__i;}
  objs = new cljs.core.IndexedSeq(G__10107__a,0);
} 
return cljs$core$pr_str__delegate.call(this,objs);};
cljs$core$pr_str.cljs$lang$maxFixedArity = 0;
cljs$core$pr_str.cljs$lang$applyTo = (function (arglist__10108){
var objs = cljs.core.seq(arglist__10108);
return cljs$core$pr_str__delegate(objs);
});
cljs$core$pr_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$pr_str__delegate;
return cljs$core$pr_str;
})()
;
/**
 * Same as pr-str followed by (newline)
 * @param {...*} var_args
 */
cljs.core.prn_str = (function() { 
var cljs$core$prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var cljs$core$prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10109__i = 0, G__10109__a = new Array(arguments.length -  0);
while (G__10109__i < G__10109__a.length) {G__10109__a[G__10109__i] = arguments[G__10109__i + 0]; ++G__10109__i;}
  objs = new cljs.core.IndexedSeq(G__10109__a,0);
} 
return cljs$core$prn_str__delegate.call(this,objs);};
cljs$core$prn_str.cljs$lang$maxFixedArity = 0;
cljs$core$prn_str.cljs$lang$applyTo = (function (arglist__10110){
var objs = cljs.core.seq(arglist__10110);
return cljs$core$prn_str__delegate(objs);
});
cljs$core$prn_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$prn_str__delegate;
return cljs$core$prn_str;
})()
;
/**
 * Prints the object(s) using string-print.  Prints the
 * object(s), separated by spaces if there is more than one.
 * By default, pr and prn print in a way that objects can be
 * read by the reader
 * @param {...*} var_args
 */
cljs.core.pr = (function() { 
var cljs$core$pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var cljs$core$pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10111__i = 0, G__10111__a = new Array(arguments.length -  0);
while (G__10111__i < G__10111__a.length) {G__10111__a[G__10111__i] = arguments[G__10111__i + 0]; ++G__10111__i;}
  objs = new cljs.core.IndexedSeq(G__10111__a,0);
} 
return cljs$core$pr__delegate.call(this,objs);};
cljs$core$pr.cljs$lang$maxFixedArity = 0;
cljs$core$pr.cljs$lang$applyTo = (function (arglist__10112){
var objs = cljs.core.seq(arglist__10112);
return cljs$core$pr__delegate(objs);
});
cljs$core$pr.cljs$core$IFn$_invoke$arity$variadic = cljs$core$pr__delegate;
return cljs$core$pr;
})()
;
/**
 * Prints the object(s) using string-print.
 * print and println produce output for human consumption.
 * @param {...*} var_args
 */
cljs.core.print = (function() { 
var cljs$core$cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs$core$cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10113__i = 0, G__10113__a = new Array(arguments.length -  0);
while (G__10113__i < G__10113__a.length) {G__10113__a[G__10113__i] = arguments[G__10113__i + 0]; ++G__10113__i;}
  objs = new cljs.core.IndexedSeq(G__10113__a,0);
} 
return cljs$core$cljs_core_print__delegate.call(this,objs);};
cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs$core$cljs_core_print.cljs$lang$applyTo = (function (arglist__10114){
var objs = cljs.core.seq(arglist__10114);
return cljs$core$cljs_core_print__delegate(objs);
});
cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
return cljs$core$cljs_core_print;
})()
;
/**
 * print to a string, returning it
 * @param {...*} var_args
 */
cljs.core.print_str = (function() { 
var cljs$core$print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs$core$print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10115__i = 0, G__10115__a = new Array(arguments.length -  0);
while (G__10115__i < G__10115__a.length) {G__10115__a[G__10115__i] = arguments[G__10115__i + 0]; ++G__10115__i;}
  objs = new cljs.core.IndexedSeq(G__10115__a,0);
} 
return cljs$core$print_str__delegate.call(this,objs);};
cljs$core$print_str.cljs$lang$maxFixedArity = 0;
cljs$core$print_str.cljs$lang$applyTo = (function (arglist__10116){
var objs = cljs.core.seq(arglist__10116);
return cljs$core$print_str__delegate(objs);
});
cljs$core$print_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$print_str__delegate;
return cljs$core$print_str;
})()
;
/**
 * Same as print followed by (newline)
 * @param {...*} var_args
 */
cljs.core.println = (function() { 
var cljs$core$println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var cljs$core$println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10117__i = 0, G__10117__a = new Array(arguments.length -  0);
while (G__10117__i < G__10117__a.length) {G__10117__a[G__10117__i] = arguments[G__10117__i + 0]; ++G__10117__i;}
  objs = new cljs.core.IndexedSeq(G__10117__a,0);
} 
return cljs$core$println__delegate.call(this,objs);};
cljs$core$println.cljs$lang$maxFixedArity = 0;
cljs$core$println.cljs$lang$applyTo = (function (arglist__10118){
var objs = cljs.core.seq(arglist__10118);
return cljs$core$println__delegate(objs);
});
cljs$core$println.cljs$core$IFn$_invoke$arity$variadic = cljs$core$println__delegate;
return cljs$core$println;
})()
;
/**
 * println to a string, returning it
 * @param {...*} var_args
 */
cljs.core.println_str = (function() { 
var cljs$core$println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs$core$println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10119__i = 0, G__10119__a = new Array(arguments.length -  0);
while (G__10119__i < G__10119__a.length) {G__10119__a[G__10119__i] = arguments[G__10119__i + 0]; ++G__10119__i;}
  objs = new cljs.core.IndexedSeq(G__10119__a,0);
} 
return cljs$core$println_str__delegate.call(this,objs);};
cljs$core$println_str.cljs$lang$maxFixedArity = 0;
cljs$core$println_str.cljs$lang$applyTo = (function (arglist__10120){
var objs = cljs.core.seq(arglist__10120);
return cljs$core$println_str__delegate(objs);
});
cljs$core$println_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$println_str__delegate;
return cljs$core$println_str;
})()
;
/**
 * Same as pr followed by (newline).
 * @param {...*} var_args
 */
cljs.core.prn = (function() { 
var cljs$core$prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var cljs$core$prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10121__i = 0, G__10121__a = new Array(arguments.length -  0);
while (G__10121__i < G__10121__a.length) {G__10121__a[G__10121__i] = arguments[G__10121__i + 0]; ++G__10121__i;}
  objs = new cljs.core.IndexedSeq(G__10121__a,0);
} 
return cljs$core$prn__delegate.call(this,objs);};
cljs$core$prn.cljs$lang$maxFixedArity = 0;
cljs$core$prn.cljs$lang$applyTo = (function (arglist__10122){
var objs = cljs.core.seq(arglist__10122);
return cljs$core$prn__delegate(objs);
});
cljs$core$prn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$prn__delegate;
return cljs$core$prn;
})()
;
cljs.core.print_map = (function cljs$core$print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__10129_10135 = cljs.core.key(e);
var G__10130_10136 = w;
var G__10131_10137 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10129_10135,G__10130_10136,G__10131_10137) : print_one.call(null,G__10129_10135,G__10130_10136,G__10131_10137));

cljs.core._write(w," ");

var G__10132 = cljs.core.val(e);
var G__10133 = w;
var G__10134 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10132,G__10133,G__10134) : print_one.call(null,G__10132,G__10133,G__10134));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
 * Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
 * 
 * (apply f its-current-meta args)
 * 
 * f must be free of side-effects
 * @param {...*} var_args
 */
cljs.core.alter_meta_BANG_ = (function() { 
var cljs$core$alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var cljs$core$alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__10138__i = 0, G__10138__a = new Array(arguments.length -  2);
while (G__10138__i < G__10138__a.length) {G__10138__a[G__10138__i] = arguments[G__10138__i + 2]; ++G__10138__i;}
  args = new cljs.core.IndexedSeq(G__10138__a,0);
} 
return cljs$core$alter_meta_BANG___delegate.call(this,iref,f,args);};
cljs$core$alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__10139){
var iref = cljs.core.first(arglist__10139);
arglist__10139 = cljs.core.next(arglist__10139);
var f = cljs.core.first(arglist__10139);
var args = cljs.core.rest(arglist__10139);
return cljs$core$alter_meta_BANG___delegate(iref,f,args);
});
cljs$core$alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$alter_meta_BANG___delegate;
return cljs$core$alter_meta_BANG_;
})()
;
/**
 * Atomically resets the metadata for an atom
 */
cljs.core.reset_meta_BANG_ = (function cljs$core$reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
 * Alpha - subject to change.
 * 
 * Adds a watch function to an atom reference. The watch fn must be a
 * fn of 4 args: a key, the reference, its old-state, its
 * new-state. Whenever the reference's state might have been changed,
 * any registered watches will have their functions called. The watch
 * fn will be called synchronously. Note that an atom's state
 * may have changed again prior to the fn call, so use old/new-state
 * rather than derefing the reference. Keys must be unique per
 * reference, and can be used to remove the watch with remove-watch,
 * but are otherwise considered opaque by the watch mechanism.  Bear in
 * mind that regardless of the result or action of the watch fns the
 * atom's value will change.  Example:
 * 
 * (def a (atom 0))
 * (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
 * (swap! a inc)
 * ;; Assertion Error
 * (deref a)
 * ;=> 1
 */
cljs.core.add_watch = (function cljs$core$add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
 * Alpha - subject to change.
 * 
 * Removes a watch (set by add-watch) from a reference
 */
cljs.core.remove_watch = (function cljs$core$remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
 * Returns a new symbol with a unique name. If a prefix string is
 * supplied, the name is prefix# where # is some unique number. If
 * prefix is not supplied, the prefix is 'G__'.
 */
cljs.core.gensym = (function() {
var cljs$core$gensym = null;
var cljs$core$gensym__0 = (function (){
return cljs$core$gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var cljs$core$gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__10142 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10142) : cljs.core.atom.call(null,G__10142));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
cljs$core$gensym = function(prefix_string){
switch(arguments.length){
case 0:
return cljs$core$gensym__0.call(this);
case 1:
return cljs$core$gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$gensym.cljs$core$IFn$_invoke$arity$0 = cljs$core$gensym__0;
cljs$core$gensym.cljs$core$IFn$_invoke$arity$1 = cljs$core$gensym__1;
return cljs$core$gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function cljs$core$__GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
 * returns true if x is a Delay created with delay
 */
cljs.core.delay_QMARK_ = (function cljs$core$delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
 * If x is a Delay, returns the (possibly cached) value of its expression, else returns x
 */
cljs.core.force = (function cljs$core$force(x){
if(cljs.core.delay_QMARK_(x)){
var G__10144 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10144) : cljs.core.deref.call(null,G__10144));
} else {
return x;
}
});
/**
 * Returns true if a value has been produced for a promise, delay, future or lazy sequence.
 */
cljs.core.realized_QMARK_ = (function cljs$core$realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function cljs$core$preserving_reduced(rf){
return (function (p1__10145_SHARP_,p2__10146_SHARP_){
var ret = (function (){var G__10149 = p1__10145_SHARP_;
var G__10150 = p2__10146_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10149,G__10150) : rf.call(null,G__10149,G__10150));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
 * A transducer which concatenates the contents of each input, which must be a
 * collection, into the reduction.
 */
cljs.core.cat = (function cljs$core$cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__10153 = null;
var G__10153__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10153__1 = (function (result){
var G__10152 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10152) : rf.call(null,G__10152));
});
var G__10153__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__10153 = function(result,input){
switch(arguments.length){
case 0:
return G__10153__0.call(this);
case 1:
return G__10153__1.call(this,result);
case 2:
return G__10153__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10153.cljs$core$IFn$_invoke$arity$0 = G__10153__0;
G__10153.cljs$core$IFn$_invoke$arity$1 = G__10153__1;
G__10153.cljs$core$IFn$_invoke$arity$2 = G__10153__2;
return G__10153;
})()
;})(rf1))
});
/**
 * Returns a lazy sequence removing consecutive duplicates in coll.
 * Returns a transducer when no collection is provided.
 */
cljs.core.dedupe = (function() {
var cljs$core$dedupe = null;
var cljs$core$dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__10162 = null;
var G__10162__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10162__1 = (function (result){
var G__10158 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10158) : rf.call(null,G__10158));
});
var G__10162__2 = (function (result,input){
var prior = (function (){var G__10159 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10159) : cljs.core.deref.call(null,G__10159));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__10160 = result;
var G__10161 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10160,G__10161) : rf.call(null,G__10160,G__10161));
}
});
G__10162 = function(result,input){
switch(arguments.length){
case 0:
return G__10162__0.call(this);
case 1:
return G__10162__1.call(this,result);
case 2:
return G__10162__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10162.cljs$core$IFn$_invoke$arity$0 = G__10162__0;
G__10162.cljs$core$IFn$_invoke$arity$1 = G__10162__1;
G__10162.cljs$core$IFn$_invoke$arity$2 = G__10162__2;
return G__10162;
})()
;})(pa))
});
});
var cljs$core$dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs$core$dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
cljs$core$dedupe = function(coll){
switch(arguments.length){
case 0:
return cljs$core$dedupe__0.call(this);
case 1:
return cljs$core$dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dedupe.cljs$core$IFn$_invoke$arity$0 = cljs$core$dedupe__0;
cljs$core$dedupe.cljs$core$IFn$_invoke$arity$1 = cljs$core$dedupe__1;
return cljs$core$dedupe;
})()
;
/**
 * Returns items from coll with random probability of prob (0.0 -
 * 1.0).  Returns a transducer when no collection is provided.
 */
cljs.core.random_sample = (function() {
var cljs$core$random_sample = null;
var cljs$core$random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var cljs$core$random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
cljs$core$random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return cljs$core$random_sample__1.call(this,prob);
case 2:
return cljs$core$random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$random_sample.cljs$core$IFn$_invoke$arity$1 = cljs$core$random_sample__1;
cljs$core$random_sample.cljs$core$IFn$_invoke$arity$2 = cljs$core$random_sample__2;
return cljs$core$random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function cljs$core$__GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
/**
 * Returns a reducible/iterable/seqable application of
 * the transducer to the items in coll. Note that these applications
 * will be performed every time iterator/seq/reduce is called.
 */
cljs.core.eduction = (function cljs$core$eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
 * Runs the supplied procedure (via reduce), for purposes of side
 * effects, on successive items in the collection. Returns nil
 */
cljs.core.run_BANG_ = (function cljs$core$run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__10164_SHARP_,p2__10163_SHARP_){
var G__10166 = p2__10163_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__10166) : proc.call(null,G__10166));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj10168 = {};
return obj10168;
})();

/**
 * Recursively transforms clj values to JavaScript
 */
cljs.core._clj__GT_js = (function cljs$core$_clj__GT_js(x){
if((function (){var and__3755__auto__ = x;
if(and__3755__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3755__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4403__auto__ = (((x == null))?null:x);
return (function (){var or__3767__auto__ = (cljs.core._clj__GT_js[(function (){var G__10172 = x__4403__auto__;
return goog.typeOf(G__10172);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

/**
 * Transforms map keys to valid JavaScript keys. Arbitrary keys are
 * encoded to their string representation via (pr-str x)
 */
cljs.core._key__GT_js = (function cljs$core$_key__GT_js(x){
if((function (){var and__3755__auto__ = x;
if(and__3755__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3755__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4403__auto__ = (((x == null))?null:x);
return (function (){var or__3767__auto__ = (cljs.core._key__GT_js[(function (){var G__10176 = x__4403__auto__;
return goog.typeOf(G__10176);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function cljs$core$key__GT_js(k){
if((function (){var G__10179 = k;
if(G__10179){
var bit__4441__auto__ = null;
if(cljs.core.truth_((function (){var or__3767__auto__ = bit__4441__auto__;
if(cljs.core.truth_(or__3767__auto__)){
return or__3767__auto__;
} else {
return G__10179.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__10179.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__10179);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__10179);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__10180 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__10180) : cljs.core.clj__GT_js.call(null,G__10180));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
 * Recursively transforms ClojureScript values to JavaScript.
 * sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
 * Maps become Objects. Arbitrary keys are encoded to by key->js.
 */
cljs.core.clj__GT_js = (function cljs$core$clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__10196 = x;
if(G__10196){
var bit__4441__auto__ = null;
if(cljs.core.truth_((function (){var or__3767__auto__ = bit__4441__auto__;
if(cljs.core.truth_(or__3767__auto__)){
return or__3767__auto__;
} else {
return G__10196.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__10196.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__10196);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__10196);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj10198 = {};
return obj10198;
})();
var seq__10199_10209 = cljs.core.seq(x);
var chunk__10200_10210 = null;
var count__10201_10211 = (0);
var i__10202_10212 = (0);
while(true){
if((i__10202_10212 < count__10201_10211)){
var vec__10203_10213 = chunk__10200_10210.cljs$core$IIndexed$_nth$arity$2(null,i__10202_10212);
var k_10214 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10203_10213,(0),null);
var v_10215 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10203_10213,(1),null);
(m[cljs.core.key__GT_js(k_10214)] = cljs$core$clj__GT_js(v_10215));

var G__10216 = seq__10199_10209;
var G__10217 = chunk__10200_10210;
var G__10218 = count__10201_10211;
var G__10219 = (i__10202_10212 + (1));
seq__10199_10209 = G__10216;
chunk__10200_10210 = G__10217;
count__10201_10211 = G__10218;
i__10202_10212 = G__10219;
continue;
} else {
var temp__4126__auto___10220 = cljs.core.seq(seq__10199_10209);
if(temp__4126__auto___10220){
var seq__10199_10221__$1 = temp__4126__auto___10220;
if(cljs.core.chunked_seq_QMARK_(seq__10199_10221__$1)){
var c__4552__auto___10222 = cljs.core.chunk_first(seq__10199_10221__$1);
var G__10223 = cljs.core.chunk_rest(seq__10199_10221__$1);
var G__10224 = c__4552__auto___10222;
var G__10225 = cljs.core.count(c__4552__auto___10222);
var G__10226 = (0);
seq__10199_10209 = G__10223;
chunk__10200_10210 = G__10224;
count__10201_10211 = G__10225;
i__10202_10212 = G__10226;
continue;
} else {
var vec__10204_10227 = cljs.core.first(seq__10199_10221__$1);
var k_10228 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10204_10227,(0),null);
var v_10229 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10204_10227,(1),null);
(m[cljs.core.key__GT_js(k_10228)] = cljs$core$clj__GT_js(v_10229));

var G__10230 = cljs.core.next(seq__10199_10221__$1);
var G__10231 = null;
var G__10232 = (0);
var G__10233 = (0);
seq__10199_10209 = G__10230;
chunk__10200_10210 = G__10231;
count__10201_10211 = G__10232;
i__10202_10212 = G__10233;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__10205_10234 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js,x));
var chunk__10206_10235 = null;
var count__10207_10236 = (0);
var i__10208_10237 = (0);
while(true){
if((i__10208_10237 < count__10207_10236)){
var x_10238__$1 = chunk__10206_10235.cljs$core$IIndexed$_nth$arity$2(null,i__10208_10237);
arr.push(x_10238__$1);

var G__10239 = seq__10205_10234;
var G__10240 = chunk__10206_10235;
var G__10241 = count__10207_10236;
var G__10242 = (i__10208_10237 + (1));
seq__10205_10234 = G__10239;
chunk__10206_10235 = G__10240;
count__10207_10236 = G__10241;
i__10208_10237 = G__10242;
continue;
} else {
var temp__4126__auto___10243 = cljs.core.seq(seq__10205_10234);
if(temp__4126__auto___10243){
var seq__10205_10244__$1 = temp__4126__auto___10243;
if(cljs.core.chunked_seq_QMARK_(seq__10205_10244__$1)){
var c__4552__auto___10245 = cljs.core.chunk_first(seq__10205_10244__$1);
var G__10246 = cljs.core.chunk_rest(seq__10205_10244__$1);
var G__10247 = c__4552__auto___10245;
var G__10248 = cljs.core.count(c__4552__auto___10245);
var G__10249 = (0);
seq__10205_10234 = G__10246;
chunk__10206_10235 = G__10247;
count__10207_10236 = G__10248;
i__10208_10237 = G__10249;
continue;
} else {
var x_10250__$1 = cljs.core.first(seq__10205_10244__$1);
arr.push(x_10250__$1);

var G__10251 = cljs.core.next(seq__10205_10244__$1);
var G__10252 = null;
var G__10253 = (0);
var G__10254 = (0);
seq__10205_10234 = G__10251;
chunk__10206_10235 = G__10252;
count__10207_10236 = G__10253;
i__10208_10237 = G__10254;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj10256 = {};
return obj10256;
})();

/**
 * Transforms JavaScript values to Clojure
 */
cljs.core._js__GT_clj = (function cljs$core$_js__GT_clj(x,options){
if((function (){var and__3755__auto__ = x;
if(and__3755__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3755__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4403__auto__ = (((x == null))?null:x);
return (function (){var or__3767__auto__ = (cljs.core._js__GT_clj[(function (){var G__10260 = x__4403__auto__;
return goog.typeOf(G__10260);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
 * Recursively transforms JavaScript arrays into ClojureScript
 * vectors, and JavaScript objects into ClojureScript maps.  With
 * option ':keywordize-keys true' will convert object fields from
 * strings to keywords.
 * @param {...*} var_args
 */
cljs.core.js__GT_clj = (function() {
var cljs$core$js__GT_clj = null;
var cljs$core$js__GT_clj__1 = (function (x){
return cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var cljs$core$js__GT_clj__2 = (function() { 
var G__10317__delegate = function (x,opts){
var map__10290 = opts;
var map__10290__$1 = ((cljs.core.seq_QMARK_(map__10290))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__10290):map__10290);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__10290__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__10290,map__10290__$1,keywordize_keys,keyfn){
return (function cljs$core$js__GT_clj_$_thisfn(x__$1){
if((function (){var G__10306 = x__$1;
if(G__10306){
var bit__4441__auto__ = null;
if(cljs.core.truth_((function (){var or__3767__auto__ = bit__4441__auto__;
if(cljs.core.truth_(or__3767__auto__)){
return or__3767__auto__;
} else {
return G__10306.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__10306.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__10306);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__10306);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn,x__$1));
} else {
if(cljs.core.array_QMARK_(x__$1)){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4521__auto__ = ((function (map__10290,map__10290__$1,keywordize_keys,keyfn){
return (function cljs$core$js__GT_clj_$_thisfn_$_iter__10307(s__10308){
return (new cljs.core.LazySeq(null,((function (map__10290,map__10290__$1,keywordize_keys,keyfn){
return (function (){
var s__10308__$1 = s__10308;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__10308__$1);
if(temp__4126__auto__){
var s__10308__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__10308__$2)){
var c__4519__auto__ = cljs.core.chunk_first(s__10308__$2);
var size__4520__auto__ = cljs.core.count(c__4519__auto__);
var b__10310 = cljs.core.chunk_buffer(size__4520__auto__);
if((function (){var i__10309 = (0);
while(true){
if((i__10309 < size__4520__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4519__auto__,i__10309);
cljs.core.chunk_append(b__10310,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__10315 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__10315) : keyfn.call(null,G__10315));
})(),cljs$core$js__GT_clj_$_thisfn((x__$1[k]))], null));

var G__10318 = (i__10309 + (1));
i__10309 = G__10318;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__10310),cljs$core$js__GT_clj_$_thisfn_$_iter__10307(cljs.core.chunk_rest(s__10308__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__10310),null);
}
} else {
var k = cljs.core.first(s__10308__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__10316 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__10316) : keyfn.call(null,G__10316));
})(),cljs$core$js__GT_clj_$_thisfn((x__$1[k]))], null),cljs$core$js__GT_clj_$_thisfn_$_iter__10307(cljs.core.rest(s__10308__$2)));
}
} else {
return null;
}
break;
}
});})(map__10290,map__10290__$1,keywordize_keys,keyfn))
,null,null));
});})(map__10290,map__10290__$1,keywordize_keys,keyfn))
;
return iter__4521__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__10290,map__10290__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__10317 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__10319__i = 0, G__10319__a = new Array(arguments.length -  1);
while (G__10319__i < G__10319__a.length) {G__10319__a[G__10319__i] = arguments[G__10319__i + 1]; ++G__10319__i;}
  opts = new cljs.core.IndexedSeq(G__10319__a,0);
} 
return G__10317__delegate.call(this,x,opts);};
G__10317.cljs$lang$maxFixedArity = 1;
G__10317.cljs$lang$applyTo = (function (arglist__10320){
var x = cljs.core.first(arglist__10320);
var opts = cljs.core.rest(arglist__10320);
return G__10317__delegate(x,opts);
});
G__10317.cljs$core$IFn$_invoke$arity$variadic = G__10317__delegate;
return G__10317;
})()
;
cljs$core$js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return cljs$core$js__GT_clj__1.call(this,x);
default:
var G__10321 = null;
if (arguments.length > 1) {
var G__10322__i = 0, G__10322__a = new Array(arguments.length -  1);
while (G__10322__i < G__10322__a.length) {G__10322__a[G__10322__i] = arguments[G__10322__i + 1]; ++G__10322__i;}
G__10321 = new cljs.core.IndexedSeq(G__10322__a,0);
}
return cljs$core$js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__10321);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs$core$js__GT_clj.cljs$lang$applyTo = cljs$core$js__GT_clj__2.cljs$lang$applyTo;
cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$1 = cljs$core$js__GT_clj__1;
cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$js__GT_clj;
})()
;
/**
 * Returns a memoized version of a referentially transparent function. The
 * memoized version of the function keeps a cache of the mapping from arguments
 * to results and, when calls with the same arguments are repeated often, has
 * higher performance at the expense of higher memory use.
 */
cljs.core.memoize = (function cljs$core$memoize(f){
var mem = (function (){var G__10325 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10325) : cljs.core.atom.call(null,G__10325));
})();
return ((function (mem){
return (function() { 
var G__10327__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__10326 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10326) : cljs.core.deref.call(null,G__10326));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__10327 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__10328__i = 0, G__10328__a = new Array(arguments.length -  0);
while (G__10328__i < G__10328__a.length) {G__10328__a[G__10328__i] = arguments[G__10328__i + 0]; ++G__10328__i;}
  args = new cljs.core.IndexedSeq(G__10328__a,0);
} 
return G__10327__delegate.call(this,args);};
G__10327.cljs$lang$maxFixedArity = 0;
G__10327.cljs$lang$applyTo = (function (arglist__10329){
var args = cljs.core.seq(arglist__10329);
return G__10327__delegate(args);
});
G__10327.cljs$core$IFn$_invoke$arity$variadic = G__10327__delegate;
return G__10327;
})()
;
;})(mem))
});
/**
 * trampoline can be used to convert algorithms requiring mutual
 * recursion without stack consumption. Calls f with supplied args, if
 * any. If f returns a fn, calls that fn with no arguments, and
 * continues to repeat, until the return value is not a fn, then
 * returns that non-fn value. Note that if you want to return a fn as a
 * final value, you must wrap it in some data structure and unpack it
 * after trampoline returns.
 * @param {...*} var_args
 */
cljs.core.trampoline = (function() {
var cljs$core$trampoline = null;
var cljs$core$trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__10331 = ret;
f = G__10331;
continue;
} else {
return ret;
}
break;
}
});
var cljs$core$trampoline__2 = (function() { 
var G__10332__delegate = function (f,args){
return cljs$core$trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__10332 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__10333__i = 0, G__10333__a = new Array(arguments.length -  1);
while (G__10333__i < G__10333__a.length) {G__10333__a[G__10333__i] = arguments[G__10333__i + 1]; ++G__10333__i;}
  args = new cljs.core.IndexedSeq(G__10333__a,0);
} 
return G__10332__delegate.call(this,f,args);};
G__10332.cljs$lang$maxFixedArity = 1;
G__10332.cljs$lang$applyTo = (function (arglist__10334){
var f = cljs.core.first(arglist__10334);
var args = cljs.core.rest(arglist__10334);
return G__10332__delegate(f,args);
});
G__10332.cljs$core$IFn$_invoke$arity$variadic = G__10332__delegate;
return G__10332;
})()
;
cljs$core$trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return cljs$core$trampoline__1.call(this,f);
default:
var G__10335 = null;
if (arguments.length > 1) {
var G__10336__i = 0, G__10336__a = new Array(arguments.length -  1);
while (G__10336__i < G__10336__a.length) {G__10336__a[G__10336__i] = arguments[G__10336__i + 1]; ++G__10336__i;}
G__10335 = new cljs.core.IndexedSeq(G__10336__a,0);
}
return cljs$core$trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__10335);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$trampoline.cljs$lang$maxFixedArity = 1;
cljs$core$trampoline.cljs$lang$applyTo = cljs$core$trampoline__2.cljs$lang$applyTo;
cljs$core$trampoline.cljs$core$IFn$_invoke$arity$1 = cljs$core$trampoline__1;
cljs$core$trampoline.cljs$core$IFn$_invoke$arity$variadic = cljs$core$trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$trampoline;
})()
;
/**
 * Returns a random floating point number between 0 (inclusive) and
 * n (default 1) (exclusive).
 */
cljs.core.rand = (function() {
var cljs$core$rand = null;
var cljs$core$rand__0 = (function (){
return cljs$core$rand.cljs$core$IFn$_invoke$arity$1((1));
});
var cljs$core$rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
cljs$core$rand = function(n){
switch(arguments.length){
case 0:
return cljs$core$rand__0.call(this);
case 1:
return cljs$core$rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$rand.cljs$core$IFn$_invoke$arity$0 = cljs$core$rand__0;
cljs$core$rand.cljs$core$IFn$_invoke$arity$1 = cljs$core$rand__1;
return cljs$core$rand;
})()
;
/**
 * Returns a random integer between 0 (inclusive) and n (exclusive).
 */
cljs.core.rand_int = (function cljs$core$rand_int(n){
var G__10339 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__10339) : Math.floor.call(null,G__10339));
});
/**
 * Return a random element of the (sequential) collection. Will have
 * the same performance characteristics as nth for the given
 * collection.
 */
cljs.core.rand_nth = (function cljs$core$rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
 * Returns a map of the elements of coll keyed by the result of
 * f on each element. The value at each key will be a vector of the
 * corresponding elements, in the order they appeared in coll.
 */
cljs.core.group_by = (function cljs$core$group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__10341 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10341) : f.call(null,G__10341));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
 * Creates a hierarchy object for use with derive, isa? etc.
 */
cljs.core.make_hierarchy = (function cljs$core$make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function cljs$core$get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__10343 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10343) : cljs.core.atom.call(null,G__10343));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
 * @param {...*} var_args
 */
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var cljs$core$swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var cljs$core$swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__10344__i = 0, G__10344__a = new Array(arguments.length -  1);
while (G__10344__i < G__10344__a.length) {G__10344__a[G__10344__i] = arguments[G__10344__i + 1]; ++G__10344__i;}
  args = new cljs.core.IndexedSeq(G__10344__a,0);
} 
return cljs$core$swap_global_hierarchy_BANG___delegate.call(this,f,args);};
cljs$core$swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs$core$swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__10345){
var f = cljs.core.first(arglist__10345);
var args = cljs.core.rest(arglist__10345);
return cljs$core$swap_global_hierarchy_BANG___delegate(f,args);
});
cljs$core$swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$swap_global_hierarchy_BANG___delegate;
return cljs$core$swap_global_hierarchy_BANG_;
})()
;
/**
 * Returns true if (= child parent), or child is directly or indirectly derived from
 * parent, either via a JavaScript type inheritance relationship or a
 * relationship established via derive. h must be a hierarchy obtained
 * from make-hierarchy, if not supplied defaults to the global
 * hierarchy
 */
cljs.core.isa_QMARK_ = (function() {
var cljs$core$isa_QMARK_ = null;
var cljs$core$isa_QMARK___2 = (function (child,parent){
return cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__10410 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10410) : cljs.core.deref.call(null,G__10410));
})(),child,parent);
});
var cljs$core$isa_QMARK___3 = (function (h,child,parent){
var or__3767__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
var and__3755__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3755__auto__){
var and__3755__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3755__auto____$1){
var and__3755__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3755__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__10435 = cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__10433 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__10433) : child.call(null,G__10433));
})(),(function (){var G__10434 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__10434) : parent.call(null,G__10434));
})());
var G__10436 = (i + (1));
ret = G__10435;
i = G__10436;
continue;
}
break;
}
} else {
return and__3755__auto____$2;
}
} else {
return and__3755__auto____$1;
}
} else {
return and__3755__auto__;
}
}
}
});
cljs$core$isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return cljs$core$isa_QMARK___2.call(this,h,child);
case 3:
return cljs$core$isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = cljs$core$isa_QMARK___2;
cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = cljs$core$isa_QMARK___3;
return cljs$core$isa_QMARK_;
})()
;
/**
 * Returns the immediate parents of tag, either via a JavaScript type
 * inheritance relationship or a relationship established via derive. h
 * must be a hierarchy obtained from make-hierarchy, if not supplied
 * defaults to the global hierarchy
 */
cljs.core.parents = (function() {
var cljs$core$parents = null;
var cljs$core$parents__1 = (function (tag){
return cljs$core$parents.cljs$core$IFn$_invoke$arity$2((function (){var G__10440 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10440) : cljs.core.deref.call(null,G__10440));
})(),tag);
});
var cljs$core$parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
cljs$core$parents = function(h,tag){
switch(arguments.length){
case 1:
return cljs$core$parents__1.call(this,h);
case 2:
return cljs$core$parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$parents.cljs$core$IFn$_invoke$arity$1 = cljs$core$parents__1;
cljs$core$parents.cljs$core$IFn$_invoke$arity$2 = cljs$core$parents__2;
return cljs$core$parents;
})()
;
/**
 * Returns the immediate and indirect parents of tag, either via a JavaScript type
 * inheritance relationship or a relationship established via derive. h
 * must be a hierarchy obtained from make-hierarchy, if not supplied
 * defaults to the global hierarchy
 */
cljs.core.ancestors = (function() {
var cljs$core$ancestors = null;
var cljs$core$ancestors__1 = (function (tag){
return cljs$core$ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__10444 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10444) : cljs.core.deref.call(null,G__10444));
})(),tag);
});
var cljs$core$ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
cljs$core$ancestors = function(h,tag){
switch(arguments.length){
case 1:
return cljs$core$ancestors__1.call(this,h);
case 2:
return cljs$core$ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$ancestors.cljs$core$IFn$_invoke$arity$1 = cljs$core$ancestors__1;
cljs$core$ancestors.cljs$core$IFn$_invoke$arity$2 = cljs$core$ancestors__2;
return cljs$core$ancestors;
})()
;
/**
 * Returns the immediate and indirect children of tag, through a
 * relationship established via derive. h must be a hierarchy obtained
 * from make-hierarchy, if not supplied defaults to the global
 * hierarchy. Note: does not work on JavaScript type inheritance
 * relationships.
 */
cljs.core.descendants = (function() {
var cljs$core$descendants = null;
var cljs$core$descendants__1 = (function (tag){
return cljs$core$descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__10448 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10448) : cljs.core.deref.call(null,G__10448));
})(),tag);
});
var cljs$core$descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
cljs$core$descendants = function(h,tag){
switch(arguments.length){
case 1:
return cljs$core$descendants__1.call(this,h);
case 2:
return cljs$core$descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$descendants.cljs$core$IFn$_invoke$arity$1 = cljs$core$descendants__1;
cljs$core$descendants.cljs$core$IFn$_invoke$arity$2 = cljs$core$descendants__2;
return cljs$core$descendants;
})()
;
/**
 * Establishes a parent/child relationship between parent and
 * tag. Parent must be a namespace-qualified symbol or keyword and
 * child can be either a namespace-qualified symbol or keyword or a
 * class. h must be a hierarchy obtained from make-hierarchy, if not
 * supplied defaults to, and modifies, the global hierarchy.
 */
cljs.core.derive = (function() {
var cljs$core$derive = null;
var cljs$core$derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs$core$derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var cljs$core$derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__10457 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__10457) : targets.call(null,G__10457));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__10458 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__10458) : sources.call(null,G__10458));
})()));
});})(tp,td,ta))
;
var or__3767__auto__ = ((cljs.core.contains_QMARK_((function (){var G__10462 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__10462) : tp.call(null,G__10462));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__10463 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__10463) : ta.call(null,G__10463));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__10464 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__10464) : ta.call(null,G__10464));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3767__auto__)){
return or__3767__auto__;
} else {
return h;
}
});
cljs$core$derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return cljs$core$derive__2.call(this,h,tag);
case 3:
return cljs$core$derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$derive.cljs$core$IFn$_invoke$arity$2 = cljs$core$derive__2;
cljs$core$derive.cljs$core$IFn$_invoke$arity$3 = cljs$core$derive__3;
return cljs$core$derive;
})()
;
/**
 * Removes a parent/child relationship between parent and
 * tag. h must be a hierarchy obtained from make-hierarchy, if not
 * supplied defaults to, and modifies, the global hierarchy.
 */
cljs.core.underive = (function() {
var cljs$core$underive = null;
var cljs$core$underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs$core$underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var cljs$core$underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__10471 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__10471) : parentMap.call(null,G__10471));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__10472 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__10472) : parentMap.call(null,G__10472));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__10465_SHARP_){
return cljs.core.cons(cljs.core.first(p1__10465_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__10465_SHARP_),cljs.core.second(p1__10465_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__10473 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__10473) : parentMap.call(null,G__10473));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__10466_SHARP_,p2__10467_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__10466_SHARP_,p2__10467_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
cljs$core$underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return cljs$core$underive__2.call(this,h,tag);
case 3:
return cljs$core$underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$underive.cljs$core$IFn$_invoke$arity$2 = cljs$core$underive__2;
cljs$core$underive.cljs$core$IFn$_invoke$arity$3 = cljs$core$underive__3;
return cljs$core$underive;
})()
;
cljs.core.reset_cache = (function cljs$core$reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__10476 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10476) : cljs.core.deref.call(null,G__10476));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__10477 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10477) : cljs.core.deref.call(null,G__10477));
}));
});
cljs.core.prefers_STAR_ = (function cljs$core$prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__10493 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10493) : cljs.core.deref.call(null,G__10493));
})().call(null,x);
var or__3767__auto__ = (cljs.core.truth_((function (){var and__3755__auto__ = xprefs;
if(cljs.core.truth_(and__3755__auto__)){
var G__10495 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__10495) : xprefs.call(null,G__10495));
} else {
return and__3755__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3767__auto__)){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(cljs$core$prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__10496 = cljs.core.rest(ps);
ps = G__10496;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3767__auto____$1)){
return or__3767__auto____$1;
} else {
var or__3767__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__10497 = cljs.core.rest(ps);
ps = G__10497;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3767__auto____$2)){
return or__3767__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function cljs$core$dominates(x,y,prefer_table){
var or__3767__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3767__auto__)){
return or__3767__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function cljs$core$find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__10511){
var vec__10512 = p__10511;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10512,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10512,(1),null);
var e = vec__10512;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__10513 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10513) : cljs.core.deref.call(null,G__10513));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3767__auto__ = (be == null);
if(or__3767__auto__){
return or__3767__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__10514 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10514) : cljs.core.deref.call(null,G__10514));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__10515 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10515) : cljs.core.deref.call(null,G__10515));
})(),(function (){var G__10516 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10516) : cljs.core.deref.call(null,G__10516));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return cljs$core$find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj10518 = {};
return obj10518;
})();

cljs.core._reset = (function cljs$core$_reset(mf){
if((function (){var and__3755__auto__ = mf;
if(and__3755__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3755__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4403__auto__ = (((mf == null))?null:mf);
return (function (){var or__3767__auto__ = (cljs.core._reset[(function (){var G__10522 = x__4403__auto__;
return goog.typeOf(G__10522);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._reset["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function cljs$core$_add_method(mf,dispatch_val,method){
if((function (){var and__3755__auto__ = mf;
if(and__3755__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3755__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4403__auto__ = (((mf == null))?null:mf);
return (function (){var or__3767__auto__ = (cljs.core._add_method[(function (){var G__10526 = x__4403__auto__;
return goog.typeOf(G__10526);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._add_method["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function cljs$core$_remove_method(mf,dispatch_val){
if((function (){var and__3755__auto__ = mf;
if(and__3755__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3755__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4403__auto__ = (((mf == null))?null:mf);
return (function (){var or__3767__auto__ = (cljs.core._remove_method[(function (){var G__10530 = x__4403__auto__;
return goog.typeOf(G__10530);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function cljs$core$_prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3755__auto__ = mf;
if(and__3755__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3755__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4403__auto__ = (((mf == null))?null:mf);
return (function (){var or__3767__auto__ = (cljs.core._prefer_method[(function (){var G__10534 = x__4403__auto__;
return goog.typeOf(G__10534);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function cljs$core$_get_method(mf,dispatch_val){
if((function (){var and__3755__auto__ = mf;
if(and__3755__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3755__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4403__auto__ = (((mf == null))?null:mf);
return (function (){var or__3767__auto__ = (cljs.core._get_method[(function (){var G__10538 = x__4403__auto__;
return goog.typeOf(G__10538);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._get_method["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function cljs$core$_methods(mf){
if((function (){var and__3755__auto__ = mf;
if(and__3755__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3755__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4403__auto__ = (((mf == null))?null:mf);
return (function (){var or__3767__auto__ = (cljs.core._methods[(function (){var G__10542 = x__4403__auto__;
return goog.typeOf(G__10542);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._methods["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function cljs$core$_prefers(mf){
if((function (){var and__3755__auto__ = mf;
if(and__3755__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3755__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4403__auto__ = (((mf == null))?null:mf);
return (function (){var or__3767__auto__ = (cljs.core._prefers[(function (){var G__10546 = x__4403__auto__;
return goog.typeOf(G__10546);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._prefers["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core._default_dispatch_val = (function cljs$core$_default_dispatch_val(mf){
if((function (){var and__3755__auto__ = mf;
if(and__3755__auto__){
return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1;
} else {
return and__3755__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);
} else {
var x__4403__auto__ = (((mf == null))?null:mf);
return (function (){var or__3767__auto__ = (cljs.core._default_dispatch_val[(function (){var G__10550 = x__4403__auto__;
return goog.typeOf(G__10550);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._default_dispatch_val["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val",mf);
}
}
})().call(null,mf);
}
});

cljs.core._dispatch_fn = (function cljs$core$_dispatch_fn(mf){
if((function (){var and__3755__auto__ = mf;
if(and__3755__auto__){
return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1;
} else {
return and__3755__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);
} else {
var x__4403__auto__ = (((mf == null))?null:mf);
return (function (){var or__3767__auto__ = (cljs.core._dispatch_fn[(function (){var G__10554 = x__4403__auto__;
return goog.typeOf(G__10554);
})()]);
if(or__3767__auto__){
return or__3767__auto__;
} else {
var or__3767__auto____$1 = (cljs.core._dispatch_fn["_"]);
if(or__3767__auto____$1){
return or__3767__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function cljs$core$throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__10556 = this$__$1;
return goog.getUid(G__10556);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
return self__.default_dispatch_val;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__10557 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10557) : cljs.core.deref.call(null,G__10557));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__10558 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10558) : cljs.core.deref.call(null,G__10558));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
return self__.dispatch_fn;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__10559 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10559) : cljs.core.deref.call(null,G__10559));
})(),(function (){var G__10560 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10560) : cljs.core.deref.call(null,G__10560));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__10561 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10561) : cljs.core.deref.call(null,G__10561));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__10562 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10562) : cljs.core.deref.call(null,G__10562));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.call = (function() {
var G__11403 = null;
var G__11403__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__11403__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10563 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__10563) : self__.dispatch_fn.call(null,G__10563));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10564 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__10564) : target_fn.call(null,G__10564));
});
var G__11403__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10565 = a;
var G__10566 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__10565,G__10566) : self__.dispatch_fn.call(null,G__10565,G__10566));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10567 = a;
var G__10568 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__10567,G__10568) : target_fn.call(null,G__10567,G__10568));
});
var G__11403__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10569 = a;
var G__10570 = b;
var G__10571 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__10569,G__10570,G__10571) : self__.dispatch_fn.call(null,G__10569,G__10570,G__10571));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10572 = a;
var G__10573 = b;
var G__10574 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__10572,G__10573,G__10574) : target_fn.call(null,G__10572,G__10573,G__10574));
});
var G__11403__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10575 = a;
var G__10576 = b;
var G__10577 = c;
var G__10578 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__10575,G__10576,G__10577,G__10578) : self__.dispatch_fn.call(null,G__10575,G__10576,G__10577,G__10578));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10579 = a;
var G__10580 = b;
var G__10581 = c;
var G__10582 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__10579,G__10580,G__10581,G__10582) : target_fn.call(null,G__10579,G__10580,G__10581,G__10582));
});
var G__11403__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10583 = a;
var G__10584 = b;
var G__10585 = c;
var G__10586 = d;
var G__10587 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__10583,G__10584,G__10585,G__10586,G__10587) : self__.dispatch_fn.call(null,G__10583,G__10584,G__10585,G__10586,G__10587));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10588 = a;
var G__10589 = b;
var G__10590 = c;
var G__10591 = d;
var G__10592 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__10588,G__10589,G__10590,G__10591,G__10592) : target_fn.call(null,G__10588,G__10589,G__10590,G__10591,G__10592));
});
var G__11403__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10593 = a;
var G__10594 = b;
var G__10595 = c;
var G__10596 = d;
var G__10597 = e;
var G__10598 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__10593,G__10594,G__10595,G__10596,G__10597,G__10598) : self__.dispatch_fn.call(null,G__10593,G__10594,G__10595,G__10596,G__10597,G__10598));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10599 = a;
var G__10600 = b;
var G__10601 = c;
var G__10602 = d;
var G__10603 = e;
var G__10604 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__10599,G__10600,G__10601,G__10602,G__10603,G__10604) : target_fn.call(null,G__10599,G__10600,G__10601,G__10602,G__10603,G__10604));
});
var G__11403__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10605 = a;
var G__10606 = b;
var G__10607 = c;
var G__10608 = d;
var G__10609 = e;
var G__10610 = f;
var G__10611 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__10605,G__10606,G__10607,G__10608,G__10609,G__10610,G__10611) : self__.dispatch_fn.call(null,G__10605,G__10606,G__10607,G__10608,G__10609,G__10610,G__10611));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10612 = a;
var G__10613 = b;
var G__10614 = c;
var G__10615 = d;
var G__10616 = e;
var G__10617 = f;
var G__10618 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__10612,G__10613,G__10614,G__10615,G__10616,G__10617,G__10618) : target_fn.call(null,G__10612,G__10613,G__10614,G__10615,G__10616,G__10617,G__10618));
});
var G__11403__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10619 = a;
var G__10620 = b;
var G__10621 = c;
var G__10622 = d;
var G__10623 = e;
var G__10624 = f;
var G__10625 = g;
var G__10626 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__10619,G__10620,G__10621,G__10622,G__10623,G__10624,G__10625,G__10626) : self__.dispatch_fn.call(null,G__10619,G__10620,G__10621,G__10622,G__10623,G__10624,G__10625,G__10626));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10627 = a;
var G__10628 = b;
var G__10629 = c;
var G__10630 = d;
var G__10631 = e;
var G__10632 = f;
var G__10633 = g;
var G__10634 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__10627,G__10628,G__10629,G__10630,G__10631,G__10632,G__10633,G__10634) : target_fn.call(null,G__10627,G__10628,G__10629,G__10630,G__10631,G__10632,G__10633,G__10634));
});
var G__11403__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10635 = a;
var G__10636 = b;
var G__10637 = c;
var G__10638 = d;
var G__10639 = e;
var G__10640 = f;
var G__10641 = g;
var G__10642 = h;
var G__10643 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__10635,G__10636,G__10637,G__10638,G__10639,G__10640,G__10641,G__10642,G__10643) : self__.dispatch_fn.call(null,G__10635,G__10636,G__10637,G__10638,G__10639,G__10640,G__10641,G__10642,G__10643));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10644 = a;
var G__10645 = b;
var G__10646 = c;
var G__10647 = d;
var G__10648 = e;
var G__10649 = f;
var G__10650 = g;
var G__10651 = h;
var G__10652 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__10644,G__10645,G__10646,G__10647,G__10648,G__10649,G__10650,G__10651,G__10652) : target_fn.call(null,G__10644,G__10645,G__10646,G__10647,G__10648,G__10649,G__10650,G__10651,G__10652));
});
var G__11403__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10653 = a;
var G__10654 = b;
var G__10655 = c;
var G__10656 = d;
var G__10657 = e;
var G__10658 = f;
var G__10659 = g;
var G__10660 = h;
var G__10661 = i;
var G__10662 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__10653,G__10654,G__10655,G__10656,G__10657,G__10658,G__10659,G__10660,G__10661,G__10662) : self__.dispatch_fn.call(null,G__10653,G__10654,G__10655,G__10656,G__10657,G__10658,G__10659,G__10660,G__10661,G__10662));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10663 = a;
var G__10664 = b;
var G__10665 = c;
var G__10666 = d;
var G__10667 = e;
var G__10668 = f;
var G__10669 = g;
var G__10670 = h;
var G__10671 = i;
var G__10672 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__10663,G__10664,G__10665,G__10666,G__10667,G__10668,G__10669,G__10670,G__10671,G__10672) : target_fn.call(null,G__10663,G__10664,G__10665,G__10666,G__10667,G__10668,G__10669,G__10670,G__10671,G__10672));
});
var G__11403__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10673 = a;
var G__10674 = b;
var G__10675 = c;
var G__10676 = d;
var G__10677 = e;
var G__10678 = f;
var G__10679 = g;
var G__10680 = h;
var G__10681 = i;
var G__10682 = j;
var G__10683 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__10673,G__10674,G__10675,G__10676,G__10677,G__10678,G__10679,G__10680,G__10681,G__10682,G__10683) : self__.dispatch_fn.call(null,G__10673,G__10674,G__10675,G__10676,G__10677,G__10678,G__10679,G__10680,G__10681,G__10682,G__10683));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10684 = a;
var G__10685 = b;
var G__10686 = c;
var G__10687 = d;
var G__10688 = e;
var G__10689 = f;
var G__10690 = g;
var G__10691 = h;
var G__10692 = i;
var G__10693 = j;
var G__10694 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__10684,G__10685,G__10686,G__10687,G__10688,G__10689,G__10690,G__10691,G__10692,G__10693,G__10694) : target_fn.call(null,G__10684,G__10685,G__10686,G__10687,G__10688,G__10689,G__10690,G__10691,G__10692,G__10693,G__10694));
});
var G__11403__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10695 = a;
var G__10696 = b;
var G__10697 = c;
var G__10698 = d;
var G__10699 = e;
var G__10700 = f;
var G__10701 = g;
var G__10702 = h;
var G__10703 = i;
var G__10704 = j;
var G__10705 = k;
var G__10706 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__10695,G__10696,G__10697,G__10698,G__10699,G__10700,G__10701,G__10702,G__10703,G__10704,G__10705,G__10706) : self__.dispatch_fn.call(null,G__10695,G__10696,G__10697,G__10698,G__10699,G__10700,G__10701,G__10702,G__10703,G__10704,G__10705,G__10706));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10707 = a;
var G__10708 = b;
var G__10709 = c;
var G__10710 = d;
var G__10711 = e;
var G__10712 = f;
var G__10713 = g;
var G__10714 = h;
var G__10715 = i;
var G__10716 = j;
var G__10717 = k;
var G__10718 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__10707,G__10708,G__10709,G__10710,G__10711,G__10712,G__10713,G__10714,G__10715,G__10716,G__10717,G__10718) : target_fn.call(null,G__10707,G__10708,G__10709,G__10710,G__10711,G__10712,G__10713,G__10714,G__10715,G__10716,G__10717,G__10718));
});
var G__11403__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10719 = a;
var G__10720 = b;
var G__10721 = c;
var G__10722 = d;
var G__10723 = e;
var G__10724 = f;
var G__10725 = g;
var G__10726 = h;
var G__10727 = i;
var G__10728 = j;
var G__10729 = k;
var G__10730 = l;
var G__10731 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__10719,G__10720,G__10721,G__10722,G__10723,G__10724,G__10725,G__10726,G__10727,G__10728,G__10729,G__10730,G__10731) : self__.dispatch_fn.call(null,G__10719,G__10720,G__10721,G__10722,G__10723,G__10724,G__10725,G__10726,G__10727,G__10728,G__10729,G__10730,G__10731));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10732 = a;
var G__10733 = b;
var G__10734 = c;
var G__10735 = d;
var G__10736 = e;
var G__10737 = f;
var G__10738 = g;
var G__10739 = h;
var G__10740 = i;
var G__10741 = j;
var G__10742 = k;
var G__10743 = l;
var G__10744 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__10732,G__10733,G__10734,G__10735,G__10736,G__10737,G__10738,G__10739,G__10740,G__10741,G__10742,G__10743,G__10744) : target_fn.call(null,G__10732,G__10733,G__10734,G__10735,G__10736,G__10737,G__10738,G__10739,G__10740,G__10741,G__10742,G__10743,G__10744));
});
var G__11403__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10745 = a;
var G__10746 = b;
var G__10747 = c;
var G__10748 = d;
var G__10749 = e;
var G__10750 = f;
var G__10751 = g;
var G__10752 = h;
var G__10753 = i;
var G__10754 = j;
var G__10755 = k;
var G__10756 = l;
var G__10757 = m;
var G__10758 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__10745,G__10746,G__10747,G__10748,G__10749,G__10750,G__10751,G__10752,G__10753,G__10754,G__10755,G__10756,G__10757,G__10758) : self__.dispatch_fn.call(null,G__10745,G__10746,G__10747,G__10748,G__10749,G__10750,G__10751,G__10752,G__10753,G__10754,G__10755,G__10756,G__10757,G__10758));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10759 = a;
var G__10760 = b;
var G__10761 = c;
var G__10762 = d;
var G__10763 = e;
var G__10764 = f;
var G__10765 = g;
var G__10766 = h;
var G__10767 = i;
var G__10768 = j;
var G__10769 = k;
var G__10770 = l;
var G__10771 = m;
var G__10772 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__10759,G__10760,G__10761,G__10762,G__10763,G__10764,G__10765,G__10766,G__10767,G__10768,G__10769,G__10770,G__10771,G__10772) : target_fn.call(null,G__10759,G__10760,G__10761,G__10762,G__10763,G__10764,G__10765,G__10766,G__10767,G__10768,G__10769,G__10770,G__10771,G__10772));
});
var G__11403__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10773 = a;
var G__10774 = b;
var G__10775 = c;
var G__10776 = d;
var G__10777 = e;
var G__10778 = f;
var G__10779 = g;
var G__10780 = h;
var G__10781 = i;
var G__10782 = j;
var G__10783 = k;
var G__10784 = l;
var G__10785 = m;
var G__10786 = n;
var G__10787 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__10773,G__10774,G__10775,G__10776,G__10777,G__10778,G__10779,G__10780,G__10781,G__10782,G__10783,G__10784,G__10785,G__10786,G__10787) : self__.dispatch_fn.call(null,G__10773,G__10774,G__10775,G__10776,G__10777,G__10778,G__10779,G__10780,G__10781,G__10782,G__10783,G__10784,G__10785,G__10786,G__10787));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10788 = a;
var G__10789 = b;
var G__10790 = c;
var G__10791 = d;
var G__10792 = e;
var G__10793 = f;
var G__10794 = g;
var G__10795 = h;
var G__10796 = i;
var G__10797 = j;
var G__10798 = k;
var G__10799 = l;
var G__10800 = m;
var G__10801 = n;
var G__10802 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__10788,G__10789,G__10790,G__10791,G__10792,G__10793,G__10794,G__10795,G__10796,G__10797,G__10798,G__10799,G__10800,G__10801,G__10802) : target_fn.call(null,G__10788,G__10789,G__10790,G__10791,G__10792,G__10793,G__10794,G__10795,G__10796,G__10797,G__10798,G__10799,G__10800,G__10801,G__10802));
});
var G__11403__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10803 = a;
var G__10804 = b;
var G__10805 = c;
var G__10806 = d;
var G__10807 = e;
var G__10808 = f;
var G__10809 = g;
var G__10810 = h;
var G__10811 = i;
var G__10812 = j;
var G__10813 = k;
var G__10814 = l;
var G__10815 = m;
var G__10816 = n;
var G__10817 = o;
var G__10818 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__10803,G__10804,G__10805,G__10806,G__10807,G__10808,G__10809,G__10810,G__10811,G__10812,G__10813,G__10814,G__10815,G__10816,G__10817,G__10818) : self__.dispatch_fn.call(null,G__10803,G__10804,G__10805,G__10806,G__10807,G__10808,G__10809,G__10810,G__10811,G__10812,G__10813,G__10814,G__10815,G__10816,G__10817,G__10818));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10819 = a;
var G__10820 = b;
var G__10821 = c;
var G__10822 = d;
var G__10823 = e;
var G__10824 = f;
var G__10825 = g;
var G__10826 = h;
var G__10827 = i;
var G__10828 = j;
var G__10829 = k;
var G__10830 = l;
var G__10831 = m;
var G__10832 = n;
var G__10833 = o;
var G__10834 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__10819,G__10820,G__10821,G__10822,G__10823,G__10824,G__10825,G__10826,G__10827,G__10828,G__10829,G__10830,G__10831,G__10832,G__10833,G__10834) : target_fn.call(null,G__10819,G__10820,G__10821,G__10822,G__10823,G__10824,G__10825,G__10826,G__10827,G__10828,G__10829,G__10830,G__10831,G__10832,G__10833,G__10834));
});
var G__11403__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10835 = a;
var G__10836 = b;
var G__10837 = c;
var G__10838 = d;
var G__10839 = e;
var G__10840 = f;
var G__10841 = g;
var G__10842 = h;
var G__10843 = i;
var G__10844 = j;
var G__10845 = k;
var G__10846 = l;
var G__10847 = m;
var G__10848 = n;
var G__10849 = o;
var G__10850 = p;
var G__10851 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__10835,G__10836,G__10837,G__10838,G__10839,G__10840,G__10841,G__10842,G__10843,G__10844,G__10845,G__10846,G__10847,G__10848,G__10849,G__10850,G__10851) : self__.dispatch_fn.call(null,G__10835,G__10836,G__10837,G__10838,G__10839,G__10840,G__10841,G__10842,G__10843,G__10844,G__10845,G__10846,G__10847,G__10848,G__10849,G__10850,G__10851));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10852 = a;
var G__10853 = b;
var G__10854 = c;
var G__10855 = d;
var G__10856 = e;
var G__10857 = f;
var G__10858 = g;
var G__10859 = h;
var G__10860 = i;
var G__10861 = j;
var G__10862 = k;
var G__10863 = l;
var G__10864 = m;
var G__10865 = n;
var G__10866 = o;
var G__10867 = p;
var G__10868 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__10852,G__10853,G__10854,G__10855,G__10856,G__10857,G__10858,G__10859,G__10860,G__10861,G__10862,G__10863,G__10864,G__10865,G__10866,G__10867,G__10868) : target_fn.call(null,G__10852,G__10853,G__10854,G__10855,G__10856,G__10857,G__10858,G__10859,G__10860,G__10861,G__10862,G__10863,G__10864,G__10865,G__10866,G__10867,G__10868));
});
var G__11403__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10869 = a;
var G__10870 = b;
var G__10871 = c;
var G__10872 = d;
var G__10873 = e;
var G__10874 = f;
var G__10875 = g;
var G__10876 = h;
var G__10877 = i;
var G__10878 = j;
var G__10879 = k;
var G__10880 = l;
var G__10881 = m;
var G__10882 = n;
var G__10883 = o;
var G__10884 = p;
var G__10885 = q;
var G__10886 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__10869,G__10870,G__10871,G__10872,G__10873,G__10874,G__10875,G__10876,G__10877,G__10878,G__10879,G__10880,G__10881,G__10882,G__10883,G__10884,G__10885,G__10886) : self__.dispatch_fn.call(null,G__10869,G__10870,G__10871,G__10872,G__10873,G__10874,G__10875,G__10876,G__10877,G__10878,G__10879,G__10880,G__10881,G__10882,G__10883,G__10884,G__10885,G__10886));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10887 = a;
var G__10888 = b;
var G__10889 = c;
var G__10890 = d;
var G__10891 = e;
var G__10892 = f;
var G__10893 = g;
var G__10894 = h;
var G__10895 = i;
var G__10896 = j;
var G__10897 = k;
var G__10898 = l;
var G__10899 = m;
var G__10900 = n;
var G__10901 = o;
var G__10902 = p;
var G__10903 = q;
var G__10904 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__10887,G__10888,G__10889,G__10890,G__10891,G__10892,G__10893,G__10894,G__10895,G__10896,G__10897,G__10898,G__10899,G__10900,G__10901,G__10902,G__10903,G__10904) : target_fn.call(null,G__10887,G__10888,G__10889,G__10890,G__10891,G__10892,G__10893,G__10894,G__10895,G__10896,G__10897,G__10898,G__10899,G__10900,G__10901,G__10902,G__10903,G__10904));
});
var G__11403__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10905 = a;
var G__10906 = b;
var G__10907 = c;
var G__10908 = d;
var G__10909 = e;
var G__10910 = f;
var G__10911 = g;
var G__10912 = h;
var G__10913 = i;
var G__10914 = j;
var G__10915 = k;
var G__10916 = l;
var G__10917 = m;
var G__10918 = n;
var G__10919 = o;
var G__10920 = p;
var G__10921 = q;
var G__10922 = r;
var G__10923 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__10905,G__10906,G__10907,G__10908,G__10909,G__10910,G__10911,G__10912,G__10913,G__10914,G__10915,G__10916,G__10917,G__10918,G__10919,G__10920,G__10921,G__10922,G__10923) : self__.dispatch_fn.call(null,G__10905,G__10906,G__10907,G__10908,G__10909,G__10910,G__10911,G__10912,G__10913,G__10914,G__10915,G__10916,G__10917,G__10918,G__10919,G__10920,G__10921,G__10922,G__10923));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10924 = a;
var G__10925 = b;
var G__10926 = c;
var G__10927 = d;
var G__10928 = e;
var G__10929 = f;
var G__10930 = g;
var G__10931 = h;
var G__10932 = i;
var G__10933 = j;
var G__10934 = k;
var G__10935 = l;
var G__10936 = m;
var G__10937 = n;
var G__10938 = o;
var G__10939 = p;
var G__10940 = q;
var G__10941 = r;
var G__10942 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__10924,G__10925,G__10926,G__10927,G__10928,G__10929,G__10930,G__10931,G__10932,G__10933,G__10934,G__10935,G__10936,G__10937,G__10938,G__10939,G__10940,G__10941,G__10942) : target_fn.call(null,G__10924,G__10925,G__10926,G__10927,G__10928,G__10929,G__10930,G__10931,G__10932,G__10933,G__10934,G__10935,G__10936,G__10937,G__10938,G__10939,G__10940,G__10941,G__10942));
});
var G__11403__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10943 = a;
var G__10944 = b;
var G__10945 = c;
var G__10946 = d;
var G__10947 = e;
var G__10948 = f;
var G__10949 = g;
var G__10950 = h;
var G__10951 = i;
var G__10952 = j;
var G__10953 = k;
var G__10954 = l;
var G__10955 = m;
var G__10956 = n;
var G__10957 = o;
var G__10958 = p;
var G__10959 = q;
var G__10960 = r;
var G__10961 = s;
var G__10962 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__10943,G__10944,G__10945,G__10946,G__10947,G__10948,G__10949,G__10950,G__10951,G__10952,G__10953,G__10954,G__10955,G__10956,G__10957,G__10958,G__10959,G__10960,G__10961,G__10962) : self__.dispatch_fn.call(null,G__10943,G__10944,G__10945,G__10946,G__10947,G__10948,G__10949,G__10950,G__10951,G__10952,G__10953,G__10954,G__10955,G__10956,G__10957,G__10958,G__10959,G__10960,G__10961,G__10962));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10963 = a;
var G__10964 = b;
var G__10965 = c;
var G__10966 = d;
var G__10967 = e;
var G__10968 = f;
var G__10969 = g;
var G__10970 = h;
var G__10971 = i;
var G__10972 = j;
var G__10973 = k;
var G__10974 = l;
var G__10975 = m;
var G__10976 = n;
var G__10977 = o;
var G__10978 = p;
var G__10979 = q;
var G__10980 = r;
var G__10981 = s;
var G__10982 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__10963,G__10964,G__10965,G__10966,G__10967,G__10968,G__10969,G__10970,G__10971,G__10972,G__10973,G__10974,G__10975,G__10976,G__10977,G__10978,G__10979,G__10980,G__10981,G__10982) : target_fn.call(null,G__10963,G__10964,G__10965,G__10966,G__10967,G__10968,G__10969,G__10970,G__10971,G__10972,G__10973,G__10974,G__10975,G__10976,G__10977,G__10978,G__10979,G__10980,G__10981,G__10982));
});
var G__11403__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__11403 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__11403__1.call(this,self__);
case 2:
return G__11403__2.call(this,self__,a);
case 3:
return G__11403__3.call(this,self__,a,b);
case 4:
return G__11403__4.call(this,self__,a,b,c);
case 5:
return G__11403__5.call(this,self__,a,b,c,d);
case 6:
return G__11403__6.call(this,self__,a,b,c,d,e);
case 7:
return G__11403__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__11403__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__11403__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__11403__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__11403__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__11403__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__11403__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__11403__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__11403__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__11403__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__11403__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__11403__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__11403__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__11403__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__11403__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__11403__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11403.cljs$core$IFn$_invoke$arity$1 = G__11403__1;
G__11403.cljs$core$IFn$_invoke$arity$2 = G__11403__2;
G__11403.cljs$core$IFn$_invoke$arity$3 = G__11403__3;
G__11403.cljs$core$IFn$_invoke$arity$4 = G__11403__4;
G__11403.cljs$core$IFn$_invoke$arity$5 = G__11403__5;
G__11403.cljs$core$IFn$_invoke$arity$6 = G__11403__6;
G__11403.cljs$core$IFn$_invoke$arity$7 = G__11403__7;
G__11403.cljs$core$IFn$_invoke$arity$8 = G__11403__8;
G__11403.cljs$core$IFn$_invoke$arity$9 = G__11403__9;
G__11403.cljs$core$IFn$_invoke$arity$10 = G__11403__10;
G__11403.cljs$core$IFn$_invoke$arity$11 = G__11403__11;
G__11403.cljs$core$IFn$_invoke$arity$12 = G__11403__12;
G__11403.cljs$core$IFn$_invoke$arity$13 = G__11403__13;
G__11403.cljs$core$IFn$_invoke$arity$14 = G__11403__14;
G__11403.cljs$core$IFn$_invoke$arity$15 = G__11403__15;
G__11403.cljs$core$IFn$_invoke$arity$16 = G__11403__16;
G__11403.cljs$core$IFn$_invoke$arity$17 = G__11403__17;
G__11403.cljs$core$IFn$_invoke$arity$18 = G__11403__18;
G__11403.cljs$core$IFn$_invoke$arity$19 = G__11403__19;
G__11403.cljs$core$IFn$_invoke$arity$20 = G__11403__20;
G__11403.cljs$core$IFn$_invoke$arity$21 = G__11403__21;
G__11403.cljs$core$IFn$_invoke$arity$22 = G__11403__22;
return G__11403;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args10555){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10555)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10983 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__10983) : self__.dispatch_fn.call(null,G__10983));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10984 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__10984) : target_fn.call(null,G__10984));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10985 = a;
var G__10986 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__10985,G__10986) : self__.dispatch_fn.call(null,G__10985,G__10986));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10987 = a;
var G__10988 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__10987,G__10988) : target_fn.call(null,G__10987,G__10988));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10989 = a;
var G__10990 = b;
var G__10991 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__10989,G__10990,G__10991) : self__.dispatch_fn.call(null,G__10989,G__10990,G__10991));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10992 = a;
var G__10993 = b;
var G__10994 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__10992,G__10993,G__10994) : target_fn.call(null,G__10992,G__10993,G__10994));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10995 = a;
var G__10996 = b;
var G__10997 = c;
var G__10998 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__10995,G__10996,G__10997,G__10998) : self__.dispatch_fn.call(null,G__10995,G__10996,G__10997,G__10998));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10999 = a;
var G__11000 = b;
var G__11001 = c;
var G__11002 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__10999,G__11000,G__11001,G__11002) : target_fn.call(null,G__10999,G__11000,G__11001,G__11002));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11003 = a;
var G__11004 = b;
var G__11005 = c;
var G__11006 = d;
var G__11007 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__11003,G__11004,G__11005,G__11006,G__11007) : self__.dispatch_fn.call(null,G__11003,G__11004,G__11005,G__11006,G__11007));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11008 = a;
var G__11009 = b;
var G__11010 = c;
var G__11011 = d;
var G__11012 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__11008,G__11009,G__11010,G__11011,G__11012) : target_fn.call(null,G__11008,G__11009,G__11010,G__11011,G__11012));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11013 = a;
var G__11014 = b;
var G__11015 = c;
var G__11016 = d;
var G__11017 = e;
var G__11018 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__11013,G__11014,G__11015,G__11016,G__11017,G__11018) : self__.dispatch_fn.call(null,G__11013,G__11014,G__11015,G__11016,G__11017,G__11018));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11019 = a;
var G__11020 = b;
var G__11021 = c;
var G__11022 = d;
var G__11023 = e;
var G__11024 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__11019,G__11020,G__11021,G__11022,G__11023,G__11024) : target_fn.call(null,G__11019,G__11020,G__11021,G__11022,G__11023,G__11024));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11025 = a;
var G__11026 = b;
var G__11027 = c;
var G__11028 = d;
var G__11029 = e;
var G__11030 = f;
var G__11031 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__11025,G__11026,G__11027,G__11028,G__11029,G__11030,G__11031) : self__.dispatch_fn.call(null,G__11025,G__11026,G__11027,G__11028,G__11029,G__11030,G__11031));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11032 = a;
var G__11033 = b;
var G__11034 = c;
var G__11035 = d;
var G__11036 = e;
var G__11037 = f;
var G__11038 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__11032,G__11033,G__11034,G__11035,G__11036,G__11037,G__11038) : target_fn.call(null,G__11032,G__11033,G__11034,G__11035,G__11036,G__11037,G__11038));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11039 = a;
var G__11040 = b;
var G__11041 = c;
var G__11042 = d;
var G__11043 = e;
var G__11044 = f;
var G__11045 = g;
var G__11046 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__11039,G__11040,G__11041,G__11042,G__11043,G__11044,G__11045,G__11046) : self__.dispatch_fn.call(null,G__11039,G__11040,G__11041,G__11042,G__11043,G__11044,G__11045,G__11046));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11047 = a;
var G__11048 = b;
var G__11049 = c;
var G__11050 = d;
var G__11051 = e;
var G__11052 = f;
var G__11053 = g;
var G__11054 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__11047,G__11048,G__11049,G__11050,G__11051,G__11052,G__11053,G__11054) : target_fn.call(null,G__11047,G__11048,G__11049,G__11050,G__11051,G__11052,G__11053,G__11054));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11055 = a;
var G__11056 = b;
var G__11057 = c;
var G__11058 = d;
var G__11059 = e;
var G__11060 = f;
var G__11061 = g;
var G__11062 = h;
var G__11063 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__11055,G__11056,G__11057,G__11058,G__11059,G__11060,G__11061,G__11062,G__11063) : self__.dispatch_fn.call(null,G__11055,G__11056,G__11057,G__11058,G__11059,G__11060,G__11061,G__11062,G__11063));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11064 = a;
var G__11065 = b;
var G__11066 = c;
var G__11067 = d;
var G__11068 = e;
var G__11069 = f;
var G__11070 = g;
var G__11071 = h;
var G__11072 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__11064,G__11065,G__11066,G__11067,G__11068,G__11069,G__11070,G__11071,G__11072) : target_fn.call(null,G__11064,G__11065,G__11066,G__11067,G__11068,G__11069,G__11070,G__11071,G__11072));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11073 = a;
var G__11074 = b;
var G__11075 = c;
var G__11076 = d;
var G__11077 = e;
var G__11078 = f;
var G__11079 = g;
var G__11080 = h;
var G__11081 = i;
var G__11082 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__11073,G__11074,G__11075,G__11076,G__11077,G__11078,G__11079,G__11080,G__11081,G__11082) : self__.dispatch_fn.call(null,G__11073,G__11074,G__11075,G__11076,G__11077,G__11078,G__11079,G__11080,G__11081,G__11082));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11083 = a;
var G__11084 = b;
var G__11085 = c;
var G__11086 = d;
var G__11087 = e;
var G__11088 = f;
var G__11089 = g;
var G__11090 = h;
var G__11091 = i;
var G__11092 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__11083,G__11084,G__11085,G__11086,G__11087,G__11088,G__11089,G__11090,G__11091,G__11092) : target_fn.call(null,G__11083,G__11084,G__11085,G__11086,G__11087,G__11088,G__11089,G__11090,G__11091,G__11092));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11093 = a;
var G__11094 = b;
var G__11095 = c;
var G__11096 = d;
var G__11097 = e;
var G__11098 = f;
var G__11099 = g;
var G__11100 = h;
var G__11101 = i;
var G__11102 = j;
var G__11103 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__11093,G__11094,G__11095,G__11096,G__11097,G__11098,G__11099,G__11100,G__11101,G__11102,G__11103) : self__.dispatch_fn.call(null,G__11093,G__11094,G__11095,G__11096,G__11097,G__11098,G__11099,G__11100,G__11101,G__11102,G__11103));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11104 = a;
var G__11105 = b;
var G__11106 = c;
var G__11107 = d;
var G__11108 = e;
var G__11109 = f;
var G__11110 = g;
var G__11111 = h;
var G__11112 = i;
var G__11113 = j;
var G__11114 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__11104,G__11105,G__11106,G__11107,G__11108,G__11109,G__11110,G__11111,G__11112,G__11113,G__11114) : target_fn.call(null,G__11104,G__11105,G__11106,G__11107,G__11108,G__11109,G__11110,G__11111,G__11112,G__11113,G__11114));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11115 = a;
var G__11116 = b;
var G__11117 = c;
var G__11118 = d;
var G__11119 = e;
var G__11120 = f;
var G__11121 = g;
var G__11122 = h;
var G__11123 = i;
var G__11124 = j;
var G__11125 = k;
var G__11126 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__11115,G__11116,G__11117,G__11118,G__11119,G__11120,G__11121,G__11122,G__11123,G__11124,G__11125,G__11126) : self__.dispatch_fn.call(null,G__11115,G__11116,G__11117,G__11118,G__11119,G__11120,G__11121,G__11122,G__11123,G__11124,G__11125,G__11126));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11127 = a;
var G__11128 = b;
var G__11129 = c;
var G__11130 = d;
var G__11131 = e;
var G__11132 = f;
var G__11133 = g;
var G__11134 = h;
var G__11135 = i;
var G__11136 = j;
var G__11137 = k;
var G__11138 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__11127,G__11128,G__11129,G__11130,G__11131,G__11132,G__11133,G__11134,G__11135,G__11136,G__11137,G__11138) : target_fn.call(null,G__11127,G__11128,G__11129,G__11130,G__11131,G__11132,G__11133,G__11134,G__11135,G__11136,G__11137,G__11138));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11139 = a;
var G__11140 = b;
var G__11141 = c;
var G__11142 = d;
var G__11143 = e;
var G__11144 = f;
var G__11145 = g;
var G__11146 = h;
var G__11147 = i;
var G__11148 = j;
var G__11149 = k;
var G__11150 = l;
var G__11151 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__11139,G__11140,G__11141,G__11142,G__11143,G__11144,G__11145,G__11146,G__11147,G__11148,G__11149,G__11150,G__11151) : self__.dispatch_fn.call(null,G__11139,G__11140,G__11141,G__11142,G__11143,G__11144,G__11145,G__11146,G__11147,G__11148,G__11149,G__11150,G__11151));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11152 = a;
var G__11153 = b;
var G__11154 = c;
var G__11155 = d;
var G__11156 = e;
var G__11157 = f;
var G__11158 = g;
var G__11159 = h;
var G__11160 = i;
var G__11161 = j;
var G__11162 = k;
var G__11163 = l;
var G__11164 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__11152,G__11153,G__11154,G__11155,G__11156,G__11157,G__11158,G__11159,G__11160,G__11161,G__11162,G__11163,G__11164) : target_fn.call(null,G__11152,G__11153,G__11154,G__11155,G__11156,G__11157,G__11158,G__11159,G__11160,G__11161,G__11162,G__11163,G__11164));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11165 = a;
var G__11166 = b;
var G__11167 = c;
var G__11168 = d;
var G__11169 = e;
var G__11170 = f;
var G__11171 = g;
var G__11172 = h;
var G__11173 = i;
var G__11174 = j;
var G__11175 = k;
var G__11176 = l;
var G__11177 = m;
var G__11178 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__11165,G__11166,G__11167,G__11168,G__11169,G__11170,G__11171,G__11172,G__11173,G__11174,G__11175,G__11176,G__11177,G__11178) : self__.dispatch_fn.call(null,G__11165,G__11166,G__11167,G__11168,G__11169,G__11170,G__11171,G__11172,G__11173,G__11174,G__11175,G__11176,G__11177,G__11178));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11179 = a;
var G__11180 = b;
var G__11181 = c;
var G__11182 = d;
var G__11183 = e;
var G__11184 = f;
var G__11185 = g;
var G__11186 = h;
var G__11187 = i;
var G__11188 = j;
var G__11189 = k;
var G__11190 = l;
var G__11191 = m;
var G__11192 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__11179,G__11180,G__11181,G__11182,G__11183,G__11184,G__11185,G__11186,G__11187,G__11188,G__11189,G__11190,G__11191,G__11192) : target_fn.call(null,G__11179,G__11180,G__11181,G__11182,G__11183,G__11184,G__11185,G__11186,G__11187,G__11188,G__11189,G__11190,G__11191,G__11192));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11193 = a;
var G__11194 = b;
var G__11195 = c;
var G__11196 = d;
var G__11197 = e;
var G__11198 = f;
var G__11199 = g;
var G__11200 = h;
var G__11201 = i;
var G__11202 = j;
var G__11203 = k;
var G__11204 = l;
var G__11205 = m;
var G__11206 = n;
var G__11207 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__11193,G__11194,G__11195,G__11196,G__11197,G__11198,G__11199,G__11200,G__11201,G__11202,G__11203,G__11204,G__11205,G__11206,G__11207) : self__.dispatch_fn.call(null,G__11193,G__11194,G__11195,G__11196,G__11197,G__11198,G__11199,G__11200,G__11201,G__11202,G__11203,G__11204,G__11205,G__11206,G__11207));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11208 = a;
var G__11209 = b;
var G__11210 = c;
var G__11211 = d;
var G__11212 = e;
var G__11213 = f;
var G__11214 = g;
var G__11215 = h;
var G__11216 = i;
var G__11217 = j;
var G__11218 = k;
var G__11219 = l;
var G__11220 = m;
var G__11221 = n;
var G__11222 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__11208,G__11209,G__11210,G__11211,G__11212,G__11213,G__11214,G__11215,G__11216,G__11217,G__11218,G__11219,G__11220,G__11221,G__11222) : target_fn.call(null,G__11208,G__11209,G__11210,G__11211,G__11212,G__11213,G__11214,G__11215,G__11216,G__11217,G__11218,G__11219,G__11220,G__11221,G__11222));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11223 = a;
var G__11224 = b;
var G__11225 = c;
var G__11226 = d;
var G__11227 = e;
var G__11228 = f;
var G__11229 = g;
var G__11230 = h;
var G__11231 = i;
var G__11232 = j;
var G__11233 = k;
var G__11234 = l;
var G__11235 = m;
var G__11236 = n;
var G__11237 = o;
var G__11238 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__11223,G__11224,G__11225,G__11226,G__11227,G__11228,G__11229,G__11230,G__11231,G__11232,G__11233,G__11234,G__11235,G__11236,G__11237,G__11238) : self__.dispatch_fn.call(null,G__11223,G__11224,G__11225,G__11226,G__11227,G__11228,G__11229,G__11230,G__11231,G__11232,G__11233,G__11234,G__11235,G__11236,G__11237,G__11238));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11239 = a;
var G__11240 = b;
var G__11241 = c;
var G__11242 = d;
var G__11243 = e;
var G__11244 = f;
var G__11245 = g;
var G__11246 = h;
var G__11247 = i;
var G__11248 = j;
var G__11249 = k;
var G__11250 = l;
var G__11251 = m;
var G__11252 = n;
var G__11253 = o;
var G__11254 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__11239,G__11240,G__11241,G__11242,G__11243,G__11244,G__11245,G__11246,G__11247,G__11248,G__11249,G__11250,G__11251,G__11252,G__11253,G__11254) : target_fn.call(null,G__11239,G__11240,G__11241,G__11242,G__11243,G__11244,G__11245,G__11246,G__11247,G__11248,G__11249,G__11250,G__11251,G__11252,G__11253,G__11254));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11255 = a;
var G__11256 = b;
var G__11257 = c;
var G__11258 = d;
var G__11259 = e;
var G__11260 = f;
var G__11261 = g;
var G__11262 = h;
var G__11263 = i;
var G__11264 = j;
var G__11265 = k;
var G__11266 = l;
var G__11267 = m;
var G__11268 = n;
var G__11269 = o;
var G__11270 = p;
var G__11271 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__11255,G__11256,G__11257,G__11258,G__11259,G__11260,G__11261,G__11262,G__11263,G__11264,G__11265,G__11266,G__11267,G__11268,G__11269,G__11270,G__11271) : self__.dispatch_fn.call(null,G__11255,G__11256,G__11257,G__11258,G__11259,G__11260,G__11261,G__11262,G__11263,G__11264,G__11265,G__11266,G__11267,G__11268,G__11269,G__11270,G__11271));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11272 = a;
var G__11273 = b;
var G__11274 = c;
var G__11275 = d;
var G__11276 = e;
var G__11277 = f;
var G__11278 = g;
var G__11279 = h;
var G__11280 = i;
var G__11281 = j;
var G__11282 = k;
var G__11283 = l;
var G__11284 = m;
var G__11285 = n;
var G__11286 = o;
var G__11287 = p;
var G__11288 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__11272,G__11273,G__11274,G__11275,G__11276,G__11277,G__11278,G__11279,G__11280,G__11281,G__11282,G__11283,G__11284,G__11285,G__11286,G__11287,G__11288) : target_fn.call(null,G__11272,G__11273,G__11274,G__11275,G__11276,G__11277,G__11278,G__11279,G__11280,G__11281,G__11282,G__11283,G__11284,G__11285,G__11286,G__11287,G__11288));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11289 = a;
var G__11290 = b;
var G__11291 = c;
var G__11292 = d;
var G__11293 = e;
var G__11294 = f;
var G__11295 = g;
var G__11296 = h;
var G__11297 = i;
var G__11298 = j;
var G__11299 = k;
var G__11300 = l;
var G__11301 = m;
var G__11302 = n;
var G__11303 = o;
var G__11304 = p;
var G__11305 = q;
var G__11306 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__11289,G__11290,G__11291,G__11292,G__11293,G__11294,G__11295,G__11296,G__11297,G__11298,G__11299,G__11300,G__11301,G__11302,G__11303,G__11304,G__11305,G__11306) : self__.dispatch_fn.call(null,G__11289,G__11290,G__11291,G__11292,G__11293,G__11294,G__11295,G__11296,G__11297,G__11298,G__11299,G__11300,G__11301,G__11302,G__11303,G__11304,G__11305,G__11306));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11307 = a;
var G__11308 = b;
var G__11309 = c;
var G__11310 = d;
var G__11311 = e;
var G__11312 = f;
var G__11313 = g;
var G__11314 = h;
var G__11315 = i;
var G__11316 = j;
var G__11317 = k;
var G__11318 = l;
var G__11319 = m;
var G__11320 = n;
var G__11321 = o;
var G__11322 = p;
var G__11323 = q;
var G__11324 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__11307,G__11308,G__11309,G__11310,G__11311,G__11312,G__11313,G__11314,G__11315,G__11316,G__11317,G__11318,G__11319,G__11320,G__11321,G__11322,G__11323,G__11324) : target_fn.call(null,G__11307,G__11308,G__11309,G__11310,G__11311,G__11312,G__11313,G__11314,G__11315,G__11316,G__11317,G__11318,G__11319,G__11320,G__11321,G__11322,G__11323,G__11324));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11325 = a;
var G__11326 = b;
var G__11327 = c;
var G__11328 = d;
var G__11329 = e;
var G__11330 = f;
var G__11331 = g;
var G__11332 = h;
var G__11333 = i;
var G__11334 = j;
var G__11335 = k;
var G__11336 = l;
var G__11337 = m;
var G__11338 = n;
var G__11339 = o;
var G__11340 = p;
var G__11341 = q;
var G__11342 = r;
var G__11343 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__11325,G__11326,G__11327,G__11328,G__11329,G__11330,G__11331,G__11332,G__11333,G__11334,G__11335,G__11336,G__11337,G__11338,G__11339,G__11340,G__11341,G__11342,G__11343) : self__.dispatch_fn.call(null,G__11325,G__11326,G__11327,G__11328,G__11329,G__11330,G__11331,G__11332,G__11333,G__11334,G__11335,G__11336,G__11337,G__11338,G__11339,G__11340,G__11341,G__11342,G__11343));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11344 = a;
var G__11345 = b;
var G__11346 = c;
var G__11347 = d;
var G__11348 = e;
var G__11349 = f;
var G__11350 = g;
var G__11351 = h;
var G__11352 = i;
var G__11353 = j;
var G__11354 = k;
var G__11355 = l;
var G__11356 = m;
var G__11357 = n;
var G__11358 = o;
var G__11359 = p;
var G__11360 = q;
var G__11361 = r;
var G__11362 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__11344,G__11345,G__11346,G__11347,G__11348,G__11349,G__11350,G__11351,G__11352,G__11353,G__11354,G__11355,G__11356,G__11357,G__11358,G__11359,G__11360,G__11361,G__11362) : target_fn.call(null,G__11344,G__11345,G__11346,G__11347,G__11348,G__11349,G__11350,G__11351,G__11352,G__11353,G__11354,G__11355,G__11356,G__11357,G__11358,G__11359,G__11360,G__11361,G__11362));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11363 = a;
var G__11364 = b;
var G__11365 = c;
var G__11366 = d;
var G__11367 = e;
var G__11368 = f;
var G__11369 = g;
var G__11370 = h;
var G__11371 = i;
var G__11372 = j;
var G__11373 = k;
var G__11374 = l;
var G__11375 = m;
var G__11376 = n;
var G__11377 = o;
var G__11378 = p;
var G__11379 = q;
var G__11380 = r;
var G__11381 = s;
var G__11382 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__11363,G__11364,G__11365,G__11366,G__11367,G__11368,G__11369,G__11370,G__11371,G__11372,G__11373,G__11374,G__11375,G__11376,G__11377,G__11378,G__11379,G__11380,G__11381,G__11382) : self__.dispatch_fn.call(null,G__11363,G__11364,G__11365,G__11366,G__11367,G__11368,G__11369,G__11370,G__11371,G__11372,G__11373,G__11374,G__11375,G__11376,G__11377,G__11378,G__11379,G__11380,G__11381,G__11382));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11383 = a;
var G__11384 = b;
var G__11385 = c;
var G__11386 = d;
var G__11387 = e;
var G__11388 = f;
var G__11389 = g;
var G__11390 = h;
var G__11391 = i;
var G__11392 = j;
var G__11393 = k;
var G__11394 = l;
var G__11395 = m;
var G__11396 = n;
var G__11397 = o;
var G__11398 = p;
var G__11399 = q;
var G__11400 = r;
var G__11401 = s;
var G__11402 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__11383,G__11384,G__11385,G__11386,G__11387,G__11388,G__11389,G__11390,G__11391,G__11392,G__11393,G__11394,G__11395,G__11396,G__11397,G__11398,G__11399,G__11400,G__11401,G__11402) : target_fn.call(null,G__11383,G__11384,G__11385,G__11386,G__11387,G__11388,G__11389,G__11390,G__11391,G__11392,G__11393,G__11394,G__11395,G__11396,G__11397,G__11398,G__11399,G__11400,G__11401,G__11402));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function cljs$core$__GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
 * Removes all of the methods of multimethod.
 */
cljs.core.remove_all_methods = (function cljs$core$remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
 * Removes the method of multimethod associated with dispatch-value.
 */
cljs.core.remove_method = (function cljs$core$remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
 * Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
 * when there is a conflict
 */
cljs.core.prefer_method = (function cljs$core$prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
 * Given a multimethod, returns a map of dispatch values -> dispatch fns
 */
cljs.core.methods$ = (function cljs$core$methods(multifn){
return cljs.core._methods(multifn);
});
/**
 * Given a multimethod and a dispatch value, returns the dispatch fn
 * that would apply to that value, or nil if none apply and no default
 */
cljs.core.get_method = (function cljs$core$get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
 * Given a multimethod, returns a map of preferred value -> set of other values
 */
cljs.core.prefers = (function cljs$core$prefers(multifn){
return cljs.core._prefers(multifn);
});
/**
 * Given a multimethod, return it's default-dispatch-val.
 */
cljs.core.default_dispatch_val = (function cljs$core$default_dispatch_val(multifn){
return cljs.core._default_dispatch_val(multifn);
});
/**
 * Given a multimethod, return it's dispatch-fn.
 */
cljs.core.dispatch_fn = (function cljs$core$dispatch_fn(multifn){
return cljs.core._dispatch_fn(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 2048;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
var G__11404 = self__.uuid;
var G__11405 = other.uuid;
return goog.array.defaultCompare(G__11404,G__11405);
});

cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__11406 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__11406);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function cljs$core$__GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});

cljs.core.pr_writer_ex_info = (function cljs$core$pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
 * @constructor
 */
cljs.core.ExceptionInfo = (function cljs$core$ExceptionInfo(message,data,cause){
var e = (new Error());
var this$ = this;
this$.message = message;

this$.data = data;

this$.cause = cause;

this$.name = e.name;

this$.description = e.description;

this$.number = e.number;

this$.fileName = e.fileName;

this$.lineNumber = e.lineNumber;

this$.columnNumber = e.columnNumber;

this$.stack = e.stack;

return this$;
});
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});
cljs.core.ExceptionInfo.prototype.toString = (function (){
var this$ = this;
return cljs.core.pr_str_STAR_(this$);
});
/**
 * Alpha - subject to change.
 * Create an instance of ExceptionInfo, an Error type that carries a
 * map of additional data.
 */
cljs.core.ex_info = (function() {
var cljs$core$ex_info = null;
var cljs$core$ex_info__2 = (function (msg,data){
return cljs$core$ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var cljs$core$ex_info__3 = (function (msg,data,cause){
return (new cljs.core.ExceptionInfo(msg,data,cause));
});
cljs$core$ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return cljs$core$ex_info__2.call(this,msg,data);
case 3:
return cljs$core$ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$ex_info.cljs$core$IFn$_invoke$arity$2 = cljs$core$ex_info__2;
cljs$core$ex_info.cljs$core$IFn$_invoke$arity$3 = cljs$core$ex_info__3;
return cljs$core$ex_info;
})()
;
/**
 * Alpha - subject to change.
 * Returns exception data (a map) if ex is an ExceptionInfo.
 * Otherwise returns nil.
 */
cljs.core.ex_data = (function cljs$core$ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
 * Alpha - subject to change.
 * Returns the message attached to the given Error / ExceptionInfo object.
 * For non-Errors returns nil.
 */
cljs.core.ex_message = (function cljs$core$ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
 * Alpha - subject to change.
 * Returns exception cause (an Error / ExceptionInfo) if ex is an
 * ExceptionInfo.
 * Otherwise returns nil.
 */
cljs.core.ex_cause = (function cljs$core$ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
 * Returns an JavaScript compatible comparator based upon pred.
 */
cljs.core.comparator = (function cljs$core$comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__11414 = x;
var G__11415 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__11414,G__11415) : pred.call(null,G__11414,G__11415));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__11416 = y;
var G__11417 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__11416,G__11417) : pred.call(null,G__11416,G__11417));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function cljs$core$special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
 * test [v] finds fn at key :test in var metadata and calls it,
 * presuming failure will throw exception
 */
cljs.core.test = (function cljs$core$test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map